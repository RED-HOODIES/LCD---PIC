

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Dec 03 02:04:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F25K50 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   000F5E                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _msg2
    63   000F5E  51                 	db	81
    64   000F5F  75                 	db	117
    65   000F60  69                 	db	105
    66   000F61  65                 	db	101
    67   000F62  6E                 	db	110
    68   000F63  20                 	db	32
    69   000F64  65                 	db	101
    70   000F65  72                 	db	114
    71   000F66  65                 	db	101
    72   000F67  73                 	db	115
    73   000F68  3F                 	db	63
    74   000F69  00                 	db	0
    75                           
    76                           ;initializer for _msg1
    77   000F6A  48                 	db	72
    78   000F6B  6F                 	db	111
    79   000F6C  6C                 	db	108
    80   000F6D  61                 	db	97
    81   000F6E  20                 	db	32
    82   000F6F  4D                 	db	77
    83   000F70  75                 	db	117
    84   000F71  6E                 	db	110
    85   000F72  64                 	db	100
    86   000F73  6F                 	db	111
    87   000F74  00                 	db	0
    88                           
    89                           ;initializer for _msg5
    90   000F75  01                 	db	1
    91   000F76  02                 	db	2
    92   000F77  C2                 	db	194
    93   000F78  00                 	db	0
    94   000F79  00                 	db	0
    95   000F7A  00                 	db	0
    96                           
    97                           ;initializer for _msg4
    98   000F7B  28                 	db	40
    99   000F7C  03                 	db	3
   100   000F7D  5F                 	db	95
   101   000F7E  03                 	db	3
   102   000F7F  29                 	db	41
   103                           
   104                           ;initializer for _displaybf
   105   000F80  4B                 	db	75
   106   000F81  4F                 	db	79
   107   000F82  4C                 	db	76
   108   000F83  00                 	db	0
   109                           
   110                           ;initializer for _cont
   111   000F84  7C                 	db	124
   112                           
   113                           ;initializer for _msg3
   114   000F85  01                 	db	1
   115   000F86  02                 	db	2
   116   000F87  5F                 	db	95
   117   000F88  28                 	db	40
   118   000F89  C2                 	db	194
   119   000F8A  29                 	db	41
   120   000F8B  5F                 	db	95
   121   000F8C  2F                 	db	47
   122   000F8D  01                 	db	1
   123                           
   124                           ;initializer for _fig
   125   000F8E  8E                 	db	142
   126   000F8F  8E                 	db	142
   127   000F90  84                 	db	132
   128   000F91  9F                 	db	159
   129   000F92  95                 	db	149
   130   000F93  8A                 	db	138
   131   000F94  91                 	db	145
   132   000F95  80                 	db	128
   133                           
   134                           ;initializer for _C3
   135   000F96  00                 	db	0
   136   000F97  00                 	db	0
   137   000F98  1F                 	db	31
   138   000F99  0A                 	db	10
   139   000F9A  0A                 	db	10
   140   000F9B  0A                 	db	10
   141   000F9C  0A                 	db	10
   142                           
   143                           ;initializer for _C2
   144   000F9D  00                 	db	0
   145   000F9E  10                 	db	16
   146   000F9F  08                 	db	8
   147   000FA0  04                 	db	4
   148   000FA1  02                 	db	2
   149   000FA2  01                 	db	1
   150   000FA3  00                 	db	0
   151                           
   152                           ;initializer for _C1
   153   000FA4  1F                 	db	31
   154   000FA5  00                 	db	0
   155   000FA6  00                 	db	0
   156   000FA7  00                 	db	0
   157   000FA8  00                 	db	0
   158   000FA9  00                 	db	0
   159   000FAA  00                 	db	0
   160                           
   161                           	psect	nvCOMRAM
   162   00005D                     __pnvCOMRAM:
   163                           	callstack 0
   164   00005D                     _LCD_busy_cnt:
   165                           	callstack 0
   166   00005D                     	ds	1
   167   000000                     _TRISA	set	3986
   168   000000                     _PORTAbits	set	3968
   169   000000                     _LATAbits	set	3977
   170   000000                     _TRISAbits	set	3986
   171                           
   172                           	psect	smallconst
   173   000800                     __psmallconst:
   174                           	callstack 0
   175   000800  00                 	db	0
   176   000801                     STR_1:
   177   000801  54                 	db	84	;'T'
   178   000802  65                 	db	101	;'e'
   179   000803  73                 	db	115	;'s'
   180   000804  74                 	db	116	;'t'
   181   000805  65                 	db	101	;'e'
   182   000806  6F                 	db	111	;'o'
   183   000807  2E                 	db	46
   184   000808  2E                 	db	46
   185   000809  2E                 	db	46
   186   00080A  2E                 	db	46
   187   00080B  00                 	db	0
   188   00080C  00                 	db	0	; dummy byte at the end
   189   000000                     
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193   000FF8                     __pcinit:
   194                           	callstack 0
   195   000FF8                     start_initialization:
   196                           	callstack 0
   197   000FF8                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Initialize objects allocated to COMRAM (77 bytes)
   201                           ; load TBLPTR registers with __pidataCOMRAM
   202   000FF8  0E5E               	movlw	low __pidataCOMRAM
   203   000FFA  6EF6               	movwf	tblptrl,c
   204   000FFC  0E0F               	movlw	high __pidataCOMRAM
   205   000FFE  6EF7               	movwf	tblptrh,c
   206   001000  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   207   001002  6EF8               	movwf	tblptru,c
   208   001004  EE00  F001         	lfsr	0,__pdataCOMRAM
   209   001008  EE10 F04D          	lfsr	1,77
   210   00100C                     copy_data0:
   211   00100C  0009               	tblrd		*+
   212   00100E  CFF5 FFEE          	movff	tablat,postinc0
   213   001012  50E5               	movf	postdec1,w,c
   214   001014  50E1               	movf	fsr1l,w,c
   215   001016  E1FA               	bnz	copy_data0
   216                           
   217                           ; Clear objects allocated to COMRAM (3 bytes)
   218   001018  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   219   00101A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   220   00101C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   221   00101E                     end_of_initialization:
   222                           	callstack 0
   223   00101E                     __end_of__initialization:
   224                           	callstack 0
   225   00101E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226   001020  6EF8               	movwf	tblptru,c
   227   001022  0100               	movlb	0
   228   001024  EF07  F004         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   00005A                     __pbssCOMRAM:
   232                           	callstack 0
   233   00005A                     __displaymode:
   234                           	callstack 0
   235   00005A                     	ds	1
   236   00005B                     __displaycontrol:
   237                           	callstack 0
   238   00005B                     	ds	1
   239   00005C                     _LCD_data:
   240                           	callstack 0
   241   00005C                     	ds	1
   242                           
   243                           	psect	dataCOMRAM
   244   000001                     __pdataCOMRAM:
   245                           	callstack 0
   246   000001                     _msg2:
   247                           	callstack 0
   248   000001                     	ds	12
   249   00000D                     _msg1:
   250                           	callstack 0
   251   00000D                     	ds	11
   252   000018                     _msg5:
   253                           	callstack 0
   254   000018                     	ds	6
   255   00001E                     _msg4:
   256                           	callstack 0
   257   00001E                     	ds	5
   258   000023                     _displaybf:
   259                           	callstack 0
   260   000023                     	ds	4
   261   000027                     _cont:
   262                           	callstack 0
   263   000027                     	ds	1
   264   000028                     _msg3:
   265                           	callstack 0
   266   000028                     	ds	9
   267   000031                     _fig:
   268                           	callstack 0
   269   000031                     	ds	8
   270   000039                     _C3:
   271                           	callstack 0
   272   000039                     	ds	7
   273   000040                     _C2:
   274                           	callstack 0
   275   000040                     	ds	7
   276   000047                     _C1:
   277                           	callstack 0
   278   000047                     	ds	7
   279                           
   280                           	psect	cstackCOMRAM
   281   00004E                     __pcstackCOMRAM:
   282                           	callstack 0
   283   00004E                     LCD_Write@mode:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x0
   287   00004E                     	ds	1
   288   00004F                     LCD_Write@value:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x1
   292   00004F                     	ds	1
   293   000050                     ??_LCD_Init:
   294   000050                     LCD_Text@pt:
   295                           	callstack 0
   296   000050                     LCD_CustomChar@pt:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x2
   300   000050                     	ds	2
   301   000052                     LCD_Text@text:
   302                           	callstack 0
   303   000052                     LCD_CustomChar@c:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x4
   307   000052                     	ds	2
   308   000054                     LCD_CustomChar@i:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x6
   312   000054                     	ds	1
   313   000055                     ??_main:
   314                           
   315                           ; 1 bytes @ 0x7
   316   000055                     	ds	2
   317   000057                     main@valid:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x9
   321   000057                     	ds	1
   322   000058                     main@j:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0xA
   326   000058                     	ds	1
   327   000059                     main@i:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0xB
   331   000059                     	ds	1
   332                           
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 35 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;  i               1   11[COMRAM] unsigned char 
   343 ;;  j               1   10[COMRAM] unsigned char 
   344 ;;  valid           1    9[COMRAM] unsigned char 
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         3       0       0       0       0       0       0       0       0
   356 ;;      Temps:          2       0       0       0       0       0       0       0       0
   357 ;;      Totals:         5       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:        5 bytes
   359 ;; Hardware stack levels required when called: 2
   360 ;; This function calls:
   361 ;;		_LCD_Busy
   362 ;;		_LCD_CustomChar
   363 ;;		_LCD_Init
   364 ;;		_LCD_Text
   365 ;;		_LCD_Write
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372   00080E                     __ptext0:
   373                           	callstack 0
   374   00080E                     _main:
   375                           	callstack 29
   376   00080E                     
   377                           ;main.c: 37:     LCD_Init();
   378   00080E  EC79  F006         	call	_LCD_Init	;wreg free
   379   000812                     l1384:
   380   000812  EC88  F007         	call	_LCD_Busy	;wreg free
   381   000816  0900               	iorlw	0
   382   000818  A4D8               	btfss	status,2,c
   383   00081A  EF11  F004         	goto	u991
   384   00081E  EF13  F004         	goto	u990
   385   000822                     u991:
   386   000822  EF09  F004         	goto	l1384
   387   000826                     u990:
   388   000826  9689               	bcf	137,3,c	;volatile
   389   000828  0E01               	movlw	1
   390   00082A  6E4E               	movwf	LCD_Write@mode^0,c
   391   00082C  0E40               	movlw	64
   392   00082E  EC4F  F007         	call	_LCD_Write
   393   000832  0E31               	movlw	low _fig
   394   000834  6E50               	movwf	LCD_CustomChar@pt^0,c
   395   000836  0E00               	movlw	high _fig
   396   000838  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   397   00083A  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   398   00083E                     l1390:
   399   00083E  EC88  F007         	call	_LCD_Busy	;wreg free
   400   000842  0900               	iorlw	0
   401   000844  A4D8               	btfss	status,2,c
   402   000846  EF27  F004         	goto	u1001
   403   00084A  EF29  F004         	goto	u1000
   404   00084E                     u1001:
   405   00084E  EF1F  F004         	goto	l1390
   406   000852                     u1000:
   407   000852  9689               	bcf	137,3,c	;volatile
   408   000854  0E01               	movlw	1
   409   000856  6E4E               	movwf	LCD_Write@mode^0,c
   410   000858  0E48               	movlw	72
   411   00085A  EC4F  F007         	call	_LCD_Write
   412   00085E  0E47               	movlw	low _C1
   413   000860  6E50               	movwf	LCD_CustomChar@pt^0,c
   414   000862  0E00               	movlw	high _C1
   415   000864  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   416   000866  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   417   00086A                     l1396:
   418   00086A  EC88  F007         	call	_LCD_Busy	;wreg free
   419   00086E  0900               	iorlw	0
   420   000870  A4D8               	btfss	status,2,c
   421   000872  EF3D  F004         	goto	u1011
   422   000876  EF3F  F004         	goto	u1010
   423   00087A                     u1011:
   424   00087A  EF35  F004         	goto	l1396
   425   00087E                     u1010:
   426   00087E  9689               	bcf	137,3,c	;volatile
   427   000880  0E01               	movlw	1
   428   000882  6E4E               	movwf	LCD_Write@mode^0,c
   429   000884  0E50               	movlw	80
   430   000886  EC4F  F007         	call	_LCD_Write
   431   00088A  0E40               	movlw	low _C2
   432   00088C  6E50               	movwf	LCD_CustomChar@pt^0,c
   433   00088E  0E00               	movlw	high _C2
   434   000890  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   435   000892  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   436   000896                     l1402:
   437   000896  EC88  F007         	call	_LCD_Busy	;wreg free
   438   00089A  0900               	iorlw	0
   439   00089C  A4D8               	btfss	status,2,c
   440   00089E  EF53  F004         	goto	u1021
   441   0008A2  EF55  F004         	goto	u1020
   442   0008A6                     u1021:
   443   0008A6  EF4B  F004         	goto	l1402
   444   0008AA                     u1020:
   445   0008AA  9689               	bcf	137,3,c	;volatile
   446   0008AC  0E01               	movlw	1
   447   0008AE  6E4E               	movwf	LCD_Write@mode^0,c
   448   0008B0  0E58               	movlw	88
   449   0008B2  EC4F  F007         	call	_LCD_Write
   450   0008B6  0E39               	movlw	low _C3
   451   0008B8  6E50               	movwf	LCD_CustomChar@pt^0,c
   452   0008BA  0E00               	movlw	high _C3
   453   0008BC  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   454   0008BE  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   455   0008C2                     l1408:
   456   0008C2  EC88  F007         	call	_LCD_Busy	;wreg free
   457   0008C6  0900               	iorlw	0
   458   0008C8  A4D8               	btfss	status,2,c
   459   0008CA  EF69  F004         	goto	u1031
   460   0008CE  EF6B  F004         	goto	u1030
   461   0008D2                     u1031:
   462   0008D2  EF61  F004         	goto	l1408
   463   0008D6                     u1030:
   464   0008D6  9689               	bcf	137,3,c	;volatile
   465   0008D8  0E01               	movlw	1
   466   0008DA  6E4E               	movwf	LCD_Write@mode^0,c
   467   0008DC  0E80               	movlw	128
   468   0008DE  EC4F  F007         	call	_LCD_Write
   469   0008E2                     
   470                           ;main.c: 47:     LCD_Text("Testeo....");
   471   0008E2  0E01               	movlw	low STR_1
   472   0008E4  6E50               	movwf	LCD_Text@pt^0,c
   473   0008E6  0E08               	movlw	high STR_1
   474   0008E8  6E51               	movwf	(LCD_Text@pt+1)^0,c
   475   0008EA  EC0F  F007         	call	_LCD_Text	;wreg free
   476   0008EE                     l1414:
   477   0008EE  EC88  F007         	call	_LCD_Busy	;wreg free
   478   0008F2  0900               	iorlw	0
   479   0008F4  A4D8               	btfss	status,2,c
   480   0008F6  EF7F  F004         	goto	u1041
   481   0008FA  EF81  F004         	goto	u1040
   482   0008FE                     u1041:
   483   0008FE  EF77  F004         	goto	l1414
   484   000902                     u1040:
   485   000902  8689               	bsf	137,3,c	;volatile
   486   000904  0E01               	movlw	1
   487   000906  6E4E               	movwf	LCD_Write@mode^0,c
   488   000908  0E08               	movlw	8
   489   00090A  EC4F  F007         	call	_LCD_Write
   490   00090E                     
   491                           ;main.c: 53:     _displaycontrol |= 0x02; while(LCD_Busy()); LATAbits.LATA3 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   492   00090E  825B               	bsf	__displaycontrol^0,1,c
   493   000910                     l1420:
   494   000910  EC88  F007         	call	_LCD_Busy	;wreg free
   495   000914  0900               	iorlw	0
   496   000916  A4D8               	btfss	status,2,c
   497   000918  EF90  F004         	goto	u1051
   498   00091C  EF92  F004         	goto	u1050
   499   000920                     u1051:
   500   000920  EF88  F004         	goto	l1420
   501   000924                     u1050:
   502   000924  9689               	bcf	137,3,c	;volatile
   503   000926  0E01               	movlw	1
   504   000928  6E4E               	movwf	LCD_Write@mode^0,c
   505   00092A  505B               	movf	__displaycontrol^0,w,c
   506   00092C  0908               	iorlw	8
   507   00092E  EC4F  F007         	call	_LCD_Write
   508   000932                     
   509                           ;main.c: 54:     _displaycontrol |= 0x01; while(LCD_Busy()); LATAbits.LATA3 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   510   000932  805B               	bsf	__displaycontrol^0,0,c
   511   000934                     l1426:
   512   000934  EC88  F007         	call	_LCD_Busy	;wreg free
   513   000938  0900               	iorlw	0
   514   00093A  A4D8               	btfss	status,2,c
   515   00093C  EFA2  F004         	goto	u1061
   516   000940  EFA4  F004         	goto	u1060
   517   000944                     u1061:
   518   000944  EF9A  F004         	goto	l1426
   519   000948                     u1060:
   520   000948  9689               	bcf	137,3,c	;volatile
   521   00094A  0E01               	movlw	1
   522   00094C  6E4E               	movwf	LCD_Write@mode^0,c
   523   00094E  505B               	movf	__displaycontrol^0,w,c
   524   000950  0908               	iorlw	8
   525   000952  EC4F  F007         	call	_LCD_Write
   526   000956                     l1430:
   527                           
   528                           ;main.c: 59:         for (j = 0; j < 4; j++) {
   529   000956  0E00               	movlw	0
   530   000958  6E58               	movwf	main@j^0,c
   531   00095A                     l1436:
   532   00095A  EC88  F007         	call	_LCD_Busy	;wreg free
   533   00095E  0900               	iorlw	0
   534   000960  A4D8               	btfss	status,2,c
   535   000962  EFB5  F004         	goto	u1071
   536   000966  EFB7  F004         	goto	u1070
   537   00096A                     u1071:
   538   00096A  EFAD  F004         	goto	l1436
   539   00096E                     u1070:
   540   00096E  9689               	bcf	137,3,c	;volatile
   541   000970  0E01               	movlw	1
   542   000972  6E4E               	movwf	LCD_Write@mode^0,c
   543   000974  0EC0               	movlw	192
   544   000976  EC4F  F007         	call	_LCD_Write
   545   00097A                     
   546                           ;main.c: 61:             _displaycontrol |= 0x01; while(LCD_Busy()); LATAbits.LATA3 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   547   00097A  805B               	bsf	__displaycontrol^0,0,c
   548   00097C                     l1442:
   549   00097C  EC88  F007         	call	_LCD_Busy	;wreg free
   550   000980  0900               	iorlw	0
   551   000982  A4D8               	btfss	status,2,c
   552   000984  EFC6  F004         	goto	u1081
   553   000988  EFC8  F004         	goto	u1080
   554   00098C                     u1081:
   555   00098C  EFBE  F004         	goto	l1442
   556   000990                     u1080:
   557   000990  9689               	bcf	137,3,c	;volatile
   558   000992  0E01               	movlw	1
   559   000994  6E4E               	movwf	LCD_Write@mode^0,c
   560   000996  505B               	movf	__displaycontrol^0,w,c
   561   000998  0908               	iorlw	8
   562   00099A  EC4F  F007         	call	_LCD_Write
   563   00099E                     
   564                           ;main.c: 62:             _delay((unsigned long)((1500)*(1000000/4000.0)));
   565   00099E  0E02               	movlw	2
   566   0009A0  6E56               	movwf	(??_main+1)^0,c
   567   0009A2  0EE7               	movlw	231
   568   0009A4  6E55               	movwf	??_main^0,c
   569   0009A6  0E00               	movlw	0
   570   0009A8                     u1387:
   571   0009A8  2EE8               	decfsz	wreg,f,c
   572   0009AA  D7FE               	bra	u1387
   573   0009AC  2E55               	decfsz	??_main^0,f,c
   574   0009AE  D7FC               	bra	u1387
   575   0009B0  2E56               	decfsz	(??_main+1)^0,f,c
   576   0009B2  D7FA               	bra	u1387
   577   0009B4  D000               	nop2	
   578   0009B6                     
   579                           ;main.c: 63:             _displaymode |= 0x02;; while(LCD_Busy()); LATAbits.LATA3 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   580   0009B6  825A               	bsf	__displaymode^0,1,c
   581   0009B8                     l1450:
   582   0009B8  EC88  F007         	call	_LCD_Busy	;wreg free
   583   0009BC  0900               	iorlw	0
   584   0009BE  A4D8               	btfss	status,2,c
   585   0009C0  EFE4  F004         	goto	u1091
   586   0009C4  EFE6  F004         	goto	u1090
   587   0009C8                     u1091:
   588   0009C8  EFDC  F004         	goto	l1450
   589   0009CC                     u1090:
   590   0009CC  9689               	bcf	137,3,c	;volatile
   591   0009CE  0E01               	movlw	1
   592   0009D0  6E4E               	movwf	LCD_Write@mode^0,c
   593   0009D2  505A               	movf	__displaymode^0,w,c
   594   0009D4  0904               	iorlw	4
   595   0009D6  EC4F  F007         	call	_LCD_Write
   596   0009DA                     
   597                           ;main.c: 64:             i = 0;
   598   0009DA  0E00               	movlw	0
   599   0009DC  6E59               	movwf	main@i^0,c
   600   0009DE                     
   601                           ;main.c: 65:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATAbits.LATA3 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   602   0009DE  905B               	bcf	__displaycontrol^0,0,c
   603   0009E0                     l1458:
   604   0009E0  EC88  F007         	call	_LCD_Busy	;wreg free
   605   0009E4  0900               	iorlw	0
   606   0009E6  A4D8               	btfss	status,2,c
   607   0009E8  EFF8  F004         	goto	u1101
   608   0009EC  EFFA  F004         	goto	u1100
   609   0009F0                     u1101:
   610   0009F0  EFF0  F004         	goto	l1458
   611   0009F4                     u1100:
   612   0009F4  9689               	bcf	137,3,c	;volatile
   613   0009F6  0E01               	movlw	1
   614   0009F8  6E4E               	movwf	LCD_Write@mode^0,c
   615   0009FA  505B               	movf	__displaycontrol^0,w,c
   616   0009FC  0908               	iorlw	8
   617   0009FE  EC4F  F007         	call	_LCD_Write
   618   000A02  EF8F  F005         	goto	l1488
   619   000A06                     l1462:
   620                           
   621                           ;main.c: 69:                         valid = i < (sizeof (msg1) - 2);
   622   000A06  0E08               	movlw	8
   623   000A08  6459               	cpfsgt	main@i^0,c
   624   000A0A  EF09  F005         	goto	u1111
   625   000A0E  EF0C  F005         	goto	u1110
   626   000A12                     u1111:
   627   000A12  0E01               	movlw	1
   628   000A14  EF0D  F005         	goto	u1120
   629   000A18                     u1110:
   630   000A18  0E00               	movlw	0
   631   000A1A                     u1120:
   632   000A1A  6E57               	movwf	main@valid^0,c
   633   000A1C                     l1464:
   634   000A1C  EC88  F007         	call	_LCD_Busy	;wreg free
   635   000A20  0900               	iorlw	0
   636   000A22  A4D8               	btfss	status,2,c
   637   000A24  EF16  F005         	goto	u1131
   638   000A28  EF18  F005         	goto	u1130
   639   000A2C                     u1131:
   640   000A2C  EF0E  F005         	goto	l1464
   641   000A30                     u1130:
   642   000A30  8689               	bsf	137,3,c	;volatile
   643   000A32  0E01               	movlw	1
   644   000A34  6E4E               	movwf	LCD_Write@mode^0,c
   645   000A36  0E0D               	movlw	low _msg1
   646   000A38  2459               	addwf	main@i^0,w,c
   647   000A3A  6ED9               	movwf	fsr2l,c
   648   000A3C  6ADA               	clrf	fsr2h,c
   649   000A3E  0E00               	movlw	high _msg1
   650   000A40  22DA               	addwfc	fsr2h,f,c
   651   000A42  50DF               	movf	indf2,w,c
   652   000A44  EC4F  F007         	call	_LCD_Write
   653                           
   654                           ;main.c: 71:                         break;
   655   000A48  EFA8  F005         	goto	l1490
   656   000A4C                     l1468:
   657                           
   658                           ;main.c: 73:                         valid = i < (sizeof (msg2) - 2);
   659   000A4C  0E09               	movlw	9
   660   000A4E  6459               	cpfsgt	main@i^0,c
   661   000A50  EF2C  F005         	goto	u1141
   662   000A54  EF2F  F005         	goto	u1140
   663   000A58                     u1141:
   664   000A58  0E01               	movlw	1
   665   000A5A  EF30  F005         	goto	u1150
   666   000A5E                     u1140:
   667   000A5E  0E00               	movlw	0
   668   000A60                     u1150:
   669   000A60  6E57               	movwf	main@valid^0,c
   670   000A62                     l1470:
   671   000A62  EC88  F007         	call	_LCD_Busy	;wreg free
   672   000A66  0900               	iorlw	0
   673   000A68  A4D8               	btfss	status,2,c
   674   000A6A  EF39  F005         	goto	u1161
   675   000A6E  EF3B  F005         	goto	u1160
   676   000A72                     u1161:
   677   000A72  EF31  F005         	goto	l1470
   678   000A76                     u1160:
   679   000A76  8689               	bsf	137,3,c	;volatile
   680   000A78  0E01               	movlw	1
   681   000A7A  6E4E               	movwf	LCD_Write@mode^0,c
   682   000A7C  0E01               	movlw	low _msg2
   683   000A7E  2459               	addwf	main@i^0,w,c
   684   000A80  6ED9               	movwf	fsr2l,c
   685   000A82  6ADA               	clrf	fsr2h,c
   686   000A84  0E00               	movlw	high _msg2
   687   000A86  22DA               	addwfc	fsr2h,f,c
   688   000A88  50DF               	movf	indf2,w,c
   689   000A8A  EC4F  F007         	call	_LCD_Write
   690                           
   691                           ;main.c: 75:                         break;
   692   000A8E  EFA8  F005         	goto	l1490
   693   000A92                     l1474:
   694                           
   695                           ;main.c: 77:                         valid = i < (sizeof (msg3) - 1);
   696   000A92  0E07               	movlw	7
   697   000A94  6459               	cpfsgt	main@i^0,c
   698   000A96  EF4F  F005         	goto	u1171
   699   000A9A  EF52  F005         	goto	u1170
   700   000A9E                     u1171:
   701   000A9E  0E01               	movlw	1
   702   000AA0  EF53  F005         	goto	u1180
   703   000AA4                     u1170:
   704   000AA4  0E00               	movlw	0
   705   000AA6                     u1180:
   706   000AA6  6E57               	movwf	main@valid^0,c
   707   000AA8                     l1476:
   708   000AA8  EC88  F007         	call	_LCD_Busy	;wreg free
   709   000AAC  0900               	iorlw	0
   710   000AAE  A4D8               	btfss	status,2,c
   711   000AB0  EF5C  F005         	goto	u1191
   712   000AB4  EF5E  F005         	goto	u1190
   713   000AB8                     u1191:
   714   000AB8  EF54  F005         	goto	l1476
   715   000ABC                     u1190:
   716   000ABC  8689               	bsf	137,3,c	;volatile
   717   000ABE  0E01               	movlw	1
   718   000AC0  6E4E               	movwf	LCD_Write@mode^0,c
   719   000AC2  0E28               	movlw	low _msg3
   720   000AC4  2459               	addwf	main@i^0,w,c
   721   000AC6  6ED9               	movwf	fsr2l,c
   722   000AC8  6ADA               	clrf	fsr2h,c
   723   000ACA  0E00               	movlw	high _msg3
   724   000ACC  22DA               	addwfc	fsr2h,f,c
   725   000ACE  50DF               	movf	indf2,w,c
   726   000AD0  EC4F  F007         	call	_LCD_Write
   727                           
   728                           ;main.c: 79:                         break;
   729   000AD4  EFA8  F005         	goto	l1490
   730   000AD8                     l1480:
   731                           
   732                           ;main.c: 81:                         valid = i < (sizeof (msg4) - 1);
   733   000AD8  0E03               	movlw	3
   734   000ADA  6459               	cpfsgt	main@i^0,c
   735   000ADC  EF72  F005         	goto	u1201
   736   000AE0  EF75  F005         	goto	u1200
   737   000AE4                     u1201:
   738   000AE4  0E01               	movlw	1
   739   000AE6  EF76  F005         	goto	u1210
   740   000AEA                     u1200:
   741   000AEA  0E00               	movlw	0
   742   000AEC                     u1210:
   743   000AEC  6E57               	movwf	main@valid^0,c
   744   000AEE                     l1482:
   745   000AEE  EC88  F007         	call	_LCD_Busy	;wreg free
   746   000AF2  0900               	iorlw	0
   747   000AF4  A4D8               	btfss	status,2,c
   748   000AF6  EF7F  F005         	goto	u1221
   749   000AFA  EF81  F005         	goto	u1220
   750   000AFE                     u1221:
   751   000AFE  EF77  F005         	goto	l1482
   752   000B02                     u1220:
   753   000B02  8689               	bsf	137,3,c	;volatile
   754   000B04  0E01               	movlw	1
   755   000B06  6E4E               	movwf	LCD_Write@mode^0,c
   756   000B08  0E1E               	movlw	low _msg4
   757   000B0A  2459               	addwf	main@i^0,w,c
   758   000B0C  6ED9               	movwf	fsr2l,c
   759   000B0E  6ADA               	clrf	fsr2h,c
   760   000B10  0E00               	movlw	high _msg4
   761   000B12  22DA               	addwfc	fsr2h,f,c
   762   000B14  50DF               	movf	indf2,w,c
   763   000B16  EC4F  F007         	call	_LCD_Write
   764                           
   765                           ;main.c: 83:                         break;
   766   000B1A  EFA8  F005         	goto	l1490
   767   000B1E                     l1488:
   768   000B1E  5058               	movf	main@j^0,w,c
   769   000B20  6E55               	movwf	??_main^0,c
   770   000B22  6A56               	clrf	(??_main+1)^0,c
   771                           
   772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   773                           ; Switch size 1, requested type "simple"
   774                           ; Number of cases is 1, Range of values is 0 to 0
   775                           ; switch strategies available:
   776                           ; Name         Instructions Cycles
   777                           ; simple_byte            4     3 (average)
   778                           ;	Chosen strategy is simple_byte
   779   000B24  5056               	movf	(??_main+1)^0,w,c
   780   000B26  0A00               	xorlw	0	; case 0
   781   000B28  B4D8               	btfsc	status,2,c
   782   000B2A  EF99  F005         	goto	l1564
   783   000B2E  EF6C  F005         	goto	l1480
   784   000B32                     l1564:
   785                           
   786                           ; Switch size 1, requested type "simple"
   787                           ; Number of cases is 3, Range of values is 0 to 2
   788                           ; switch strategies available:
   789                           ; Name         Instructions Cycles
   790                           ; simple_byte           10     6 (average)
   791                           ;	Chosen strategy is simple_byte
   792   000B32  5055               	movf	??_main^0,w,c
   793   000B34  0A00               	xorlw	0	; case 0
   794   000B36  B4D8               	btfsc	status,2,c
   795   000B38  EF03  F005         	goto	l1462
   796   000B3C  0A01               	xorlw	1	; case 1
   797   000B3E  B4D8               	btfsc	status,2,c
   798   000B40  EF26  F005         	goto	l1468
   799   000B44  0A03               	xorlw	3	; case 2
   800   000B46  B4D8               	btfsc	status,2,c
   801   000B48  EF49  F005         	goto	l1474
   802   000B4C  EF6C  F005         	goto	l1480
   803   000B50                     l1490:
   804                           
   805                           ;main.c: 85:                 i++;
   806   000B50  2A59               	incf	main@i^0,f,c
   807   000B52                     
   808                           ;main.c: 86:                 _delay((unsigned long)((150)*(1000000/4000.0)));
   809   000B52  0E31               	movlw	49
   810   000B54  6E55               	movwf	??_main^0,c
   811   000B56  0EB2               	movlw	178
   812   000B58                     u1397:
   813   000B58  2EE8               	decfsz	wreg,f,c
   814   000B5A  D7FE               	bra	u1397
   815   000B5C  2E55               	decfsz	??_main^0,f,c
   816   000B5E  D7FC               	bra	u1397
   817   000B60  D000               	nop2	
   818   000B62                     
   819                           ;main.c: 87:             } while (valid);
   820   000B62  5057               	movf	main@valid^0,w,c
   821   000B64  A4D8               	btfss	status,2,c
   822   000B66  EFB7  F005         	goto	u1231
   823   000B6A  EFB9  F005         	goto	u1230
   824   000B6E                     u1231:
   825   000B6E  EF8F  F005         	goto	l1488
   826   000B72                     u1230:
   827   000B72                     
   828                           ;main.c: 88:             _displaycontrol |= 0x01; while(LCD_Busy()); LATAbits.LATA3 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   829   000B72  805B               	bsf	__displaycontrol^0,0,c
   830   000B74                     l1498:
   831   000B74  EC88  F007         	call	_LCD_Busy	;wreg free
   832   000B78  0900               	iorlw	0
   833   000B7A  A4D8               	btfss	status,2,c
   834   000B7C  EFC2  F005         	goto	u1241
   835   000B80  EFC4  F005         	goto	u1240
   836   000B84                     u1241:
   837   000B84  EFBA  F005         	goto	l1498
   838   000B88                     u1240:
   839   000B88  9689               	bcf	137,3,c	;volatile
   840   000B8A  0E01               	movlw	1
   841   000B8C  6E4E               	movwf	LCD_Write@mode^0,c
   842   000B8E  505B               	movf	__displaycontrol^0,w,c
   843   000B90  0908               	iorlw	8
   844   000B92  EC4F  F007         	call	_LCD_Write
   845   000B96                     
   846                           ;main.c: 89:             _delay((unsigned long)((1000)*(1000000/4000.0)));
   847   000B96  0E02               	movlw	2
   848   000B98  6E56               	movwf	(??_main+1)^0,c
   849   000B9A  0E45               	movlw	69
   850   000B9C  6E55               	movwf	??_main^0,c
   851   000B9E  0EAA               	movlw	170
   852   000BA0                     u1407:
   853   000BA0  2EE8               	decfsz	wreg,f,c
   854   000BA2  D7FE               	bra	u1407
   855   000BA4  2E55               	decfsz	??_main^0,f,c
   856   000BA6  D7FC               	bra	u1407
   857   000BA8  2E56               	decfsz	(??_main+1)^0,f,c
   858   000BAA  D7FA               	bra	u1407
   859   000BAC                     
   860                           ;main.c: 90:             _displaymode &= ~0x02; while(LCD_Busy()); LATAbits.LATA3 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   861   000BAC  925A               	bcf	__displaymode^0,1,c
   862   000BAE                     l1506:
   863   000BAE  EC88  F007         	call	_LCD_Busy	;wreg free
   864   000BB2  0900               	iorlw	0
   865   000BB4  A4D8               	btfss	status,2,c
   866   000BB6  EFDF  F005         	goto	u1251
   867   000BBA  EFE1  F005         	goto	u1250
   868   000BBE                     u1251:
   869   000BBE  EFD7  F005         	goto	l1506
   870   000BC2                     u1250:
   871   000BC2  9689               	bcf	137,3,c	;volatile
   872   000BC4  0E01               	movlw	1
   873   000BC6  6E4E               	movwf	LCD_Write@mode^0,c
   874   000BC8  505A               	movf	__displaymode^0,w,c
   875   000BCA  0904               	iorlw	4
   876   000BCC  EC4F  F007         	call	_LCD_Write
   877   000BD0                     
   878                           ;main.c: 91:             i = 0;
   879   000BD0  0E00               	movlw	0
   880   000BD2  6E59               	movwf	main@i^0,c
   881   000BD4                     
   882                           ;main.c: 92:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATAbits.LATA3 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   883   000BD4  905B               	bcf	__displaycontrol^0,0,c
   884   000BD6                     l1514:
   885   000BD6  EC88  F007         	call	_LCD_Busy	;wreg free
   886   000BDA  0900               	iorlw	0
   887   000BDC  A4D8               	btfss	status,2,c
   888   000BDE  EFF3  F005         	goto	u1261
   889   000BE2  EFF5  F005         	goto	u1260
   890   000BE6                     u1261:
   891   000BE6  EFEB  F005         	goto	l1514
   892   000BEA                     u1260:
   893   000BEA  9689               	bcf	137,3,c	;volatile
   894   000BEC  0E01               	movlw	1
   895   000BEE  6E4E               	movwf	LCD_Write@mode^0,c
   896   000BF0  505B               	movf	__displaycontrol^0,w,c
   897   000BF2  0908               	iorlw	8
   898   000BF4  EC4F  F007         	call	_LCD_Write
   899   000BF8  EF32  F006         	goto	l1528
   900   000BFC                     l1518:
   901                           
   902                           ;main.c: 96:                         valid = i < (sizeof (msg1));
   903   000BFC  0E0A               	movlw	10
   904   000BFE  6459               	cpfsgt	main@i^0,c
   905   000C00  EF04  F006         	goto	u1271
   906   000C04  EF07  F006         	goto	u1270
   907   000C08                     u1271:
   908   000C08  0E01               	movlw	1
   909   000C0A  EF08  F006         	goto	u1280
   910   000C0E                     u1270:
   911   000C0E  0E00               	movlw	0
   912   000C10                     u1280:
   913   000C10  6E57               	movwf	main@valid^0,c
   914                           
   915                           ;main.c: 97:                         break;
   916   000C12  EF4B  F006         	goto	l1530
   917   000C16                     l1520:
   918                           
   919                           ;main.c: 99:                         valid = i < (sizeof (msg2));
   920   000C16  0E0B               	movlw	11
   921   000C18  6459               	cpfsgt	main@i^0,c
   922   000C1A  EF11  F006         	goto	u1291
   923   000C1E  EF14  F006         	goto	u1290
   924   000C22                     u1291:
   925   000C22  0E01               	movlw	1
   926   000C24  EF15  F006         	goto	u1300
   927   000C28                     u1290:
   928   000C28  0E00               	movlw	0
   929   000C2A                     u1300:
   930   000C2A  6E57               	movwf	main@valid^0,c
   931                           
   932                           ;main.c: 100:                         break;
   933   000C2C  EF4B  F006         	goto	l1530
   934   000C30                     l1522:
   935                           
   936                           ;main.c: 102:                         valid = i < (sizeof (msg3));
   937   000C30  0E08               	movlw	8
   938   000C32  6459               	cpfsgt	main@i^0,c
   939   000C34  EF1E  F006         	goto	u1311
   940   000C38  EF21  F006         	goto	u1310
   941   000C3C                     u1311:
   942   000C3C  0E01               	movlw	1
   943   000C3E  EF22  F006         	goto	u1320
   944   000C42                     u1310:
   945   000C42  0E00               	movlw	0
   946   000C44                     u1320:
   947   000C44  6E57               	movwf	main@valid^0,c
   948                           
   949                           ;main.c: 103:                         break;
   950   000C46  EF4B  F006         	goto	l1530
   951   000C4A                     l1524:
   952                           
   953                           ;main.c: 105:                         valid = i < (sizeof (msg4));
   954   000C4A  0E04               	movlw	4
   955   000C4C  6459               	cpfsgt	main@i^0,c
   956   000C4E  EF2B  F006         	goto	u1331
   957   000C52  EF2E  F006         	goto	u1330
   958   000C56                     u1331:
   959   000C56  0E01               	movlw	1
   960   000C58  EF2F  F006         	goto	u1340
   961   000C5C                     u1330:
   962   000C5C  0E00               	movlw	0
   963   000C5E                     u1340:
   964   000C5E  6E57               	movwf	main@valid^0,c
   965                           
   966                           ;main.c: 106:                         break;
   967   000C60  EF4B  F006         	goto	l1530
   968   000C64                     l1528:
   969   000C64  5058               	movf	main@j^0,w,c
   970   000C66  6E55               	movwf	??_main^0,c
   971   000C68  6A56               	clrf	(??_main+1)^0,c
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ;	Chosen strategy is simple_byte
   980   000C6A  5056               	movf	(??_main+1)^0,w,c
   981   000C6C  0A00               	xorlw	0	; case 0
   982   000C6E  B4D8               	btfsc	status,2,c
   983   000C70  EF3C  F006         	goto	l1566
   984   000C74  EF25  F006         	goto	l1524
   985   000C78                     l1566:
   986                           
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 3, Range of values is 0 to 2
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte           10     6 (average)
   992                           ;	Chosen strategy is simple_byte
   993   000C78  5055               	movf	??_main^0,w,c
   994   000C7A  0A00               	xorlw	0	; case 0
   995   000C7C  B4D8               	btfsc	status,2,c
   996   000C7E  EFFE  F005         	goto	l1518
   997   000C82  0A01               	xorlw	1	; case 1
   998   000C84  B4D8               	btfsc	status,2,c
   999   000C86  EF0B  F006         	goto	l1520
  1000   000C8A  0A03               	xorlw	3	; case 2
  1001   000C8C  B4D8               	btfsc	status,2,c
  1002   000C8E  EF18  F006         	goto	l1522
  1003   000C92  EF25  F006         	goto	l1524
  1004   000C96                     l1530:
  1005   000C96  EC88  F007         	call	_LCD_Busy	;wreg free
  1006   000C9A  0900               	iorlw	0
  1007   000C9C  A4D8               	btfss	status,2,c
  1008   000C9E  EF53  F006         	goto	u1351
  1009   000CA2  EF55  F006         	goto	u1350
  1010   000CA6                     u1351:
  1011   000CA6  EF4B  F006         	goto	l1530
  1012   000CAA                     u1350:
  1013   000CAA  8689               	bsf	137,3,c	;volatile
  1014   000CAC  0E01               	movlw	1
  1015   000CAE  6E4E               	movwf	LCD_Write@mode^0,c
  1016   000CB0  0E20               	movlw	32
  1017   000CB2  EC4F  F007         	call	_LCD_Write
  1018   000CB6                     
  1019                           ;main.c: 109:                 i++;
  1020   000CB6  2A59               	incf	main@i^0,f,c
  1021   000CB8                     
  1022                           ;main.c: 110:                 _delay((unsigned long)((50)*(1000000/4000.0)));
  1023   000CB8  0E11               	movlw	17
  1024   000CBA  6E55               	movwf	??_main^0,c
  1025   000CBC  0E3A               	movlw	58
  1026   000CBE                     u1417:
  1027   000CBE  2EE8               	decfsz	wreg,f,c
  1028   000CC0  D7FE               	bra	u1417
  1029   000CC2  2E55               	decfsz	??_main^0,f,c
  1030   000CC4  D7FC               	bra	u1417
  1031   000CC6  D000               	nop2	
  1032   000CC8                     
  1033                           ;main.c: 111:             } while (valid);
  1034   000CC8  5057               	movf	main@valid^0,w,c
  1035   000CCA  A4D8               	btfss	status,2,c
  1036   000CCC  EF6A  F006         	goto	u1361
  1037   000CD0  EF6C  F006         	goto	u1360
  1038   000CD4                     u1361:
  1039   000CD4  EF32  F006         	goto	l1528
  1040   000CD8                     u1360:
  1041   000CD8                     
  1042                           ;main.c: 112:         }
  1043   000CD8  2A58               	incf	main@j^0,f,c
  1044   000CDA  0E03               	movlw	3
  1045   000CDC  6458               	cpfsgt	main@j^0,c
  1046   000CDE  EF73  F006         	goto	u1371
  1047   000CE2  EF75  F006         	goto	u1370
  1048   000CE6                     u1371:
  1049   000CE6  EFAD  F004         	goto	l1436
  1050   000CEA                     u1370:
  1051   000CEA  EFAB  F004         	goto	l1430
  1052   000CEE  EF00  F000         	goto	start
  1053   000CF2                     __end_of_main:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _LCD_Text *****************
  1057 ;; Defined at:
  1058 ;;		line 731 in file "./LCD_16x2.h"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  pt              2    2[COMRAM] PTR void 
  1061 ;;		 -> msg3(9), STR_1(11), 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  text            2    4[COMRAM] PTR unsigned char 
  1064 ;;		 -> msg3(9), STR_1(11), 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         2       0       0       0       0       0       0       0       0
  1075 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1077 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1078 ;;Total ram usage:        4 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 1
  1081 ;; This function calls:
  1082 ;;		_LCD_Busy
  1083 ;;		_LCD_Write
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text1
  1090   000E1E                     __ptext1:
  1091                           	callstack 0
  1092   000E1E                     _LCD_Text:
  1093                           	callstack 29
  1094   000E1E                     
  1095                           ;./LCD_16x2.h: 732:     unsigned char *text = pt;
  1096   000E1E  C050  F052         	movff	LCD_Text@pt,LCD_Text@text
  1097   000E22  C051  F053         	movff	LCD_Text@pt+1,LCD_Text@text+1
  1098                           
  1099                           ;./LCD_16x2.h: 733:     while (*text) {
  1100   000E26  EF36  F007         	goto	l1326
  1101   000E2A                     l1320:
  1102   000E2A  EC88  F007         	call	_LCD_Busy	;wreg free
  1103   000E2E  0900               	iorlw	0
  1104   000E30  A4D8               	btfss	status,2,c
  1105   000E32  EF1D  F007         	goto	u861
  1106   000E36  EF1F  F007         	goto	u860
  1107   000E3A                     u861:
  1108   000E3A  EF15  F007         	goto	l1320
  1109   000E3E                     u860:
  1110   000E3E  8689               	bsf	137,3,c	;volatile
  1111   000E40  0E01               	movlw	1
  1112   000E42  6E4E               	movwf	LCD_Write@mode^0,c
  1113   000E44  C052  FFF6         	movff	LCD_Text@text,tblptrl
  1114   000E48  C053  FFF7         	movff	LCD_Text@text+1,tblptrh
  1115   000E4C  6AF8               	clrf	tblptru,c
  1116   000E4E  0E07               	movlw	(high __ramtop+-1)
  1117   000E50  64F7               	cpfsgt	tblptrh,c
  1118   000E52  D003               	bra	u877
  1119   000E54  0008               	tblrd		*
  1120   000E56  50F5               	movf	tablat,w,c
  1121   000E58  D005               	bra	u870
  1122   000E5A                     u877:
  1123   000E5A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1124   000E5E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1125   000E62  50EF               	movf	indf0,w,c
  1126   000E64                     u870:
  1127   000E64  EC4F  F007         	call	_LCD_Write
  1128   000E68                     
  1129                           ;./LCD_16x2.h: 735:         text++;
  1130   000E68  4A52               	infsnz	LCD_Text@text^0,f,c
  1131   000E6A  2A53               	incf	(LCD_Text@text+1)^0,f,c
  1132   000E6C                     l1326:
  1133                           
  1134                           ;./LCD_16x2.h: 733:     while (*text) {
  1135   000E6C  C052  FFF6         	movff	LCD_Text@text,tblptrl
  1136   000E70  C053  FFF7         	movff	LCD_Text@text+1,tblptrh
  1137   000E74  6AF8               	clrf	tblptru,c
  1138   000E76  0E07               	movlw	(high __ramtop+-1)
  1139   000E78  64F7               	cpfsgt	tblptrh,c
  1140   000E7A  D003               	bra	u887
  1141   000E7C  0008               	tblrd		*
  1142   000E7E  50F5               	movf	tablat,w,c
  1143   000E80  D005               	bra	u880
  1144   000E82                     u887:
  1145   000E82  CFF6 FFE9          	movff	tblptrl,fsr0l
  1146   000E86  CFF7 FFEA          	movff	tblptrh,fsr0h
  1147   000E8A  50EF               	movf	indf0,w,c
  1148   000E8C                     u880:
  1149   000E8C  0900               	iorlw	0
  1150   000E8E  A4D8               	btfss	status,2,c
  1151   000E90  EF4C  F007         	goto	u891
  1152   000E94  EF4E  F007         	goto	u890
  1153   000E98                     u891:
  1154   000E98  EF15  F007         	goto	l1320
  1155   000E9C                     u890:
  1156   000E9C  0012               	return		;funcret
  1157   000E9E                     __end_of_LCD_Text:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _LCD_Init *****************
  1161 ;; Defined at:
  1162 ;;		line 658 in file "./LCD_16x2.h"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1176 ;;      Params:         0       0       0       0       0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1178 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1179 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1180 ;;Total ram usage:        1 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 1
  1183 ;; This function calls:
  1184 ;;		_LCD_Busy
  1185 ;;		_LCD_Write
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text2
  1192   000CF2                     __ptext2:
  1193                           	callstack 0
  1194   000CF2                     _LCD_Init:
  1195                           	callstack 29
  1196   000CF2                     
  1197                           ;./LCD_16x2.h: 660:     TRISAbits.TRISA1 = 0;
  1198   000CF2  9292               	bcf	146,1,c	;volatile
  1199                           
  1200                           ;./LCD_16x2.h: 661:     LATAbits.LATA1 = 0;
  1201   000CF4  9289               	bcf	137,1,c	;volatile
  1202                           
  1203                           ;./LCD_16x2.h: 663:     TRISAbits.TRISA3 = 0;
  1204   000CF6  9692               	bcf	146,3,c	;volatile
  1205                           
  1206                           ;./LCD_16x2.h: 664:     LATAbits.LATA3 = 0;
  1207   000CF8  9689               	bcf	137,3,c	;volatile
  1208                           
  1209                           ;./LCD_16x2.h: 665:     TRISAbits.TRISA2 = 0;
  1210   000CFA  9492               	bcf	146,2,c	;volatile
  1211                           
  1212                           ;./LCD_16x2.h: 666:     LATAbits.LATA2 = 0;
  1213   000CFC  9489               	bcf	137,2,c	;volatile
  1214   000CFE                     
  1215                           ;./LCD_16x2.h: 668:     TRISA &= 0x0F;
  1216   000CFE  0E0F               	movlw	15
  1217   000D00  1692               	andwf	146,f,c	;volatile
  1218   000D02                     
  1219                           ;./LCD_16x2.h: 670:     LCD_busy_cnt = 1;
  1220   000D02  0E01               	movlw	1
  1221   000D04  6E5D               	movwf	_LCD_busy_cnt^0,c
  1222   000D06                     
  1223                           ;./LCD_16x2.h: 672:     _delay((unsigned long)((15)*(1000000/4000.0)));
  1224   000D06  0E05               	movlw	5
  1225   000D08  6E50               	movwf	??_LCD_Init^0,c
  1226   000D0A  0EDE               	movlw	222
  1227   000D0C                     u1427:
  1228   000D0C  2EE8               	decfsz	wreg,f,c
  1229   000D0E  D7FE               	bra	u1427
  1230   000D10  2E50               	decfsz	??_LCD_Init^0,f,c
  1231   000D12  D7FC               	bra	u1427
  1232   000D14                     
  1233                           ;./LCD_16x2.h: 674:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1234   000D14  9689               	bcf	137,3,c	;volatile
  1235   000D16  0E00               	movlw	0
  1236   000D18  6E4E               	movwf	LCD_Write@mode^0,c
  1237   000D1A  0E30               	movlw	48
  1238   000D1C  EC4F  F007         	call	_LCD_Write
  1239   000D20                     
  1240                           ;./LCD_16x2.h: 675:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1241   000D20  0EFA               	movlw	250
  1242   000D22                     u1437:
  1243   000D22  D000               	nop2	
  1244   000D24  2EE8               	decfsz	wreg,f,c
  1245   000D26  D7FD               	bra	u1437
  1246   000D28                     
  1247                           ;./LCD_16x2.h: 676:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1248   000D28  9689               	bcf	137,3,c	;volatile
  1249   000D2A  0E00               	movlw	0
  1250   000D2C  6E4E               	movwf	LCD_Write@mode^0,c
  1251   000D2E  0E30               	movlw	48
  1252   000D30  EC4F  F007         	call	_LCD_Write
  1253   000D34                     
  1254                           ;./LCD_16x2.h: 677:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1255   000D34  0EFA               	movlw	250
  1256   000D36                     u1447:
  1257   000D36  D000               	nop2	
  1258   000D38  2EE8               	decfsz	wreg,f,c
  1259   000D3A  D7FD               	bra	u1447
  1260   000D3C                     
  1261                           ;./LCD_16x2.h: 678:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1262   000D3C  9689               	bcf	137,3,c	;volatile
  1263   000D3E  0E00               	movlw	0
  1264   000D40  6E4E               	movwf	LCD_Write@mode^0,c
  1265   000D42  0E30               	movlw	48
  1266   000D44  EC4F  F007         	call	_LCD_Write
  1267   000D48                     
  1268                           ;./LCD_16x2.h: 679:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1269   000D48  0EFA               	movlw	250
  1270   000D4A                     u1457:
  1271   000D4A  D000               	nop2	
  1272   000D4C  2EE8               	decfsz	wreg,f,c
  1273   000D4E  D7FD               	bra	u1457
  1274   000D50                     
  1275                           ;./LCD_16x2.h: 688:     LATAbits.LATA3 = 0; LCD_Write(0x20,0);
  1276   000D50  9689               	bcf	137,3,c	;volatile
  1277   000D52  0E00               	movlw	0
  1278   000D54  6E4E               	movwf	LCD_Write@mode^0,c
  1279   000D56  0E20               	movlw	32
  1280   000D58  EC4F  F007         	call	_LCD_Write
  1281   000D5C                     l1292:
  1282                           
  1283                           ;./LCD_16x2.h: 689:     while (LCD_Busy()) {
  1284   000D5C  EC88  F007         	call	_LCD_Busy	;wreg free
  1285   000D60  0900               	iorlw	0
  1286   000D62  A4D8               	btfss	status,2,c
  1287   000D64  EFB6  F006         	goto	u801
  1288   000D68  EFB8  F006         	goto	u800
  1289   000D6C                     u801:
  1290   000D6C  EFAE  F006         	goto	l1292
  1291   000D70                     u800:
  1292   000D70                     l1294:
  1293   000D70  EC88  F007         	call	_LCD_Busy	;wreg free
  1294   000D74  0900               	iorlw	0
  1295   000D76  A4D8               	btfss	status,2,c
  1296   000D78  EFC0  F006         	goto	u811
  1297   000D7C  EFC2  F006         	goto	u810
  1298   000D80                     u811:
  1299   000D80  EFB8  F006         	goto	l1294
  1300   000D84                     u810:
  1301   000D84  9689               	bcf	137,3,c	;volatile
  1302   000D86  0E01               	movlw	1
  1303   000D88  6E4E               	movwf	LCD_Write@mode^0,c
  1304   000D8A  0E28               	movlw	40
  1305   000D8C  EC4F  F007         	call	_LCD_Write
  1306   000D90                     
  1307                           ;./LCD_16x2.h: 695:     _displaycontrol = 0x04 | 0x00 | 0x00;
  1308   000D90  0E04               	movlw	4
  1309   000D92  6E5B               	movwf	__displaycontrol^0,c
  1310   000D94                     l1300:
  1311   000D94  EC88  F007         	call	_LCD_Busy	;wreg free
  1312   000D98  0900               	iorlw	0
  1313   000D9A  A4D8               	btfss	status,2,c
  1314   000D9C  EFD2  F006         	goto	u821
  1315   000DA0  EFD4  F006         	goto	u820
  1316   000DA4                     u821:
  1317   000DA4  EFCA  F006         	goto	l1300
  1318   000DA8                     u820:
  1319   000DA8  9689               	bcf	137,3,c	;volatile
  1320   000DAA  0E01               	movlw	1
  1321   000DAC  6E4E               	movwf	LCD_Write@mode^0,c
  1322   000DAE  505B               	movf	__displaycontrol^0,w,c
  1323   000DB0  0908               	iorlw	8
  1324   000DB2  EC4F  F007         	call	_LCD_Write
  1325   000DB6                     
  1326                           ;./LCD_16x2.h: 698:     _displaymode = 0x02 | 0x00;
  1327   000DB6  0E02               	movlw	2
  1328   000DB8  6E5A               	movwf	__displaymode^0,c
  1329   000DBA                     l1306:
  1330   000DBA  EC88  F007         	call	_LCD_Busy	;wreg free
  1331   000DBE  0900               	iorlw	0
  1332   000DC0  A4D8               	btfss	status,2,c
  1333   000DC2  EFE5  F006         	goto	u831
  1334   000DC6  EFE7  F006         	goto	u830
  1335   000DCA                     u831:
  1336   000DCA  EFDD  F006         	goto	l1306
  1337   000DCE                     u830:
  1338   000DCE  9689               	bcf	137,3,c	;volatile
  1339   000DD0  0E01               	movlw	1
  1340   000DD2  6E4E               	movwf	LCD_Write@mode^0,c
  1341   000DD4  505A               	movf	__displaymode^0,w,c
  1342   000DD6  0904               	iorlw	4
  1343   000DD8  EC4F  F007         	call	_LCD_Write
  1344   000DDC                     l1310:
  1345   000DDC  EC88  F007         	call	_LCD_Busy	;wreg free
  1346   000DE0  0900               	iorlw	0
  1347   000DE2  A4D8               	btfss	status,2,c
  1348   000DE4  EFF6  F006         	goto	u841
  1349   000DE8  EFF8  F006         	goto	u840
  1350   000DEC                     u841:
  1351   000DEC  EFEE  F006         	goto	l1310
  1352   000DF0                     u840:
  1353   000DF0  9689               	bcf	137,3,c	;volatile
  1354   000DF2  0E01               	movlw	1
  1355   000DF4  6E4E               	movwf	LCD_Write@mode^0,c
  1356   000DF6  0E01               	movlw	1
  1357   000DF8  EC4F  F007         	call	_LCD_Write
  1358   000DFC                     l1314:
  1359   000DFC  EC88  F007         	call	_LCD_Busy	;wreg free
  1360   000E00  0900               	iorlw	0
  1361   000E02  A4D8               	btfss	status,2,c
  1362   000E04  EF06  F007         	goto	u851
  1363   000E08  EF08  F007         	goto	u850
  1364   000E0C                     u851:
  1365   000E0C  EFFE  F006         	goto	l1314
  1366   000E10                     u850:
  1367   000E10  9689               	bcf	137,3,c	;volatile
  1368   000E12  0E01               	movlw	1
  1369   000E14  6E4E               	movwf	LCD_Write@mode^0,c
  1370   000E16  0E02               	movlw	2
  1371   000E18  EC4F  F007         	call	_LCD_Write
  1372   000E1C  0012               	return		;funcret
  1373   000E1E                     __end_of_LCD_Init:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function _LCD_CustomChar *****************
  1377 ;; Defined at:
  1378 ;;		line 741 in file "./LCD_16x2.h"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  pt              2    2[COMRAM] PTR void 
  1381 ;;		 -> C3(7), C2(7), C1(7), fig(8), 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  i               1    6[COMRAM] unsigned char 
  1384 ;;  c               2    4[COMRAM] PTR unsigned char 
  1385 ;;		 -> C3(7), C2(7), C1(7), fig(8), 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        5 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 1
  1402 ;; This function calls:
  1403 ;;		_LCD_Busy
  1404 ;;		_LCD_Write
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text3
  1411   000FAC                     __ptext3:
  1412                           	callstack 0
  1413   000FAC                     _LCD_CustomChar:
  1414                           	callstack 29
  1415   000FAC                     
  1416                           ;./LCD_16x2.h: 742:     unsigned char *c = pt;
  1417   000FAC  C050  F052         	movff	LCD_CustomChar@pt,LCD_CustomChar@c
  1418   000FB0  C051  F053         	movff	LCD_CustomChar@pt+1,LCD_CustomChar@c+1
  1419   000FB4                     
  1420                           ;./LCD_16x2.h: 743:     for (char i = 0; i < 8; i++) {
  1421   000FB4  0E00               	movlw	0
  1422   000FB6  6E54               	movwf	LCD_CustomChar@i^0,c
  1423   000FB8                     l1336:
  1424   000FB8  EC88  F007         	call	_LCD_Busy	;wreg free
  1425   000FBC  0900               	iorlw	0
  1426   000FBE  A4D8               	btfss	status,2,c
  1427   000FC0  EFE4  F007         	goto	u901
  1428   000FC4  EFE6  F007         	goto	u900
  1429   000FC8                     u901:
  1430   000FC8  EFDC  F007         	goto	l1336
  1431   000FCC                     u900:
  1432   000FCC  8689               	bsf	137,3,c	;volatile
  1433   000FCE  0E01               	movlw	1
  1434   000FD0  6E4E               	movwf	LCD_Write@mode^0,c
  1435   000FD2  C052  FFD9         	movff	LCD_CustomChar@c,fsr2l
  1436   000FD6  C053  FFDA         	movff	LCD_CustomChar@c+1,fsr2h
  1437   000FDA  50DF               	movf	indf2,w,c
  1438   000FDC  EC4F  F007         	call	_LCD_Write
  1439   000FE0                     
  1440                           ;./LCD_16x2.h: 745:         c++;
  1441   000FE0  4A52               	infsnz	LCD_CustomChar@c^0,f,c
  1442   000FE2  2A53               	incf	(LCD_CustomChar@c+1)^0,f,c
  1443   000FE4                     
  1444                           ;./LCD_16x2.h: 746:     }
  1445   000FE4  2A54               	incf	LCD_CustomChar@i^0,f,c
  1446   000FE6  0E07               	movlw	7
  1447   000FE8  6454               	cpfsgt	LCD_CustomChar@i^0,c
  1448   000FEA  EFF9  F007         	goto	u911
  1449   000FEE  EFFB  F007         	goto	u910
  1450   000FF2                     u911:
  1451   000FF2  EFDC  F007         	goto	l1336
  1452   000FF6                     u910:
  1453   000FF6  0012               	return		;funcret
  1454   000FF8                     __end_of_LCD_CustomChar:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _LCD_Write *****************
  1458 ;; Defined at:
  1459 ;;		line 706 in file "./LCD_16x2.h"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  value           1    wreg     unsigned char 
  1462 ;;  mode            1    0[COMRAM] unsigned char 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  value           1    1[COMRAM] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         1       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1477 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        2 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_LCD_Init
  1484 ;;		_LCD_Text
  1485 ;;		_LCD_CustomChar
  1486 ;;		_main
  1487 ;;		_LCD_print_number
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text4
  1492   000E9E                     __ptext4:
  1493                           	callstack 0
  1494   000E9E                     _LCD_Write:
  1495                           	callstack 30
  1496                           
  1497                           ;incstack = 0
  1498                           ;LCD_Write@value stored from wreg
  1499   000E9E  6E4F               	movwf	LCD_Write@value^0,c
  1500   000EA0                     
  1501                           ;./LCD_16x2.h: 707:     LCD_data.all = value;
  1502   000EA0  C04F  F05C         	movff	LCD_Write@value,_LCD_data
  1503   000EA4                     
  1504                           ;./LCD_16x2.h: 709:     LATAbits.LATA1 = 0;
  1505   000EA4  9289               	bcf	137,1,c	;volatile
  1506   000EA6                     
  1507                           ;./LCD_16x2.h: 711:     LATAbits.LATA7 = LCD_data.bit7;
  1508   000EA6  AE5C               	btfss	_LCD_data^0,7,c
  1509   000EA8  D002               	bra	u715
  1510   000EAA  8E89               	bsf	137,7,c	;volatile
  1511   000EAC  D001               	bra	u717
  1512   000EAE                     u715:
  1513   000EAE  9E89               	bcf	137,7,c	;volatile
  1514   000EB0                     u717:
  1515   000EB0                     
  1516                           ;./LCD_16x2.h: 712:     LATAbits.LATA6 = LCD_data.bit6;
  1517   000EB0  AC5C               	btfss	_LCD_data^0,6,c
  1518   000EB2  D002               	bra	u725
  1519   000EB4  8C89               	bsf	137,6,c	;volatile
  1520   000EB6  D001               	bra	u727
  1521   000EB8                     u725:
  1522   000EB8  9C89               	bcf	137,6,c	;volatile
  1523   000EBA                     u727:
  1524   000EBA                     
  1525                           ;./LCD_16x2.h: 713:     LATAbits.LATA5 = LCD_data.bit5;
  1526   000EBA  AA5C               	btfss	_LCD_data^0,5,c
  1527   000EBC  D002               	bra	u735
  1528   000EBE  8A89               	bsf	137,5,c	;volatile
  1529   000EC0  D001               	bra	u737
  1530   000EC2                     u735:
  1531   000EC2  9A89               	bcf	137,5,c	;volatile
  1532   000EC4                     u737:
  1533   000EC4                     
  1534                           ;./LCD_16x2.h: 714:     LATAbits.LATA4 = LCD_data.bit4;
  1535   000EC4  A85C               	btfss	_LCD_data^0,4,c
  1536   000EC6  D002               	bra	u745
  1537   000EC8  8889               	bsf	137,4,c	;volatile
  1538   000ECA  D001               	bra	u747
  1539   000ECC                     u745:
  1540   000ECC  9889               	bcf	137,4,c	;volatile
  1541   000ECE                     u747:
  1542   000ECE                     
  1543                           ;./LCD_16x2.h: 716:     LATAbits.LATA2 = 1; _delay((unsigned long)((1)*(1000000/4000000.
      +                          0))); LATAbits.LATA2 = 0;;
  1544   000ECE  8489               	bsf	137,2,c	;volatile
  1545   000ED0  9489               	bcf	137,2,c	;volatile
  1546   000ED2                     
  1547                           ;./LCD_16x2.h: 717:     if (mode) {
  1548   000ED2  504E               	movf	LCD_Write@mode^0,w,c
  1549   000ED4  B4D8               	btfsc	status,2,c
  1550   000ED6  EF6F  F007         	goto	u751
  1551   000EDA  EF71  F007         	goto	u750
  1552   000EDE                     u751:
  1553   000EDE  EF87  F007         	goto	l47
  1554   000EE2                     u750:
  1555   000EE2                     
  1556                           ;./LCD_16x2.h: 719:         LATAbits.LATA7 = LCD_data.bit3;
  1557   000EE2  A65C               	btfss	_LCD_data^0,3,c
  1558   000EE4  D002               	bra	u765
  1559   000EE6  8E89               	bsf	137,7,c	;volatile
  1560   000EE8  D001               	bra	u767
  1561   000EEA                     u765:
  1562   000EEA  9E89               	bcf	137,7,c	;volatile
  1563   000EEC                     u767:
  1564                           
  1565                           ;./LCD_16x2.h: 720:         LATAbits.LATA6 = LCD_data.bit2;
  1566   000EEC  A45C               	btfss	_LCD_data^0,2,c
  1567   000EEE  D002               	bra	u775
  1568   000EF0  8C89               	bsf	137,6,c	;volatile
  1569   000EF2  D001               	bra	u777
  1570   000EF4                     u775:
  1571   000EF4  9C89               	bcf	137,6,c	;volatile
  1572   000EF6                     u777:
  1573                           
  1574                           ;./LCD_16x2.h: 721:         LATAbits.LATA5 = LCD_data.bit1;
  1575   000EF6  A25C               	btfss	_LCD_data^0,1,c
  1576   000EF8  D002               	bra	u785
  1577   000EFA  8A89               	bsf	137,5,c	;volatile
  1578   000EFC  D001               	bra	u787
  1579   000EFE                     u785:
  1580   000EFE  9A89               	bcf	137,5,c	;volatile
  1581   000F00                     u787:
  1582                           
  1583                           ;./LCD_16x2.h: 722:         LATAbits.LATA4 = LCD_data.bit0;
  1584   000F00  A05C               	btfss	_LCD_data^0,0,c
  1585   000F02  D002               	bra	u795
  1586   000F04  8889               	bsf	137,4,c	;volatile
  1587   000F06  D001               	bra	u797
  1588   000F08                     u795:
  1589   000F08  9889               	bcf	137,4,c	;volatile
  1590   000F0A                     u797:
  1591                           
  1592                           ;./LCD_16x2.h: 723:         LATAbits.LATA2 = 1; _delay((unsigned long)((1)*(1000000/4000
      +                          000.0))); LATAbits.LATA2 = 0;;
  1593   000F0A  8489               	bsf	137,2,c	;volatile
  1594   000F0C  9489               	bcf	137,2,c	;volatile
  1595   000F0E                     l47:
  1596   000F0E  0012               	return		;funcret
  1597   000F10                     __end_of_LCD_Write:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _LCD_Busy *****************
  1601 ;; Defined at:
  1602 ;;		line 774 in file "./LCD_16x2.h"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      unsigned char 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_LCD_Init
  1626 ;;		_LCD_Text
  1627 ;;		_LCD_CustomChar
  1628 ;;		_main
  1629 ;;		_LCD_print_number
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text5
  1634   000F10                     __ptext5:
  1635                           	callstack 0
  1636   000F10                     _LCD_Busy:
  1637                           	callstack 29
  1638   000F10                     
  1639                           ;./LCD_16x2.h: 776:     if (LCD_busy_cnt >= 100) {
  1640   000F10  0E63               	movlw	99
  1641   000F12  645D               	cpfsgt	_LCD_busy_cnt^0,c
  1642   000F14  EF8E  F007         	goto	u101
  1643   000F18  EF90  F007         	goto	u100
  1644   000F1C                     u101:
  1645   000F1C  EF95  F007         	goto	l87
  1646   000F20                     u100:
  1647   000F20                     l898:
  1648                           
  1649                           ;./LCD_16x2.h: 777:         LCD_busy_cnt = 1;
  1650   000F20  0E01               	movlw	1
  1651   000F22  6E5D               	movwf	_LCD_busy_cnt^0,c
  1652   000F24                     
  1653                           ;./LCD_16x2.h: 778:         return 0;
  1654   000F24  0E00               	movlw	0
  1655   000F26  EFAE  F007         	goto	l88
  1656   000F2A                     l87:
  1657                           
  1658                           ;./LCD_16x2.h: 781:     LATAbits.LATA1 = 1;
  1659   000F2A  8289               	bsf	137,1,c	;volatile
  1660                           
  1661                           ;./LCD_16x2.h: 782:     LATAbits.LATA3 = 0;
  1662   000F2C  9689               	bcf	137,3,c	;volatile
  1663   000F2E                     
  1664                           ;./LCD_16x2.h: 783:     TRISA |= 0xF0;
  1665   000F2E  0EF0               	movlw	240
  1666   000F30  1292               	iorwf	146,f,c	;volatile
  1667   000F32                     
  1668                           ;./LCD_16x2.h: 784:     LATAbits.LATA2 = 1;;
  1669   000F32  8489               	bsf	137,2,c	;volatile
  1670   000F34                     
  1671                           ;./LCD_16x2.h: 786:     LCD_data.bit7 = PORTAbits.RA7;
  1672   000F34  AE80               	btfss	128,7,c	;volatile
  1673   000F36  D002               	bra	u115
  1674   000F38  8E5C               	bsf	_LCD_data^0,7,c
  1675   000F3A  D001               	bra	u117
  1676   000F3C                     u115:
  1677   000F3C  9E5C               	bcf	_LCD_data^0,7,c
  1678   000F3E                     u117:
  1679   000F3E                     
  1680                           ;./LCD_16x2.h: 787:     LATAbits.LATA2 = 0;;
  1681   000F3E  9489               	bcf	137,2,c	;volatile
  1682   000F40                     
  1683                           ;./LCD_16x2.h: 788:     LATAbits.LATA2 = 1;;
  1684   000F40  8489               	bsf	137,2,c	;volatile
  1685   000F42                     
  1686                           ;./LCD_16x2.h: 790:     LATAbits.LATA2 = 0;;
  1687   000F42  9489               	bcf	137,2,c	;volatile
  1688                           
  1689                           ;./LCD_16x2.h: 792:     TRISA &= 0x0F;
  1690   000F44  0E0F               	movlw	15
  1691   000F46  1692               	andwf	146,f,c	;volatile
  1692   000F48                     
  1693                           ;./LCD_16x2.h: 793:     LATAbits.LATA1 = 0;
  1694   000F48  9289               	bcf	137,1,c	;volatile
  1695   000F4A                     
  1696                           ;./LCD_16x2.h: 796:     if (LCD_data.bit7 == 1) {
  1697   000F4A  AE5C               	btfss	_LCD_data^0,7,c
  1698   000F4C  EFAA  F007         	goto	u121
  1699   000F50  EFAC  F007         	goto	u120
  1700   000F54                     u121:
  1701   000F54  EF90  F007         	goto	l898
  1702   000F58                     u120:
  1703   000F58                     
  1704                           ;./LCD_16x2.h: 797:         LCD_busy_cnt++;
  1705   000F58  2A5D               	incf	_LCD_busy_cnt^0,f,c
  1706   000F5A                     
  1707                           ;./LCD_16x2.h: 798:         return 1;
  1708   000F5A  0E01               	movlw	1
  1709   000F5C                     l88:
  1710   000F5C  0012               	return		;funcret
  1711   000F5E                     __end_of_LCD_Busy:
  1712                           	callstack 0
  1713                           
  1714                           	psect	rparam
  1715   000000                     
  1716                           	psect	idloc
  1717                           
  1718                           ;Config register IDLOC0 @ 0x200000
  1719                           ;	unspecified, using default values
  1720   200000                     	org	2097152
  1721   200000  FF                 	db	255
  1722                           
  1723                           ;Config register IDLOC1 @ 0x200001
  1724                           ;	unspecified, using default values
  1725   200001                     	org	2097153
  1726   200001  FF                 	db	255
  1727                           
  1728                           ;Config register IDLOC2 @ 0x200002
  1729                           ;	unspecified, using default values
  1730   200002                     	org	2097154
  1731   200002  FF                 	db	255
  1732                           
  1733                           ;Config register IDLOC3 @ 0x200003
  1734                           ;	unspecified, using default values
  1735   200003                     	org	2097155
  1736   200003  FF                 	db	255
  1737                           
  1738                           ;Config register IDLOC4 @ 0x200004
  1739                           ;	unspecified, using default values
  1740   200004                     	org	2097156
  1741   200004  FF                 	db	255
  1742                           
  1743                           ;Config register IDLOC5 @ 0x200005
  1744                           ;	unspecified, using default values
  1745   200005                     	org	2097157
  1746   200005  FF                 	db	255
  1747                           
  1748                           ;Config register IDLOC6 @ 0x200006
  1749                           ;	unspecified, using default values
  1750   200006                     	org	2097158
  1751   200006  FF                 	db	255
  1752                           
  1753                           ;Config register IDLOC7 @ 0x200007
  1754                           ;	unspecified, using default values
  1755   200007                     	org	2097159
  1756   200007  FF                 	db	255
  1757                           
  1758                           	psect	config
  1759                           
  1760                           ;Config register CONFIG1L @ 0x300000
  1761                           ;	unspecified, using default values
  1762                           ;	PLL Selection
  1763                           ;	PLLSEL = 0x0, unprogrammed default
  1764                           ;	PLL Enable Configuration bit
  1765                           ;	CFGPLLEN = 0x0, unprogrammed default
  1766                           ;	CPU System Clock Postscaler
  1767                           ;	CPUDIV = 0x0, unprogrammed default
  1768                           ;	Low Speed USB mode with 48 MHz system clock
  1769                           ;	LS48MHZ = 0x0, unprogrammed default
  1770   300000                     	org	3145728
  1771   300000  00                 	db	0
  1772                           
  1773                           ;Config register CONFIG1H @ 0x300001
  1774                           ;	unspecified, using default values
  1775                           ;	Oscillator Selection
  1776                           ;	FOSC = 0x5, unprogrammed default
  1777                           ;	Primary Oscillator Shutdown
  1778                           ;	PCLKEN = 0x1, unprogrammed default
  1779                           ;	Fail-Safe Clock Monitor
  1780                           ;	FCMEN = 0x0, unprogrammed default
  1781                           ;	Internal/External Oscillator Switchover
  1782                           ;	IESO = 0x0, unprogrammed default
  1783   300001                     	org	3145729
  1784   300001  25                 	db	37
  1785                           
  1786                           ;Config register CONFIG2L @ 0x300002
  1787                           ;	unspecified, using default values
  1788                           ;	Power-up Timer Enable
  1789                           ;	nPWRTEN = 0x1, unprogrammed default
  1790                           ;	Brown-out Reset Enable
  1791                           ;	BOREN = 0x3, unprogrammed default
  1792                           ;	Brown-out Reset Voltage
  1793                           ;	BORV = 0x3, unprogrammed default
  1794                           ;	Low-Power Brown-out Reset
  1795                           ;	nLPBOR = 0x1, unprogrammed default
  1796   300002                     	org	3145730
  1797   300002  5F                 	db	95
  1798                           
  1799                           ;Config register CONFIG2H @ 0x300003
  1800                           ;	unspecified, using default values
  1801                           ;	Watchdog Timer Enable bits
  1802                           ;	WDTEN = 0x3, unprogrammed default
  1803                           ;	Watchdog Timer Postscaler
  1804                           ;	WDTPS = 0xF, unprogrammed default
  1805   300003                     	org	3145731
  1806   300003  3F                 	db	63
  1807                           
  1808                           ; Padding undefined space
  1809   300004                     	org	3145732
  1810   300004  FF                 	db	255
  1811                           
  1812                           ;Config register CONFIG3H @ 0x300005
  1813                           ;	unspecified, using default values
  1814                           ;	CCP2 MUX bit
  1815                           ;	CCP2MX = 0x1, unprogrammed default
  1816                           ;	PORTB A/D Enable bit
  1817                           ;	PBADEN = 0x1, unprogrammed default
  1818                           ;	Timer3 Clock Input MUX bit
  1819                           ;	T3CMX = 0x1, unprogrammed default
  1820                           ;	SDO Output MUX bit
  1821                           ;	SDOMX = 0x1, unprogrammed default
  1822                           ;	Master Clear Reset Pin Enable
  1823                           ;	MCLRE = 0x1, unprogrammed default
  1824   300005                     	org	3145733
  1825   300005  D3                 	db	211
  1826                           
  1827                           ;Config register CONFIG4L @ 0x300006
  1828                           ;	unspecified, using default values
  1829                           ;	Stack Full/Underflow Reset
  1830                           ;	STVREN = 0x1, unprogrammed default
  1831                           ;	Single-Supply ICSP Enable bit
  1832                           ;	LVP = 0x1, unprogrammed default
  1833                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1834                           ;	ICPRT = 0x0, unprogrammed default
  1835                           ;	Extended Instruction Set Enable bit
  1836                           ;	XINST = 0x0, unprogrammed default
  1837                           ;	Background Debugger Enable bit
  1838                           ;	DEBUG = 0x1, unprogrammed default
  1839   300006                     	org	3145734
  1840   300006  85                 	db	133
  1841                           
  1842                           ; Padding undefined space
  1843   300007                     	org	3145735
  1844   300007  FF                 	db	255
  1845                           
  1846                           ;Config register CONFIG5L @ 0x300008
  1847                           ;	unspecified, using default values
  1848                           ;	Block 0 Code Protect
  1849                           ;	CP0 = 0x1, unprogrammed default
  1850                           ;	Block 1 Code Protect
  1851                           ;	CP1 = 0x1, unprogrammed default
  1852                           ;	Block 2 Code Protect
  1853                           ;	CP2 = 0x1, unprogrammed default
  1854                           ;	Block 3 Code Protect
  1855                           ;	CP3 = 0x1, unprogrammed default
  1856   300008                     	org	3145736
  1857   300008  0F                 	db	15
  1858                           
  1859                           ;Config register CONFIG5H @ 0x300009
  1860                           ;	unspecified, using default values
  1861                           ;	Boot Block Code Protect
  1862                           ;	CPB = 0x1, unprogrammed default
  1863                           ;	Data EEPROM Code Protect
  1864                           ;	CPD = 0x1, unprogrammed default
  1865   300009                     	org	3145737
  1866   300009  C0                 	db	192
  1867                           
  1868                           ;Config register CONFIG6L @ 0x30000A
  1869                           ;	unspecified, using default values
  1870                           ;	Block 0 Write Protect
  1871                           ;	WRT0 = 0x1, unprogrammed default
  1872                           ;	Block 1 Write Protect
  1873                           ;	WRT1 = 0x1, unprogrammed default
  1874                           ;	Block 2 Write Protect
  1875                           ;	WRT2 = 0x1, unprogrammed default
  1876                           ;	Block 3 Write Protect
  1877                           ;	WRT3 = 0x1, unprogrammed default
  1878   30000A                     	org	3145738
  1879   30000A  0F                 	db	15
  1880                           
  1881                           ;Config register CONFIG6H @ 0x30000B
  1882                           ;	unspecified, using default values
  1883                           ;	Configuration Registers Write Protect
  1884                           ;	WRTC = 0x1, unprogrammed default
  1885                           ;	Boot Block Write Protect
  1886                           ;	WRTB = 0x1, unprogrammed default
  1887                           ;	Data EEPROM Write Protect
  1888                           ;	WRTD = 0x1, unprogrammed default
  1889   30000B                     	org	3145739
  1890   30000B  E0                 	db	224
  1891                           
  1892                           ;Config register CONFIG7L @ 0x30000C
  1893                           ;	unspecified, using default values
  1894                           ;	Block 0 Table Read Protect
  1895                           ;	EBTR0 = 0x1, unprogrammed default
  1896                           ;	Block 1 Table Read Protect
  1897                           ;	EBTR1 = 0x1, unprogrammed default
  1898                           ;	Block 2 Table Read Protect
  1899                           ;	EBTR2 = 0x1, unprogrammed default
  1900                           ;	Block 3 Table Read Protect
  1901                           ;	EBTR3 = 0x1, unprogrammed default
  1902   30000C                     	org	3145740
  1903   30000C  0F                 	db	15
  1904                           
  1905                           ;Config register CONFIG7H @ 0x30000D
  1906                           ;	unspecified, using default values
  1907                           ;	Boot Block Table Read Protect
  1908                           ;	EBTRB = 0x1, unprogrammed default
  1909   30000D                     	org	3145741
  1910   30000D  40                 	db	64
  1911                           tosu	equ	0xFFF
  1912                           tosh	equ	0xFFE
  1913                           tosl	equ	0xFFD
  1914                           stkptr	equ	0xFFC
  1915                           pclatu	equ	0xFFB
  1916                           pclath	equ	0xFFA
  1917                           pcl	equ	0xFF9
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           prodh	equ	0xFF4
  1923                           prodl	equ	0xFF3
  1924                           indf0	equ	0xFEF
  1925                           postinc0	equ	0xFEE
  1926                           postdec0	equ	0xFED
  1927                           preinc0	equ	0xFEC
  1928                           plusw0	equ	0xFEB
  1929                           fsr0h	equ	0xFEA
  1930                           fsr0l	equ	0xFE9
  1931                           wreg	equ	0xFE8
  1932                           indf1	equ	0xFE7
  1933                           postinc1	equ	0xFE6
  1934                           postdec1	equ	0xFE5
  1935                           preinc1	equ	0xFE4
  1936                           plusw1	equ	0xFE3
  1937                           fsr1h	equ	0xFE2
  1938                           fsr1l	equ	0xFE1
  1939                           bsr	equ	0xFE0
  1940                           indf2	equ	0xFDF
  1941                           postinc2	equ	0xFDE
  1942                           postdec2	equ	0xFDD
  1943                           preinc2	equ	0xFDC
  1944                           plusw2	equ	0xFDB
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        77
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      93
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_CustomChar@pt	PTR void  size(2) Largest target is 8
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), fig(COMRAM[8]), 

    LCD_CustomChar@c	PTR unsigned char  size(2) Largest target is 8
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), fig(COMRAM[8]), 

    LCD_Text@pt	PTR void  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 

    LCD_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_LCD_CustomChar
    _LCD_Text->_LCD_Write
    _LCD_Init->_LCD_Write
    _LCD_CustomChar->_LCD_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11538
                                              7 COMRAM     5     5      0
                           _LCD_Busy
                     _LCD_CustomChar
                           _LCD_Init
                           _LCD_Text
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Text                                             4     2      2    2848
                                              2 COMRAM     4     2      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    2628
                                              2 COMRAM     1     1      0
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_CustomChar                                       5     3      2    3024
                                              2 COMRAM     5     3      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            2     1      1    2628
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Busy
   _LCD_CustomChar
     _LCD_Busy
     _LCD_Write
   _LCD_Init
     _LCD_Busy
     _LCD_Write
   _LCD_Text
     _LCD_Busy
     _LCD_Write
   _LCD_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          6D      0       0      20        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      5D       1       97.9%
BITBIGSFRlll        2D      0       0      23        0.0%
BITBIGSFRllh         8      0       0      22        0.0%
BITBIGSFRlh          8      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      24        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Dec 03 02:04:51 2023

         _LCD_CustomChar 0FAC                       _C1 0047                       _C2 0040  
                     _C3 0039                       l30 0D84                       l33 0DA8  
                     l42 0E10                       l43 0E1C                       l36 0DCE  
                     l54 0E3E                       l47 0F0E                       l63 0FCC  
                     l39 0DF0                       l64 0FF6                       l56 0E9C  
                     l87 0F2A                       l88 0F5C                      l122 0852  
                    l131 08D6                      l140 0948                      l125 087E  
                    l134 0902                      l119 0826                      l152 09CC  
                    l128 08AA                      l161 0A30                      l137 0924  
                    l170 0ABC                      l146 096E                      l155 09F4  
                    l181 0BC2                      l149 0990                      l174 0B02  
                    l166 0A76                      l184 0BEA                      l194 0CAA  
                    l178 0B88                      l900 0F24                      l910 0F34  
                    l920 0F48                      l912 0F3E                      l904 0F2E  
                    l922 0F4A                      l914 0F40                      l906 0F32  
                    l924 0F58                      l916 0F42                      l908 0F34  
                    l926 0F5A                      l918 0F42                      l896 0F10  
                    l898 0F20                      u100 0F20                      u101 0F1C  
                    u120 0F58                      u121 0F54                      u115 0F3C  
                    u117 0F3E                      u800 0D70                      u801 0D6C  
                    u810 0D84                      u715 0EAE                      u811 0D80  
                    u900 0FCC                      u820 0DA8                      u725 0EB8  
                    u717 0EB0                      u901 0FC8                      u821 0DA4  
                    u750 0EE2                      u910 0FF6                      u830 0DCE  
                    u751 0EDE                      u735 0EC2                      u727 0EBA  
                    u911 0FF2                      u831 0DCA                      u840 0DF0  
                    u745 0ECC                      u737 0EC4                      u841 0DEC  
                    u850 0E10                      u747 0ECE                      u851 0E0C  
                    u860 0E3E                      u765 0EEA                      u861 0E3A  
                    u870 0E64                      u775 0EF4                      u767 0EEC  
                    u880 0E8C                      u785 0EFE                      u777 0EF6  
                    u890 0E9C                      u795 0F08                      u787 0F00  
                    u891 0E98                      u797 0F0A                      u877 0E5A  
                    u990 0826                      u887 0E82                      u991 0822  
                    _fig 0031                      wreg 0FE8                     l1300 0D94  
                   l1310 0DDC                     l1302 0DAA                     l1240 0EA0  
                   l1312 0DF2                     l1304 0DB6                     l1320 0E2A  
                   l1400 088A                     l1250 0EC4                     l1242 0EA4  
                   l1330 0FB4                     l1314 0DFC                     l1306 0DBA  
                   l1322 0E40                     l1410 08D8                     l1402 0896  
                   l1260 0EE2                     l1252 0ECE                     l1244 0EA6  
                   l1340 0FE0                     l1316 0E12                     l1308 0DD0  
                   l1324 0E68                     l1500 0B8A                     l1420 0910  
                   l1412 08E2                     l1404 08AC                     l1254 0ED0  
                   l1246 0EB0                     l1342 0FE4                     l1270 0D14  
                   l1262 0CF2                     l1326 0E6C                     l1318 0E1E  
                   l1510 0BD0                     l1502 0B96                     l1430 0956  
                   l1422 0926                     l1414 08EE                     l1406 08B6  
                   l1256 0ED0                     l1248 0EBA                     l1344 0FE6  
                   l1336 0FB8                     l1328 0FAC                     l1280 0D34  
                   l1272 0D16                     l1264 0CFE                     l1520 0C16  
                   l1512 0BD4                     l1504 0BAC                     l1440 097A  
                   l1424 0932                     l1416 0904                     l1408 08C2  
                   l1258 0ED2                     l1338 0FCE                     l1290 0D52  
                   l1282 0D3C                     l1274 0D20                     l1266 0D02  
                   l1522 0C30                     l1530 0C96                     l1514 0BD6  
                   l1506 0BAE                     l1450 09B8                     l1442 097C  
                   l1426 0934                     l1418 090E                     l1292 0D5C  
                   l1284 0D3E                     l1276 0D28                     l1268 0D06  
                   l1540 0CD8                     l1532 0CAC                     l1524 0C4A  
                   l1516 0BEC                     l1508 0BC4                     l1460 09F6  
                   l1452 09CE                     l1444 0992                     l1436 095A  
                   l1428 094A                     l1294 0D70                     l1286 0D48  
                   l1278 0D2A                     l1542 0CDA                     l1534 0CB6  
                   l1518 0BFC                     l1470 0A62                     l1462 0A06  
                   l1454 09DA                     l1446 099E                     l1438 0970  
                   l1390 083E                     l1382 080E                     l1296 0D86  
                   l1288 0D50                     l1536 0CB8                     l1528 0C64  
                   l1480 0AD8                     l1472 0A78                     l1464 0A1C  
                   l1456 09DE                     l1448 09B6                     l1392 0854  
                   l1384 0812                     l1298 0D90                     l1538 0CC8  
                   l1482 0AEE                     l1474 0A92                     l1490 0B50  
                   l1466 0A32                     l1458 09E0                     l1394 085E  
                   l1386 0828                     l1492 0B52                     l1564 0B32  
                   l1484 0B04                     l1476 0AA8                     l1468 0A4C  
                   l1396 086A                     l1388 0832                     l1566 0C78  
                   l1494 0B62                     l1478 0ABE                     l1398 0880  
                   l1496 0B72                     l1488 0B1E                     l1498 0B74  
                   STR_1 0801                     u1000 0852                     u1001 084E  
                   u1010 087E                     u1011 087A                     u1100 09F4  
                   u1020 08AA                     u1101 09F0                     u1021 08A6  
                   u1110 0A18                     u1030 08D6                     u1111 0A12  
                   u1031 08D2                     u1200 0AEA                     u1120 0A1A  
                   u1040 0902                     u1201 0AE4                     u1041 08FE  
                   u1210 0AEC                     u1130 0A30                     u1050 0924  
                   u1131 0A2C                     u1051 0920                     u1300 0C2A  
                   u1220 0B02                     u1140 0A5E                     u1060 0948  
                   u1221 0AFE                     u1141 0A58                     u1061 0944  
                   u1310 0C42                     u1230 0B72                     u1150 0A60  
                   u1070 096E                     u1311 0C3C                     u1231 0B6E  
                   u1071 096A                     u1320 0C44                     u1240 0B88  
                   u1160 0A76                     u1080 0990                     u1241 0B84  
                   u1161 0A72                     u1081 098C                     u1330 0C5C  
                   u1250 0BC2                     u1170 0AA4                     u1090 09CC  
                   u1331 0C56                     u1251 0BBE                     u1171 0A9E  
                   u1091 09C8                     u1340 0C5E                     u1260 0BEA  
                   u1180 0AA6                     u1261 0BE6                     u1350 0CAA  
                   u1270 0C0E                     u1190 0ABC                     u1351 0CA6  
                   u1271 0C08                     u1407 0BA0                     u1191 0AB8  
                   u1360 0CD8                     u1280 0C10                     u1361 0CD4  
                   u1417 0CBE                     u1370 0CEA                     u1290 0C28  
                   u1427 0D0C                     u1371 0CE6                     u1291 0C22  
                   u1437 0D22                     u1447 0D36                     u1457 0D4A  
                   u1387 09A8                     u1397 0B58                     _cont 0027  
                   _main 080E                     _msg1 000D                     _msg2 0001  
                   _msg3 0028                     _msg4 001E                     _msg5 0018  
                   fsr0h 0FEA                     indf0 0FEF                     fsr2h 0FDA  
                   fsr0l 0FE9                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000   __end_of_LCD_CustomChar 0FF8  
           ___param_bank 0000         __end_of_LCD_Busy 0F5E         __end_of_LCD_Init 0E1E  
       __end_of_LCD_Text 0E9E                    ?_main 004E                    _TRISA 0F92  
        LCD_CustomChar@c 0052          LCD_CustomChar@i 0054                    main@i 0059  
                  main@j 0058                    tablat 0FF5                    status 0FD8  
        ?_LCD_CustomChar 0050          __initialization 0FF8             __end_of_main 0CF2  
                 ??_main 0055            __activetblptr 0002        __end_of_LCD_Write 0F10  
           LCD_Text@text 0052             __displaymode 005A         LCD_CustomChar@pt 0050  
                 isa$std 0001             __pdataCOMRAM 0001             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 101E                ?_LCD_Busy 004E  
              ?_LCD_Init 004E                ?_LCD_Text 0050            ___rparam_used 0001  
         __pcstackCOMRAM 004E               ??_LCD_Busy 004E               ??_LCD_Init 0050  
             ??_LCD_Text 0052               __pnvCOMRAM 005D         ??_LCD_CustomChar 0052  
                __Hparam 0000                  __Lparam 0000            LCD_Write@mode 004E  
           __psmallconst 0800                  __pcinit 0FF8                  __ramtop 0800  
                __ptext0 080E                  __ptext1 0E1E                  __ptext2 0CF2  
                __ptext3 0FAC                  __ptext4 0E9E                  __ptext5 0F10  
        __displaycontrol 005B                _LCD_Write 0E9E     end_of_initialization 101E  
          __Lmediumconst 0000                  postdec1 0FE5                  postinc0 0FEE  
              _PORTAbits 0F80                _TRISAbits 0F92               ?_LCD_Write 004E  
             LCD_Text@pt 0050            __pidataCOMRAM 0F5E      start_initialization 0FF8  
           _LCD_busy_cnt 005D              __pbssCOMRAM 005A              ??_LCD_Write 004F  
              _displaybf 0023              __smallconst 0800                 _LCD_Busy 0F10  
               _LCD_Init 0CF2                 _LCD_Text 0E1E                 _LATAbits 0F89  
               _LCD_data 005C                main@valid 0057                copy_data0 100C  
               __Hrparam 0000                 __Lrparam 0000           LCD_Write@value 004F  
               isa$xinst 0000  
