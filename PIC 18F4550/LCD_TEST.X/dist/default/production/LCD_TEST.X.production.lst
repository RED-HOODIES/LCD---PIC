

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 08 22:36:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   000F82                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _msg2
    63   000F82  51                 	db	81
    64   000F83  75                 	db	117
    65   000F84  69                 	db	105
    66   000F85  65                 	db	101
    67   000F86  6E                 	db	110
    68   000F87  20                 	db	32
    69   000F88  65                 	db	101
    70   000F89  72                 	db	114
    71   000F8A  65                 	db	101
    72   000F8B  73                 	db	115
    73   000F8C  3F                 	db	63
    74   000F8D  00                 	db	0
    75                           
    76                           ;initializer for _msg1
    77   000F8E  48                 	db	72
    78   000F8F  6F                 	db	111
    79   000F90  6C                 	db	108
    80   000F91  61                 	db	97
    81   000F92  20                 	db	32
    82   000F93  4D                 	db	77
    83   000F94  75                 	db	117
    84   000F95  6E                 	db	110
    85   000F96  64                 	db	100
    86   000F97  6F                 	db	111
    87   000F98  00                 	db	0
    88                           
    89                           ;initializer for _msg4
    90   000F99  28                 	db	40
    91   000F9A  03                 	db	3
    92   000F9B  5F                 	db	95
    93   000F9C  03                 	db	3
    94   000F9D  29                 	db	41
    95                           
    96                           ;initializer for _msg3
    97   000F9E  01                 	db	1
    98   000F9F  02                 	db	2
    99   000FA0  5F                 	db	95
   100   000FA1  28                 	db	40
   101   000FA2  C2                 	db	194
   102   000FA3  29                 	db	41
   103   000FA4  5F                 	db	95
   104   000FA5  2F                 	db	47
   105   000FA6  01                 	db	1
   106                           
   107                           ;initializer for _C3
   108   000FA7  00                 	db	0
   109   000FA8  00                 	db	0
   110   000FA9  1F                 	db	31
   111   000FAA  0A                 	db	10
   112   000FAB  0A                 	db	10
   113   000FAC  0A                 	db	10
   114   000FAD  0A                 	db	10
   115                           
   116                           ;initializer for _C2
   117   000FAE  00                 	db	0
   118   000FAF  10                 	db	16
   119   000FB0  08                 	db	8
   120   000FB1  04                 	db	4
   121   000FB2  02                 	db	2
   122   000FB3  01                 	db	1
   123   000FB4  00                 	db	0
   124                           
   125                           ;initializer for _C1
   126   000FB5  1F                 	db	31
   127   000FB6  00                 	db	0
   128   000FB7  00                 	db	0
   129   000FB8  00                 	db	0
   130   000FB9  00                 	db	0
   131   000FBA  00                 	db	0
   132   000FBB  00                 	db	0
   133                           
   134                           	psect	nvCOMRAM
   135   00004A                     __pnvCOMRAM:
   136                           	callstack 0
   137   00004A                     _LCD_busy_cnt:
   138                           	callstack 0
   139   00004A                     	ds	1
   140   000000                     _TRISD	set	3989
   141   000000                     _PORTDbits	set	3971
   142   000000                     _LATAbits	set	3977
   143   000000                     _TRISAbits	set	3986
   144   000000                     _TRISDbits	set	3989
   145   000000                     _LATDbits	set	3980
   146   000000                     _ADCON1	set	4033
   147                           
   148                           	psect	smallconst
   149   000800                     __psmallconst:
   150                           	callstack 0
   151   000800  00                 	db	0
   152   000801                     STR_1:
   153   000801  54                 	db	84	;'T'
   154   000802  65                 	db	101	;'e'
   155   000803  73                 	db	115	;'s'
   156   000804  74                 	db	116	;'t'
   157   000805  65                 	db	101	;'e'
   158   000806  6F                 	db	111	;'o'
   159   000807  2E                 	db	46
   160   000808  2E                 	db	46
   161   000809  2E                 	db	46
   162   00080A  2E                 	db	46
   163   00080B  00                 	db	0
   164   00080C  00                 	db	0	; dummy byte at the end
   165   000000                     
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169   000FBC                     __pcinit:
   170                           	callstack 0
   171   000FBC                     start_initialization:
   172                           	callstack 0
   173   000FBC                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Initialize objects allocated to COMRAM (58 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178   000FBC  0E82               	movlw	low __pidataCOMRAM
   179   000FBE  6EF6               	movwf	tblptrl,c
   180   000FC0  0E0F               	movlw	high __pidataCOMRAM
   181   000FC2  6EF7               	movwf	tblptrh,c
   182   000FC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183   000FC6  6EF8               	movwf	tblptru,c
   184   000FC8  EE00  F001         	lfsr	0,__pdataCOMRAM
   185   000FCC  EE10 F03A          	lfsr	1,58
   186   000FD0                     copy_data0:
   187   000FD0  0009               	tblrd		*+
   188   000FD2  CFF5 FFEE          	movff	tablat,postinc0
   189   000FD6  50E5               	movf	postdec1,w,c
   190   000FD8  50E1               	movf	fsr1l,w,c
   191   000FDA  E1FA               	bnz	copy_data0
   192                           
   193                           ; Clear objects allocated to COMRAM (3 bytes)
   194   000FDC  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   195   000FDE  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   196   000FE0  6A47               	clrf	__pbssCOMRAM& (0+255),c
   197   000FE2                     end_of_initialization:
   198                           	callstack 0
   199   000FE2                     __end_of__initialization:
   200                           	callstack 0
   201   000FE2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202   000FE4  6EF8               	movwf	tblptru,c
   203   000FE6  0100               	movlb	0
   204   000FE8  EF07  F004         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207   000047                     __pbssCOMRAM:
   208                           	callstack 0
   209   000047                     __displaymode:
   210                           	callstack 0
   211   000047                     	ds	1
   212   000048                     __displaycontrol:
   213                           	callstack 0
   214   000048                     	ds	1
   215   000049                     _LCD_data:
   216                           	callstack 0
   217   000049                     	ds	1
   218                           
   219                           	psect	dataCOMRAM
   220   000001                     __pdataCOMRAM:
   221                           	callstack 0
   222   000001                     _msg2:
   223                           	callstack 0
   224   000001                     	ds	12
   225   00000D                     _msg1:
   226                           	callstack 0
   227   00000D                     	ds	11
   228   000018                     _msg4:
   229                           	callstack 0
   230   000018                     	ds	5
   231   00001D                     _msg3:
   232                           	callstack 0
   233   00001D                     	ds	9
   234   000026                     _C3:
   235                           	callstack 0
   236   000026                     	ds	7
   237   00002D                     _C2:
   238                           	callstack 0
   239   00002D                     	ds	7
   240   000034                     _C1:
   241                           	callstack 0
   242   000034                     	ds	7
   243                           
   244                           	psect	cstackCOMRAM
   245   00003B                     __pcstackCOMRAM:
   246                           	callstack 0
   247   00003B                     LCD_Write@mode:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x0
   251   00003B                     	ds	1
   252   00003C                     LCD_Write@value:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256   00003C                     	ds	1
   257   00003D                     ??_LCD_Init:
   258   00003D                     LCD_Text@pt:
   259                           	callstack 0
   260   00003D                     LCD_CustomChar@pt:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x2
   264   00003D                     	ds	2
   265   00003F                     LCD_Text@text:
   266                           	callstack 0
   267   00003F                     LCD_CustomChar@c:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x4
   271   00003F                     	ds	2
   272   000041                     LCD_CustomChar@i:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x6
   276   000041                     	ds	1
   277   000042                     ??_main:
   278                           
   279                           ; 1 bytes @ 0x7
   280   000042                     	ds	2
   281   000044                     main@valid:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x9
   285   000044                     	ds	1
   286   000045                     main@j:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xA
   290   000045                     	ds	1
   291   000046                     main@i:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xB
   295   000046                     	ds	1
   296                           
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 26 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;  i               1   11[COMRAM] unsigned char 
   307 ;;  j               1   10[COMRAM] unsigned char 
   308 ;;  valid           1    9[COMRAM] unsigned char 
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   318 ;;      Params:         0       0       0       0       0       0       0       0       0
   319 ;;      Locals:         3       0       0       0       0       0       0       0       0
   320 ;;      Temps:          2       0       0       0       0       0       0       0       0
   321 ;;      Totals:         5       0       0       0       0       0       0       0       0
   322 ;;Total ram usage:        5 bytes
   323 ;; Hardware stack levels required when called: 2
   324 ;; This function calls:
   325 ;;		_LCD_Busy
   326 ;;		_LCD_CustomChar
   327 ;;		_LCD_Init
   328 ;;		_LCD_Text
   329 ;;		_LCD_Write
   330 ;; This function is called by:
   331 ;;		Startup code after reset
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text0
   336   00080E                     __ptext0:
   337                           	callstack 0
   338   00080E                     _main:
   339                           	callstack 29
   340   00080E                     
   341                           ;main.c: 27:     ADCON1 = 0x0F;
   342   00080E  0E0F               	movlw	15
   343   000810  6EC1               	movwf	193,c	;volatile
   344   000812                     
   345                           ;main.c: 28:     LCD_Init();
   346   000812  EC65  F006         	call	_LCD_Init	;wreg free
   347   000816                     l1377:
   348   000816  EC74  F007         	call	_LCD_Busy	;wreg free
   349   00081A  0900               	iorlw	0
   350   00081C  A4D8               	btfss	status,2,c
   351   00081E  EF13  F004         	goto	u981
   352   000822  EF15  F004         	goto	u980
   353   000826                     u981:
   354   000826  EF0B  F004         	goto	l1377
   355   00082A                     u980:
   356   00082A  948C               	bcf	140,2,c	;volatile
   357   00082C  0E01               	movlw	1
   358   00082E  6E3B               	movwf	LCD_Write@mode^0,c
   359   000830  0E48               	movlw	72
   360   000832  EC3B  F007         	call	_LCD_Write
   361   000836  0E34               	movlw	low _C1
   362   000838  6E3D               	movwf	LCD_CustomChar@pt^0,c
   363   00083A  0E00               	movlw	high _C1
   364   00083C  6E3E               	movwf	(LCD_CustomChar@pt+1)^0,c
   365   00083E  EC9B  F007         	call	_LCD_CustomChar	;wreg free
   366   000842                     l1383:
   367   000842  EC74  F007         	call	_LCD_Busy	;wreg free
   368   000846  0900               	iorlw	0
   369   000848  A4D8               	btfss	status,2,c
   370   00084A  EF29  F004         	goto	u991
   371   00084E  EF2B  F004         	goto	u990
   372   000852                     u991:
   373   000852  EF21  F004         	goto	l1383
   374   000856                     u990:
   375   000856  948C               	bcf	140,2,c	;volatile
   376   000858  0E01               	movlw	1
   377   00085A  6E3B               	movwf	LCD_Write@mode^0,c
   378   00085C  0E50               	movlw	80
   379   00085E  EC3B  F007         	call	_LCD_Write
   380   000862  0E2D               	movlw	low _C2
   381   000864  6E3D               	movwf	LCD_CustomChar@pt^0,c
   382   000866  0E00               	movlw	high _C2
   383   000868  6E3E               	movwf	(LCD_CustomChar@pt+1)^0,c
   384   00086A  EC9B  F007         	call	_LCD_CustomChar	;wreg free
   385   00086E                     l1389:
   386   00086E  EC74  F007         	call	_LCD_Busy	;wreg free
   387   000872  0900               	iorlw	0
   388   000874  A4D8               	btfss	status,2,c
   389   000876  EF3F  F004         	goto	u1001
   390   00087A  EF41  F004         	goto	u1000
   391   00087E                     u1001:
   392   00087E  EF37  F004         	goto	l1389
   393   000882                     u1000:
   394   000882  948C               	bcf	140,2,c	;volatile
   395   000884  0E01               	movlw	1
   396   000886  6E3B               	movwf	LCD_Write@mode^0,c
   397   000888  0E58               	movlw	88
   398   00088A  EC3B  F007         	call	_LCD_Write
   399   00088E  0E26               	movlw	low _C3
   400   000890  6E3D               	movwf	LCD_CustomChar@pt^0,c
   401   000892  0E00               	movlw	high _C3
   402   000894  6E3E               	movwf	(LCD_CustomChar@pt+1)^0,c
   403   000896  EC9B  F007         	call	_LCD_CustomChar	;wreg free
   404   00089A                     l1395:
   405   00089A  EC74  F007         	call	_LCD_Busy	;wreg free
   406   00089E  0900               	iorlw	0
   407   0008A0  A4D8               	btfss	status,2,c
   408   0008A2  EF55  F004         	goto	u1011
   409   0008A6  EF57  F004         	goto	u1010
   410   0008AA                     u1011:
   411   0008AA  EF4D  F004         	goto	l1395
   412   0008AE                     u1010:
   413   0008AE  948C               	bcf	140,2,c	;volatile
   414   0008B0  0E01               	movlw	1
   415   0008B2  6E3B               	movwf	LCD_Write@mode^0,c
   416   0008B4  0E80               	movlw	128
   417   0008B6  EC3B  F007         	call	_LCD_Write
   418   0008BA                     
   419                           ;main.c: 33:     LCD_Text("Testeo....");
   420   0008BA  0E01               	movlw	low STR_1
   421   0008BC  6E3D               	movwf	LCD_Text@pt^0,c
   422   0008BE  0E08               	movlw	high STR_1
   423   0008C0  6E3E               	movwf	(LCD_Text@pt+1)^0,c
   424   0008C2  ECFB  F006         	call	_LCD_Text	;wreg free
   425   0008C6                     l1401:
   426   0008C6  EC74  F007         	call	_LCD_Busy	;wreg free
   427   0008CA  0900               	iorlw	0
   428   0008CC  A4D8               	btfss	status,2,c
   429   0008CE  EF6B  F004         	goto	u1021
   430   0008D2  EF6D  F004         	goto	u1020
   431   0008D6                     u1021:
   432   0008D6  EF63  F004         	goto	l1401
   433   0008DA                     u1020:
   434   0008DA  948C               	bcf	140,2,c	;volatile
   435   0008DC  0E01               	movlw	1
   436   0008DE  6E3B               	movwf	LCD_Write@mode^0,c
   437   0008E0  0EC0               	movlw	192
   438   0008E2  EC3B  F007         	call	_LCD_Write
   439   0008E6                     
   440                           ;main.c: 35:     _displaycontrol |= 0x02; while(LCD_Busy()); LATDbits.LATD2 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   441   0008E6  8248               	bsf	__displaycontrol^0,1,c
   442   0008E8                     l1407:
   443   0008E8  EC74  F007         	call	_LCD_Busy	;wreg free
   444   0008EC  0900               	iorlw	0
   445   0008EE  A4D8               	btfss	status,2,c
   446   0008F0  EF7C  F004         	goto	u1031
   447   0008F4  EF7E  F004         	goto	u1030
   448   0008F8                     u1031:
   449   0008F8  EF74  F004         	goto	l1407
   450   0008FC                     u1030:
   451   0008FC  948C               	bcf	140,2,c	;volatile
   452   0008FE  0E01               	movlw	1
   453   000900  6E3B               	movwf	LCD_Write@mode^0,c
   454   000902  5048               	movf	__displaycontrol^0,w,c
   455   000904  0908               	iorlw	8
   456   000906  EC3B  F007         	call	_LCD_Write
   457   00090A                     
   458                           ;main.c: 36:     _displaycontrol |= 0x01; while(LCD_Busy()); LATDbits.LATD2 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   459   00090A  8048               	bsf	__displaycontrol^0,0,c
   460   00090C                     l1413:
   461   00090C  EC74  F007         	call	_LCD_Busy	;wreg free
   462   000910  0900               	iorlw	0
   463   000912  A4D8               	btfss	status,2,c
   464   000914  EF8E  F004         	goto	u1041
   465   000918  EF90  F004         	goto	u1040
   466   00091C                     u1041:
   467   00091C  EF86  F004         	goto	l1413
   468   000920                     u1040:
   469   000920  948C               	bcf	140,2,c	;volatile
   470   000922  0E01               	movlw	1
   471   000924  6E3B               	movwf	LCD_Write@mode^0,c
   472   000926  5048               	movf	__displaycontrol^0,w,c
   473   000928  0908               	iorlw	8
   474   00092A  EC3B  F007         	call	_LCD_Write
   475   00092E                     l1417:
   476                           
   477                           ;main.c: 41:         for (j = 0; j < 4; j++) {
   478   00092E  0E00               	movlw	0
   479   000930  6E45               	movwf	main@j^0,c
   480   000932                     l1423:
   481   000932  EC74  F007         	call	_LCD_Busy	;wreg free
   482   000936  0900               	iorlw	0
   483   000938  A4D8               	btfss	status,2,c
   484   00093A  EFA1  F004         	goto	u1051
   485   00093E  EFA3  F004         	goto	u1050
   486   000942                     u1051:
   487   000942  EF99  F004         	goto	l1423
   488   000946                     u1050:
   489   000946  948C               	bcf	140,2,c	;volatile
   490   000948  0E01               	movlw	1
   491   00094A  6E3B               	movwf	LCD_Write@mode^0,c
   492   00094C  0EC0               	movlw	192
   493   00094E  EC3B  F007         	call	_LCD_Write
   494   000952                     
   495                           ;main.c: 43:             _displaycontrol |= 0x01; while(LCD_Busy()); LATDbits.LATD2 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   496   000952  8048               	bsf	__displaycontrol^0,0,c
   497   000954                     l1429:
   498   000954  EC74  F007         	call	_LCD_Busy	;wreg free
   499   000958  0900               	iorlw	0
   500   00095A  A4D8               	btfss	status,2,c
   501   00095C  EFB2  F004         	goto	u1061
   502   000960  EFB4  F004         	goto	u1060
   503   000964                     u1061:
   504   000964  EFAA  F004         	goto	l1429
   505   000968                     u1060:
   506   000968  948C               	bcf	140,2,c	;volatile
   507   00096A  0E01               	movlw	1
   508   00096C  6E3B               	movwf	LCD_Write@mode^0,c
   509   00096E  5048               	movf	__displaycontrol^0,w,c
   510   000970  0908               	iorlw	8
   511   000972  EC3B  F007         	call	_LCD_Write
   512   000976                     
   513                           ;main.c: 44:             _delay((unsigned long)((1500)*(1000000/4000.0)));
   514   000976  0E02               	movlw	2
   515   000978  6E43               	movwf	(??_main+1)^0,c
   516   00097A  0EE7               	movlw	231
   517   00097C  6E42               	movwf	??_main^0,c
   518   00097E  0E00               	movlw	0
   519   000980                     u1367:
   520   000980  2EE8               	decfsz	wreg,f,c
   521   000982  D7FE               	bra	u1367
   522   000984  2E42               	decfsz	??_main^0,f,c
   523   000986  D7FC               	bra	u1367
   524   000988  2E43               	decfsz	(??_main+1)^0,f,c
   525   00098A  D7FA               	bra	u1367
   526   00098C  D000               	nop2	
   527   00098E                     
   528                           ;main.c: 45:             _displaymode |= 0x02;; while(LCD_Busy()); LATDbits.LATD2 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   529   00098E  8247               	bsf	__displaymode^0,1,c
   530   000990                     l1437:
   531   000990  EC74  F007         	call	_LCD_Busy	;wreg free
   532   000994  0900               	iorlw	0
   533   000996  A4D8               	btfss	status,2,c
   534   000998  EFD0  F004         	goto	u1071
   535   00099C  EFD2  F004         	goto	u1070
   536   0009A0                     u1071:
   537   0009A0  EFC8  F004         	goto	l1437
   538   0009A4                     u1070:
   539   0009A4  948C               	bcf	140,2,c	;volatile
   540   0009A6  0E01               	movlw	1
   541   0009A8  6E3B               	movwf	LCD_Write@mode^0,c
   542   0009AA  5047               	movf	__displaymode^0,w,c
   543   0009AC  0904               	iorlw	4
   544   0009AE  EC3B  F007         	call	_LCD_Write
   545   0009B2                     
   546                           ;main.c: 46:             i = 0;
   547   0009B2  0E00               	movlw	0
   548   0009B4  6E46               	movwf	main@i^0,c
   549   0009B6                     
   550                           ;main.c: 47:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATDbits.LATD2 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   551   0009B6  9048               	bcf	__displaycontrol^0,0,c
   552   0009B8                     l1445:
   553   0009B8  EC74  F007         	call	_LCD_Busy	;wreg free
   554   0009BC  0900               	iorlw	0
   555   0009BE  A4D8               	btfss	status,2,c
   556   0009C0  EFE4  F004         	goto	u1081
   557   0009C4  EFE6  F004         	goto	u1080
   558   0009C8                     u1081:
   559   0009C8  EFDC  F004         	goto	l1445
   560   0009CC                     u1080:
   561   0009CC  948C               	bcf	140,2,c	;volatile
   562   0009CE  0E01               	movlw	1
   563   0009D0  6E3B               	movwf	LCD_Write@mode^0,c
   564   0009D2  5048               	movf	__displaycontrol^0,w,c
   565   0009D4  0908               	iorlw	8
   566   0009D6  EC3B  F007         	call	_LCD_Write
   567   0009DA  EF7B  F005         	goto	l1475
   568   0009DE                     l1449:
   569                           
   570                           ;main.c: 51:                         valid = i < (sizeof (msg1) - 2);
   571   0009DE  0E08               	movlw	8
   572   0009E0  6446               	cpfsgt	main@i^0,c
   573   0009E2  EFF5  F004         	goto	u1091
   574   0009E6  EFF8  F004         	goto	u1090
   575   0009EA                     u1091:
   576   0009EA  0E01               	movlw	1
   577   0009EC  EFF9  F004         	goto	u1100
   578   0009F0                     u1090:
   579   0009F0  0E00               	movlw	0
   580   0009F2                     u1100:
   581   0009F2  6E44               	movwf	main@valid^0,c
   582   0009F4                     l1451:
   583   0009F4  EC74  F007         	call	_LCD_Busy	;wreg free
   584   0009F8  0900               	iorlw	0
   585   0009FA  A4D8               	btfss	status,2,c
   586   0009FC  EF02  F005         	goto	u1111
   587   000A00  EF04  F005         	goto	u1110
   588   000A04                     u1111:
   589   000A04  EFFA  F004         	goto	l1451
   590   000A08                     u1110:
   591   000A08  848C               	bsf	140,2,c	;volatile
   592   000A0A  0E01               	movlw	1
   593   000A0C  6E3B               	movwf	LCD_Write@mode^0,c
   594   000A0E  0E0D               	movlw	low _msg1
   595   000A10  2446               	addwf	main@i^0,w,c
   596   000A12  6ED9               	movwf	fsr2l,c
   597   000A14  6ADA               	clrf	fsr2h,c
   598   000A16  0E00               	movlw	high _msg1
   599   000A18  22DA               	addwfc	fsr2h,f,c
   600   000A1A  50DF               	movf	indf2,w,c
   601   000A1C  EC3B  F007         	call	_LCD_Write
   602                           
   603                           ;main.c: 53:                         break;
   604   000A20  EF94  F005         	goto	l1477
   605   000A24                     l1455:
   606                           
   607                           ;main.c: 55:                         valid = i < (sizeof (msg2) - 2);
   608   000A24  0E09               	movlw	9
   609   000A26  6446               	cpfsgt	main@i^0,c
   610   000A28  EF18  F005         	goto	u1121
   611   000A2C  EF1B  F005         	goto	u1120
   612   000A30                     u1121:
   613   000A30  0E01               	movlw	1
   614   000A32  EF1C  F005         	goto	u1130
   615   000A36                     u1120:
   616   000A36  0E00               	movlw	0
   617   000A38                     u1130:
   618   000A38  6E44               	movwf	main@valid^0,c
   619   000A3A                     l1457:
   620   000A3A  EC74  F007         	call	_LCD_Busy	;wreg free
   621   000A3E  0900               	iorlw	0
   622   000A40  A4D8               	btfss	status,2,c
   623   000A42  EF25  F005         	goto	u1141
   624   000A46  EF27  F005         	goto	u1140
   625   000A4A                     u1141:
   626   000A4A  EF1D  F005         	goto	l1457
   627   000A4E                     u1140:
   628   000A4E  848C               	bsf	140,2,c	;volatile
   629   000A50  0E01               	movlw	1
   630   000A52  6E3B               	movwf	LCD_Write@mode^0,c
   631   000A54  0E01               	movlw	low _msg2
   632   000A56  2446               	addwf	main@i^0,w,c
   633   000A58  6ED9               	movwf	fsr2l,c
   634   000A5A  6ADA               	clrf	fsr2h,c
   635   000A5C  0E00               	movlw	high _msg2
   636   000A5E  22DA               	addwfc	fsr2h,f,c
   637   000A60  50DF               	movf	indf2,w,c
   638   000A62  EC3B  F007         	call	_LCD_Write
   639                           
   640                           ;main.c: 57:                         break;
   641   000A66  EF94  F005         	goto	l1477
   642   000A6A                     l1461:
   643                           
   644                           ;main.c: 59:                         valid = i < (sizeof (msg3) - 1);
   645   000A6A  0E07               	movlw	7
   646   000A6C  6446               	cpfsgt	main@i^0,c
   647   000A6E  EF3B  F005         	goto	u1151
   648   000A72  EF3E  F005         	goto	u1150
   649   000A76                     u1151:
   650   000A76  0E01               	movlw	1
   651   000A78  EF3F  F005         	goto	u1160
   652   000A7C                     u1150:
   653   000A7C  0E00               	movlw	0
   654   000A7E                     u1160:
   655   000A7E  6E44               	movwf	main@valid^0,c
   656   000A80                     l1463:
   657   000A80  EC74  F007         	call	_LCD_Busy	;wreg free
   658   000A84  0900               	iorlw	0
   659   000A86  A4D8               	btfss	status,2,c
   660   000A88  EF48  F005         	goto	u1171
   661   000A8C  EF4A  F005         	goto	u1170
   662   000A90                     u1171:
   663   000A90  EF40  F005         	goto	l1463
   664   000A94                     u1170:
   665   000A94  848C               	bsf	140,2,c	;volatile
   666   000A96  0E01               	movlw	1
   667   000A98  6E3B               	movwf	LCD_Write@mode^0,c
   668   000A9A  0E1D               	movlw	low _msg3
   669   000A9C  2446               	addwf	main@i^0,w,c
   670   000A9E  6ED9               	movwf	fsr2l,c
   671   000AA0  6ADA               	clrf	fsr2h,c
   672   000AA2  0E00               	movlw	high _msg3
   673   000AA4  22DA               	addwfc	fsr2h,f,c
   674   000AA6  50DF               	movf	indf2,w,c
   675   000AA8  EC3B  F007         	call	_LCD_Write
   676                           
   677                           ;main.c: 61:                         break;
   678   000AAC  EF94  F005         	goto	l1477
   679   000AB0                     l1467:
   680                           
   681                           ;main.c: 63:                         valid = i < (sizeof (msg4) - 1);
   682   000AB0  0E03               	movlw	3
   683   000AB2  6446               	cpfsgt	main@i^0,c
   684   000AB4  EF5E  F005         	goto	u1181
   685   000AB8  EF61  F005         	goto	u1180
   686   000ABC                     u1181:
   687   000ABC  0E01               	movlw	1
   688   000ABE  EF62  F005         	goto	u1190
   689   000AC2                     u1180:
   690   000AC2  0E00               	movlw	0
   691   000AC4                     u1190:
   692   000AC4  6E44               	movwf	main@valid^0,c
   693   000AC6                     l1469:
   694   000AC6  EC74  F007         	call	_LCD_Busy	;wreg free
   695   000ACA  0900               	iorlw	0
   696   000ACC  A4D8               	btfss	status,2,c
   697   000ACE  EF6B  F005         	goto	u1201
   698   000AD2  EF6D  F005         	goto	u1200
   699   000AD6                     u1201:
   700   000AD6  EF63  F005         	goto	l1469
   701   000ADA                     u1200:
   702   000ADA  848C               	bsf	140,2,c	;volatile
   703   000ADC  0E01               	movlw	1
   704   000ADE  6E3B               	movwf	LCD_Write@mode^0,c
   705   000AE0  0E18               	movlw	low _msg4
   706   000AE2  2446               	addwf	main@i^0,w,c
   707   000AE4  6ED9               	movwf	fsr2l,c
   708   000AE6  6ADA               	clrf	fsr2h,c
   709   000AE8  0E00               	movlw	high _msg4
   710   000AEA  22DA               	addwfc	fsr2h,f,c
   711   000AEC  50DF               	movf	indf2,w,c
   712   000AEE  EC3B  F007         	call	_LCD_Write
   713                           
   714                           ;main.c: 65:                         break;
   715   000AF2  EF94  F005         	goto	l1477
   716   000AF6                     l1475:
   717   000AF6  5045               	movf	main@j^0,w,c
   718   000AF8  6E42               	movwf	??_main^0,c
   719   000AFA  6A43               	clrf	(??_main+1)^0,c
   720                           
   721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   722                           ; Switch size 1, requested type "simple"
   723                           ; Number of cases is 1, Range of values is 0 to 0
   724                           ; switch strategies available:
   725                           ; Name         Instructions Cycles
   726                           ; simple_byte            4     3 (average)
   727                           ;	Chosen strategy is simple_byte
   728   000AFC  5043               	movf	(??_main+1)^0,w,c
   729   000AFE  0A00               	xorlw	0	; case 0
   730   000B00  B4D8               	btfsc	status,2,c
   731   000B02  EF85  F005         	goto	l1551
   732   000B06  EF58  F005         	goto	l1467
   733   000B0A                     l1551:
   734                           
   735                           ; Switch size 1, requested type "simple"
   736                           ; Number of cases is 3, Range of values is 0 to 2
   737                           ; switch strategies available:
   738                           ; Name         Instructions Cycles
   739                           ; simple_byte           10     6 (average)
   740                           ;	Chosen strategy is simple_byte
   741   000B0A  5042               	movf	??_main^0,w,c
   742   000B0C  0A00               	xorlw	0	; case 0
   743   000B0E  B4D8               	btfsc	status,2,c
   744   000B10  EFEF  F004         	goto	l1449
   745   000B14  0A01               	xorlw	1	; case 1
   746   000B16  B4D8               	btfsc	status,2,c
   747   000B18  EF12  F005         	goto	l1455
   748   000B1C  0A03               	xorlw	3	; case 2
   749   000B1E  B4D8               	btfsc	status,2,c
   750   000B20  EF35  F005         	goto	l1461
   751   000B24  EF58  F005         	goto	l1467
   752   000B28                     l1477:
   753                           
   754                           ;main.c: 67:                 i++;
   755   000B28  2A46               	incf	main@i^0,f,c
   756   000B2A                     
   757                           ;main.c: 68:                 _delay((unsigned long)((150)*(1000000/4000.0)));
   758   000B2A  0E31               	movlw	49
   759   000B2C  6E42               	movwf	??_main^0,c
   760   000B2E  0EB2               	movlw	178
   761   000B30                     u1377:
   762   000B30  2EE8               	decfsz	wreg,f,c
   763   000B32  D7FE               	bra	u1377
   764   000B34  2E42               	decfsz	??_main^0,f,c
   765   000B36  D7FC               	bra	u1377
   766   000B38  D000               	nop2	
   767   000B3A                     
   768                           ;main.c: 69:             } while (valid);
   769   000B3A  5044               	movf	main@valid^0,w,c
   770   000B3C  A4D8               	btfss	status,2,c
   771   000B3E  EFA3  F005         	goto	u1211
   772   000B42  EFA5  F005         	goto	u1210
   773   000B46                     u1211:
   774   000B46  EF7B  F005         	goto	l1475
   775   000B4A                     u1210:
   776   000B4A                     
   777                           ;main.c: 70:             _displaycontrol |= 0x01; while(LCD_Busy()); LATDbits.LATD2 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   778   000B4A  8048               	bsf	__displaycontrol^0,0,c
   779   000B4C                     l1485:
   780   000B4C  EC74  F007         	call	_LCD_Busy	;wreg free
   781   000B50  0900               	iorlw	0
   782   000B52  A4D8               	btfss	status,2,c
   783   000B54  EFAE  F005         	goto	u1221
   784   000B58  EFB0  F005         	goto	u1220
   785   000B5C                     u1221:
   786   000B5C  EFA6  F005         	goto	l1485
   787   000B60                     u1220:
   788   000B60  948C               	bcf	140,2,c	;volatile
   789   000B62  0E01               	movlw	1
   790   000B64  6E3B               	movwf	LCD_Write@mode^0,c
   791   000B66  5048               	movf	__displaycontrol^0,w,c
   792   000B68  0908               	iorlw	8
   793   000B6A  EC3B  F007         	call	_LCD_Write
   794   000B6E                     
   795                           ;main.c: 71:             _delay((unsigned long)((1000)*(1000000/4000.0)));
   796   000B6E  0E02               	movlw	2
   797   000B70  6E43               	movwf	(??_main+1)^0,c
   798   000B72  0E45               	movlw	69
   799   000B74  6E42               	movwf	??_main^0,c
   800   000B76  0EAA               	movlw	170
   801   000B78                     u1387:
   802   000B78  2EE8               	decfsz	wreg,f,c
   803   000B7A  D7FE               	bra	u1387
   804   000B7C  2E42               	decfsz	??_main^0,f,c
   805   000B7E  D7FC               	bra	u1387
   806   000B80  2E43               	decfsz	(??_main+1)^0,f,c
   807   000B82  D7FA               	bra	u1387
   808   000B84                     
   809                           ;main.c: 72:             _displaymode &= ~0x02; while(LCD_Busy()); LATDbits.LATD2 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   810   000B84  9247               	bcf	__displaymode^0,1,c
   811   000B86                     l1493:
   812   000B86  EC74  F007         	call	_LCD_Busy	;wreg free
   813   000B8A  0900               	iorlw	0
   814   000B8C  A4D8               	btfss	status,2,c
   815   000B8E  EFCB  F005         	goto	u1231
   816   000B92  EFCD  F005         	goto	u1230
   817   000B96                     u1231:
   818   000B96  EFC3  F005         	goto	l1493
   819   000B9A                     u1230:
   820   000B9A  948C               	bcf	140,2,c	;volatile
   821   000B9C  0E01               	movlw	1
   822   000B9E  6E3B               	movwf	LCD_Write@mode^0,c
   823   000BA0  5047               	movf	__displaymode^0,w,c
   824   000BA2  0904               	iorlw	4
   825   000BA4  EC3B  F007         	call	_LCD_Write
   826   000BA8                     
   827                           ;main.c: 73:             i = 0;
   828   000BA8  0E00               	movlw	0
   829   000BAA  6E46               	movwf	main@i^0,c
   830   000BAC                     
   831                           ;main.c: 74:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATDbits.LATD2 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   832   000BAC  9048               	bcf	__displaycontrol^0,0,c
   833   000BAE                     l1501:
   834   000BAE  EC74  F007         	call	_LCD_Busy	;wreg free
   835   000BB2  0900               	iorlw	0
   836   000BB4  A4D8               	btfss	status,2,c
   837   000BB6  EFDF  F005         	goto	u1241
   838   000BBA  EFE1  F005         	goto	u1240
   839   000BBE                     u1241:
   840   000BBE  EFD7  F005         	goto	l1501
   841   000BC2                     u1240:
   842   000BC2  948C               	bcf	140,2,c	;volatile
   843   000BC4  0E01               	movlw	1
   844   000BC6  6E3B               	movwf	LCD_Write@mode^0,c
   845   000BC8  5048               	movf	__displaycontrol^0,w,c
   846   000BCA  0908               	iorlw	8
   847   000BCC  EC3B  F007         	call	_LCD_Write
   848   000BD0  EF1E  F006         	goto	l1515
   849   000BD4                     l1505:
   850                           
   851                           ;main.c: 78:                         valid = i < (sizeof (msg1));
   852   000BD4  0E0A               	movlw	10
   853   000BD6  6446               	cpfsgt	main@i^0,c
   854   000BD8  EFF0  F005         	goto	u1251
   855   000BDC  EFF3  F005         	goto	u1250
   856   000BE0                     u1251:
   857   000BE0  0E01               	movlw	1
   858   000BE2  EFF4  F005         	goto	u1260
   859   000BE6                     u1250:
   860   000BE6  0E00               	movlw	0
   861   000BE8                     u1260:
   862   000BE8  6E44               	movwf	main@valid^0,c
   863                           
   864                           ;main.c: 79:                         break;
   865   000BEA  EF37  F006         	goto	l1517
   866   000BEE                     l1507:
   867                           
   868                           ;main.c: 81:                         valid = i < (sizeof (msg2));
   869   000BEE  0E0B               	movlw	11
   870   000BF0  6446               	cpfsgt	main@i^0,c
   871   000BF2  EFFD  F005         	goto	u1271
   872   000BF6  EF00  F006         	goto	u1270
   873   000BFA                     u1271:
   874   000BFA  0E01               	movlw	1
   875   000BFC  EF01  F006         	goto	u1280
   876   000C00                     u1270:
   877   000C00  0E00               	movlw	0
   878   000C02                     u1280:
   879   000C02  6E44               	movwf	main@valid^0,c
   880                           
   881                           ;main.c: 82:                         break;
   882   000C04  EF37  F006         	goto	l1517
   883   000C08                     l1509:
   884                           
   885                           ;main.c: 84:                         valid = i < (sizeof (msg3));
   886   000C08  0E08               	movlw	8
   887   000C0A  6446               	cpfsgt	main@i^0,c
   888   000C0C  EF0A  F006         	goto	u1291
   889   000C10  EF0D  F006         	goto	u1290
   890   000C14                     u1291:
   891   000C14  0E01               	movlw	1
   892   000C16  EF0E  F006         	goto	u1300
   893   000C1A                     u1290:
   894   000C1A  0E00               	movlw	0
   895   000C1C                     u1300:
   896   000C1C  6E44               	movwf	main@valid^0,c
   897                           
   898                           ;main.c: 85:                         break;
   899   000C1E  EF37  F006         	goto	l1517
   900   000C22                     l1511:
   901                           
   902                           ;main.c: 87:                         valid = i < (sizeof (msg4));
   903   000C22  0E04               	movlw	4
   904   000C24  6446               	cpfsgt	main@i^0,c
   905   000C26  EF17  F006         	goto	u1311
   906   000C2A  EF1A  F006         	goto	u1310
   907   000C2E                     u1311:
   908   000C2E  0E01               	movlw	1
   909   000C30  EF1B  F006         	goto	u1320
   910   000C34                     u1310:
   911   000C34  0E00               	movlw	0
   912   000C36                     u1320:
   913   000C36  6E44               	movwf	main@valid^0,c
   914                           
   915                           ;main.c: 88:                         break;
   916   000C38  EF37  F006         	goto	l1517
   917   000C3C                     l1515:
   918   000C3C  5045               	movf	main@j^0,w,c
   919   000C3E  6E42               	movwf	??_main^0,c
   920   000C40  6A43               	clrf	(??_main+1)^0,c
   921                           
   922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   923                           ; Switch size 1, requested type "simple"
   924                           ; Number of cases is 1, Range of values is 0 to 0
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte            4     3 (average)
   928                           ;	Chosen strategy is simple_byte
   929   000C42  5043               	movf	(??_main+1)^0,w,c
   930   000C44  0A00               	xorlw	0	; case 0
   931   000C46  B4D8               	btfsc	status,2,c
   932   000C48  EF28  F006         	goto	l1553
   933   000C4C  EF11  F006         	goto	l1511
   934   000C50                     l1553:
   935                           
   936                           ; Switch size 1, requested type "simple"
   937                           ; Number of cases is 3, Range of values is 0 to 2
   938                           ; switch strategies available:
   939                           ; Name         Instructions Cycles
   940                           ; simple_byte           10     6 (average)
   941                           ;	Chosen strategy is simple_byte
   942   000C50  5042               	movf	??_main^0,w,c
   943   000C52  0A00               	xorlw	0	; case 0
   944   000C54  B4D8               	btfsc	status,2,c
   945   000C56  EFEA  F005         	goto	l1505
   946   000C5A  0A01               	xorlw	1	; case 1
   947   000C5C  B4D8               	btfsc	status,2,c
   948   000C5E  EFF7  F005         	goto	l1507
   949   000C62  0A03               	xorlw	3	; case 2
   950   000C64  B4D8               	btfsc	status,2,c
   951   000C66  EF04  F006         	goto	l1509
   952   000C6A  EF11  F006         	goto	l1511
   953   000C6E                     l1517:
   954   000C6E  EC74  F007         	call	_LCD_Busy	;wreg free
   955   000C72  0900               	iorlw	0
   956   000C74  A4D8               	btfss	status,2,c
   957   000C76  EF3F  F006         	goto	u1331
   958   000C7A  EF41  F006         	goto	u1330
   959   000C7E                     u1331:
   960   000C7E  EF37  F006         	goto	l1517
   961   000C82                     u1330:
   962   000C82  848C               	bsf	140,2,c	;volatile
   963   000C84  0E01               	movlw	1
   964   000C86  6E3B               	movwf	LCD_Write@mode^0,c
   965   000C88  0E20               	movlw	32
   966   000C8A  EC3B  F007         	call	_LCD_Write
   967   000C8E                     
   968                           ;main.c: 91:                 i++;
   969   000C8E  2A46               	incf	main@i^0,f,c
   970   000C90                     
   971                           ;main.c: 92:                 _delay((unsigned long)((50)*(1000000/4000.0)));
   972   000C90  0E11               	movlw	17
   973   000C92  6E42               	movwf	??_main^0,c
   974   000C94  0E3A               	movlw	58
   975   000C96                     u1397:
   976   000C96  2EE8               	decfsz	wreg,f,c
   977   000C98  D7FE               	bra	u1397
   978   000C9A  2E42               	decfsz	??_main^0,f,c
   979   000C9C  D7FC               	bra	u1397
   980   000C9E  D000               	nop2	
   981   000CA0                     
   982                           ;main.c: 93:             } while (valid);
   983   000CA0  5044               	movf	main@valid^0,w,c
   984   000CA2  A4D8               	btfss	status,2,c
   985   000CA4  EF56  F006         	goto	u1341
   986   000CA8  EF58  F006         	goto	u1340
   987   000CAC                     u1341:
   988   000CAC  EF1E  F006         	goto	l1515
   989   000CB0                     u1340:
   990   000CB0                     
   991                           ;main.c: 94:         }
   992   000CB0  2A45               	incf	main@j^0,f,c
   993   000CB2  0E03               	movlw	3
   994   000CB4  6445               	cpfsgt	main@j^0,c
   995   000CB6  EF5F  F006         	goto	u1351
   996   000CBA  EF61  F006         	goto	u1350
   997   000CBE                     u1351:
   998   000CBE  EF99  F004         	goto	l1423
   999   000CC2                     u1350:
  1000   000CC2  EF97  F004         	goto	l1417
  1001   000CC6  EF00  F000         	goto	start
  1002   000CCA                     __end_of_main:
  1003                           	callstack 0
  1004                           
  1005 ;; *************** function _LCD_Text *****************
  1006 ;; Defined at:
  1007 ;;		line 699 in file "./LCD_16x2.h"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  pt              2    2[COMRAM] PTR void 
  1010 ;;		 -> msg3(9), STR_1(11), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  text            2    4[COMRAM] PTR unsigned char 
  1013 ;;		 -> msg3(9), STR_1(11), 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1023 ;;      Params:         2       0       0       0       0       0       0       0       0
  1024 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1026 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1027 ;;Total ram usage:        4 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 1
  1030 ;; This function calls:
  1031 ;;		_LCD_Busy
  1032 ;;		_LCD_Write
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text1
  1039   000DF6                     __ptext1:
  1040                           	callstack 0
  1041   000DF6                     _LCD_Text:
  1042                           	callstack 29
  1043   000DF6                     
  1044                           ;./LCD_16x2.h: 700:     unsigned char *text = pt;
  1045   000DF6  C03D  F03F         	movff	LCD_Text@pt,LCD_Text@text
  1046   000DFA  C03E  F040         	movff	LCD_Text@pt+1,LCD_Text@text+1
  1047                           
  1048                           ;./LCD_16x2.h: 701:     while (*text) {
  1049   000DFE  EF22  F007         	goto	l1317
  1050   000E02                     l1311:
  1051   000E02  EC74  F007         	call	_LCD_Busy	;wreg free
  1052   000E06  0900               	iorlw	0
  1053   000E08  A4D8               	btfss	status,2,c
  1054   000E0A  EF09  F007         	goto	u851
  1055   000E0E  EF0B  F007         	goto	u850
  1056   000E12                     u851:
  1057   000E12  EF01  F007         	goto	l1311
  1058   000E16                     u850:
  1059   000E16  848C               	bsf	140,2,c	;volatile
  1060   000E18  0E01               	movlw	1
  1061   000E1A  6E3B               	movwf	LCD_Write@mode^0,c
  1062   000E1C  C03F  FFF6         	movff	LCD_Text@text,tblptrl
  1063   000E20  C040  FFF7         	movff	LCD_Text@text+1,tblptrh
  1064   000E24  6AF8               	clrf	tblptru,c
  1065   000E26  0E07               	movlw	(high __ramtop+-1)
  1066   000E28  64F7               	cpfsgt	tblptrh,c
  1067   000E2A  D003               	bra	u867
  1068   000E2C  0008               	tblrd		*
  1069   000E2E  50F5               	movf	tablat,w,c
  1070   000E30  D005               	bra	u860
  1071   000E32                     u867:
  1072   000E32  CFF6 FFE9          	movff	tblptrl,fsr0l
  1073   000E36  CFF7 FFEA          	movff	tblptrh,fsr0h
  1074   000E3A  50EF               	movf	indf0,w,c
  1075   000E3C                     u860:
  1076   000E3C  EC3B  F007         	call	_LCD_Write
  1077   000E40                     
  1078                           ;./LCD_16x2.h: 703:         text++;
  1079   000E40  4A3F               	infsnz	LCD_Text@text^0,f,c
  1080   000E42  2A40               	incf	(LCD_Text@text+1)^0,f,c
  1081   000E44                     l1317:
  1082                           
  1083                           ;./LCD_16x2.h: 701:     while (*text) {
  1084   000E44  C03F  FFF6         	movff	LCD_Text@text,tblptrl
  1085   000E48  C040  FFF7         	movff	LCD_Text@text+1,tblptrh
  1086   000E4C  6AF8               	clrf	tblptru,c
  1087   000E4E  0E07               	movlw	(high __ramtop+-1)
  1088   000E50  64F7               	cpfsgt	tblptrh,c
  1089   000E52  D003               	bra	u877
  1090   000E54  0008               	tblrd		*
  1091   000E56  50F5               	movf	tablat,w,c
  1092   000E58  D005               	bra	u870
  1093   000E5A                     u877:
  1094   000E5A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1095   000E5E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1096   000E62  50EF               	movf	indf0,w,c
  1097   000E64                     u870:
  1098   000E64  0900               	iorlw	0
  1099   000E66  A4D8               	btfss	status,2,c
  1100   000E68  EF38  F007         	goto	u881
  1101   000E6C  EF3A  F007         	goto	u880
  1102   000E70                     u881:
  1103   000E70  EF01  F007         	goto	l1311
  1104   000E74                     u880:
  1105   000E74  0012               	return		;funcret
  1106   000E76                     __end_of_LCD_Text:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _LCD_Init *****************
  1110 ;; Defined at:
  1111 ;;		line 628 in file "./LCD_16x2.h"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1127 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1128 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1129 ;;Total ram usage:        1 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 1
  1132 ;; This function calls:
  1133 ;;		_LCD_Busy
  1134 ;;		_LCD_Write
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text2
  1141   000CCA                     __ptext2:
  1142                           	callstack 0
  1143   000CCA                     _LCD_Init:
  1144                           	callstack 29
  1145   000CCA                     
  1146                           ;./LCD_16x2.h: 630:     TRISAbits.TRISA0 = 0;
  1147   000CCA  9092               	bcf	146,0,c	;volatile
  1148                           
  1149                           ;./LCD_16x2.h: 631:     LATAbits.LATA0 = 0;
  1150   000CCC  9089               	bcf	137,0,c	;volatile
  1151                           
  1152                           ;./LCD_16x2.h: 633:     TRISDbits.TRISD2 = 0;
  1153   000CCE  9495               	bcf	149,2,c	;volatile
  1154                           
  1155                           ;./LCD_16x2.h: 634:     LATDbits.LATD2 = 0;
  1156   000CD0  948C               	bcf	140,2,c	;volatile
  1157                           
  1158                           ;./LCD_16x2.h: 635:     TRISDbits.TRISD3 = 0;
  1159   000CD2  9695               	bcf	149,3,c	;volatile
  1160                           
  1161                           ;./LCD_16x2.h: 636:     LATDbits.LATD3 = 0;
  1162   000CD4  968C               	bcf	140,3,c	;volatile
  1163   000CD6                     
  1164                           ;./LCD_16x2.h: 638:     TRISD &= 0x0F;
  1165   000CD6  0E0F               	movlw	15
  1166   000CD8  1695               	andwf	149,f,c	;volatile
  1167   000CDA                     
  1168                           ;./LCD_16x2.h: 640:     LCD_busy_cnt = 1;
  1169   000CDA  0E01               	movlw	1
  1170   000CDC  6E4A               	movwf	_LCD_busy_cnt^0,c
  1171   000CDE                     
  1172                           ;./LCD_16x2.h: 642:     _delay((unsigned long)((15)*(1000000/4000.0)));
  1173   000CDE  0E05               	movlw	5
  1174   000CE0  6E3D               	movwf	??_LCD_Init^0,c
  1175   000CE2  0EDE               	movlw	222
  1176   000CE4                     u1407:
  1177   000CE4  2EE8               	decfsz	wreg,f,c
  1178   000CE6  D7FE               	bra	u1407
  1179   000CE8  2E3D               	decfsz	??_LCD_Init^0,f,c
  1180   000CEA  D7FC               	bra	u1407
  1181   000CEC                     
  1182                           ;./LCD_16x2.h: 644:     LATDbits.LATD2 = 0; LCD_Write(0x30,0);
  1183   000CEC  948C               	bcf	140,2,c	;volatile
  1184   000CEE  0E00               	movlw	0
  1185   000CF0  6E3B               	movwf	LCD_Write@mode^0,c
  1186   000CF2  0E30               	movlw	48
  1187   000CF4  EC3B  F007         	call	_LCD_Write
  1188   000CF8                     
  1189                           ;./LCD_16x2.h: 645:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1190   000CF8  0EFA               	movlw	250
  1191   000CFA                     u1417:
  1192   000CFA  D000               	nop2	
  1193   000CFC  2EE8               	decfsz	wreg,f,c
  1194   000CFE  D7FD               	bra	u1417
  1195   000D00                     
  1196                           ;./LCD_16x2.h: 646:     LATDbits.LATD2 = 0; LCD_Write(0x30,0);
  1197   000D00  948C               	bcf	140,2,c	;volatile
  1198   000D02  0E00               	movlw	0
  1199   000D04  6E3B               	movwf	LCD_Write@mode^0,c
  1200   000D06  0E30               	movlw	48
  1201   000D08  EC3B  F007         	call	_LCD_Write
  1202   000D0C                     
  1203                           ;./LCD_16x2.h: 647:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1204   000D0C  0EFA               	movlw	250
  1205   000D0E                     u1427:
  1206   000D0E  D000               	nop2	
  1207   000D10  2EE8               	decfsz	wreg,f,c
  1208   000D12  D7FD               	bra	u1427
  1209   000D14                     
  1210                           ;./LCD_16x2.h: 648:     LATDbits.LATD2 = 0; LCD_Write(0x30,0);
  1211   000D14  948C               	bcf	140,2,c	;volatile
  1212   000D16  0E00               	movlw	0
  1213   000D18  6E3B               	movwf	LCD_Write@mode^0,c
  1214   000D1A  0E30               	movlw	48
  1215   000D1C  EC3B  F007         	call	_LCD_Write
  1216   000D20                     
  1217                           ;./LCD_16x2.h: 649:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1218   000D20  0EFA               	movlw	250
  1219   000D22                     u1437:
  1220   000D22  D000               	nop2	
  1221   000D24  2EE8               	decfsz	wreg,f,c
  1222   000D26  D7FD               	bra	u1437
  1223   000D28                     
  1224                           ;./LCD_16x2.h: 658:     LATDbits.LATD2 = 0; LCD_Write(0x20,0);
  1225   000D28  948C               	bcf	140,2,c	;volatile
  1226   000D2A  0E00               	movlw	0
  1227   000D2C  6E3B               	movwf	LCD_Write@mode^0,c
  1228   000D2E  0E20               	movlw	32
  1229   000D30  EC3B  F007         	call	_LCD_Write
  1230   000D34                     l1283:
  1231                           
  1232                           ;./LCD_16x2.h: 659:     while (LCD_Busy()) {
  1233   000D34  EC74  F007         	call	_LCD_Busy	;wreg free
  1234   000D38  0900               	iorlw	0
  1235   000D3A  A4D8               	btfss	status,2,c
  1236   000D3C  EFA2  F006         	goto	u791
  1237   000D40  EFA4  F006         	goto	u790
  1238   000D44                     u791:
  1239   000D44  EF9A  F006         	goto	l1283
  1240   000D48                     u790:
  1241   000D48                     l1285:
  1242   000D48  EC74  F007         	call	_LCD_Busy	;wreg free
  1243   000D4C  0900               	iorlw	0
  1244   000D4E  A4D8               	btfss	status,2,c
  1245   000D50  EFAC  F006         	goto	u801
  1246   000D54  EFAE  F006         	goto	u800
  1247   000D58                     u801:
  1248   000D58  EFA4  F006         	goto	l1285
  1249   000D5C                     u800:
  1250   000D5C  948C               	bcf	140,2,c	;volatile
  1251   000D5E  0E01               	movlw	1
  1252   000D60  6E3B               	movwf	LCD_Write@mode^0,c
  1253   000D62  0E28               	movlw	40
  1254   000D64  EC3B  F007         	call	_LCD_Write
  1255   000D68                     
  1256                           ;./LCD_16x2.h: 664:     _displaycontrol = 0x04 | 0x00 | 0x00;
  1257   000D68  0E04               	movlw	4
  1258   000D6A  6E48               	movwf	__displaycontrol^0,c
  1259   000D6C                     l1291:
  1260   000D6C  EC74  F007         	call	_LCD_Busy	;wreg free
  1261   000D70  0900               	iorlw	0
  1262   000D72  A4D8               	btfss	status,2,c
  1263   000D74  EFBE  F006         	goto	u811
  1264   000D78  EFC0  F006         	goto	u810
  1265   000D7C                     u811:
  1266   000D7C  EFB6  F006         	goto	l1291
  1267   000D80                     u810:
  1268   000D80  948C               	bcf	140,2,c	;volatile
  1269   000D82  0E01               	movlw	1
  1270   000D84  6E3B               	movwf	LCD_Write@mode^0,c
  1271   000D86  5048               	movf	__displaycontrol^0,w,c
  1272   000D88  0908               	iorlw	8
  1273   000D8A  EC3B  F007         	call	_LCD_Write
  1274   000D8E                     
  1275                           ;./LCD_16x2.h: 666:     _displaymode = 0x02 | 0x00;
  1276   000D8E  0E02               	movlw	2
  1277   000D90  6E47               	movwf	__displaymode^0,c
  1278   000D92                     l1297:
  1279   000D92  EC74  F007         	call	_LCD_Busy	;wreg free
  1280   000D96  0900               	iorlw	0
  1281   000D98  A4D8               	btfss	status,2,c
  1282   000D9A  EFD1  F006         	goto	u821
  1283   000D9E  EFD3  F006         	goto	u820
  1284   000DA2                     u821:
  1285   000DA2  EFC9  F006         	goto	l1297
  1286   000DA6                     u820:
  1287   000DA6  948C               	bcf	140,2,c	;volatile
  1288   000DA8  0E01               	movlw	1
  1289   000DAA  6E3B               	movwf	LCD_Write@mode^0,c
  1290   000DAC  5047               	movf	__displaymode^0,w,c
  1291   000DAE  0904               	iorlw	4
  1292   000DB0  EC3B  F007         	call	_LCD_Write
  1293   000DB4                     l1301:
  1294   000DB4  EC74  F007         	call	_LCD_Busy	;wreg free
  1295   000DB8  0900               	iorlw	0
  1296   000DBA  A4D8               	btfss	status,2,c
  1297   000DBC  EFE2  F006         	goto	u831
  1298   000DC0  EFE4  F006         	goto	u830
  1299   000DC4                     u831:
  1300   000DC4  EFDA  F006         	goto	l1301
  1301   000DC8                     u830:
  1302   000DC8  948C               	bcf	140,2,c	;volatile
  1303   000DCA  0E01               	movlw	1
  1304   000DCC  6E3B               	movwf	LCD_Write@mode^0,c
  1305   000DCE  0E01               	movlw	1
  1306   000DD0  EC3B  F007         	call	_LCD_Write
  1307   000DD4                     l1305:
  1308   000DD4  EC74  F007         	call	_LCD_Busy	;wreg free
  1309   000DD8  0900               	iorlw	0
  1310   000DDA  A4D8               	btfss	status,2,c
  1311   000DDC  EFF2  F006         	goto	u841
  1312   000DE0  EFF4  F006         	goto	u840
  1313   000DE4                     u841:
  1314   000DE4  EFEA  F006         	goto	l1305
  1315   000DE8                     u840:
  1316   000DE8  948C               	bcf	140,2,c	;volatile
  1317   000DEA  0E01               	movlw	1
  1318   000DEC  6E3B               	movwf	LCD_Write@mode^0,c
  1319   000DEE  0E02               	movlw	2
  1320   000DF0  EC3B  F007         	call	_LCD_Write
  1321   000DF4  0012               	return		;funcret
  1322   000DF6                     __end_of_LCD_Init:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _LCD_CustomChar *****************
  1326 ;; Defined at:
  1327 ;;		line 709 in file "./LCD_16x2.h"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  pt              2    2[COMRAM] PTR void 
  1330 ;;		 -> C3(7), C2(7), C1(7), 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  i               1    6[COMRAM] unsigned char 
  1333 ;;  c               2    4[COMRAM] PTR unsigned char 
  1334 ;;		 -> C3(7), C2(7), C1(7), 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1344 ;;      Params:         2       0       0       0       0       0       0       0       0
  1345 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1347 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1348 ;;Total ram usage:        5 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 1
  1351 ;; This function calls:
  1352 ;;		_LCD_Busy
  1353 ;;		_LCD_Write
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text3
  1360   000F36                     __ptext3:
  1361                           	callstack 0
  1362   000F36                     _LCD_CustomChar:
  1363                           	callstack 29
  1364   000F36                     
  1365                           ;./LCD_16x2.h: 710:     unsigned char *c = pt;
  1366   000F36  C03D  F03F         	movff	LCD_CustomChar@pt,LCD_CustomChar@c
  1367   000F3A  C03E  F040         	movff	LCD_CustomChar@pt+1,LCD_CustomChar@c+1
  1368   000F3E                     
  1369                           ;./LCD_16x2.h: 711:     for (char i = 0; i < 8; i++) {
  1370   000F3E  0E00               	movlw	0
  1371   000F40  6E41               	movwf	LCD_CustomChar@i^0,c
  1372   000F42                     l1327:
  1373   000F42  EC74  F007         	call	_LCD_Busy	;wreg free
  1374   000F46  0900               	iorlw	0
  1375   000F48  A4D8               	btfss	status,2,c
  1376   000F4A  EFA9  F007         	goto	u891
  1377   000F4E  EFAB  F007         	goto	u890
  1378   000F52                     u891:
  1379   000F52  EFA1  F007         	goto	l1327
  1380   000F56                     u890:
  1381   000F56  848C               	bsf	140,2,c	;volatile
  1382   000F58  0E01               	movlw	1
  1383   000F5A  6E3B               	movwf	LCD_Write@mode^0,c
  1384   000F5C  C03F  FFD9         	movff	LCD_CustomChar@c,fsr2l
  1385   000F60  C040  FFDA         	movff	LCD_CustomChar@c+1,fsr2h
  1386   000F64  50DF               	movf	indf2,w,c
  1387   000F66  EC3B  F007         	call	_LCD_Write
  1388   000F6A                     
  1389                           ;./LCD_16x2.h: 713:         c++;
  1390   000F6A  4A3F               	infsnz	LCD_CustomChar@c^0,f,c
  1391   000F6C  2A40               	incf	(LCD_CustomChar@c+1)^0,f,c
  1392   000F6E                     
  1393                           ;./LCD_16x2.h: 714:     }
  1394   000F6E  2A41               	incf	LCD_CustomChar@i^0,f,c
  1395   000F70  0E07               	movlw	7
  1396   000F72  6441               	cpfsgt	LCD_CustomChar@i^0,c
  1397   000F74  EFBE  F007         	goto	u901
  1398   000F78  EFC0  F007         	goto	u900
  1399   000F7C                     u901:
  1400   000F7C  EFA1  F007         	goto	l1327
  1401   000F80                     u900:
  1402   000F80  0012               	return		;funcret
  1403   000F82                     __end_of_LCD_CustomChar:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _LCD_Write *****************
  1407 ;; Defined at:
  1408 ;;		line 674 in file "./LCD_16x2.h"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  value           1    wreg     unsigned char 
  1411 ;;  mode            1    0[COMRAM] unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  value           1    1[COMRAM] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1423 ;;      Params:         1       0       0       0       0       0       0       0       0
  1424 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1426 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1427 ;;Total ram usage:        2 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_LCD_Init
  1433 ;;		_LCD_Text
  1434 ;;		_LCD_CustomChar
  1435 ;;		_main
  1436 ;;		_LCD_print_number
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text4
  1441   000E76                     __ptext4:
  1442                           	callstack 0
  1443   000E76                     _LCD_Write:
  1444                           	callstack 30
  1445                           
  1446                           ;incstack = 0
  1447                           ;LCD_Write@value stored from wreg
  1448   000E76  6E3C               	movwf	LCD_Write@value^0,c
  1449   000E78                     
  1450                           ;./LCD_16x2.h: 675:     LCD_data.all = value;
  1451   000E78  C03C  F049         	movff	LCD_Write@value,_LCD_data
  1452   000E7C                     
  1453                           ;./LCD_16x2.h: 677:     LATAbits.LATA0 = 0;
  1454   000E7C  9089               	bcf	137,0,c	;volatile
  1455   000E7E                     
  1456                           ;./LCD_16x2.h: 679:     LATDbits.LATD7 = LCD_data.bit7;
  1457   000E7E  AE49               	btfss	_LCD_data^0,7,c
  1458   000E80  D002               	bra	u705
  1459   000E82  8E8C               	bsf	140,7,c	;volatile
  1460   000E84  D001               	bra	u707
  1461   000E86                     u705:
  1462   000E86  9E8C               	bcf	140,7,c	;volatile
  1463   000E88                     u707:
  1464   000E88                     
  1465                           ;./LCD_16x2.h: 680:     LATDbits.LATD6 = LCD_data.bit6;
  1466   000E88  AC49               	btfss	_LCD_data^0,6,c
  1467   000E8A  D002               	bra	u715
  1468   000E8C  8C8C               	bsf	140,6,c	;volatile
  1469   000E8E  D001               	bra	u717
  1470   000E90                     u715:
  1471   000E90  9C8C               	bcf	140,6,c	;volatile
  1472   000E92                     u717:
  1473   000E92                     
  1474                           ;./LCD_16x2.h: 681:     LATDbits.LATD5 = LCD_data.bit5;
  1475   000E92  AA49               	btfss	_LCD_data^0,5,c
  1476   000E94  D002               	bra	u725
  1477   000E96  8A8C               	bsf	140,5,c	;volatile
  1478   000E98  D001               	bra	u727
  1479   000E9A                     u725:
  1480   000E9A  9A8C               	bcf	140,5,c	;volatile
  1481   000E9C                     u727:
  1482   000E9C                     
  1483                           ;./LCD_16x2.h: 682:     LATDbits.LATD4 = LCD_data.bit4;
  1484   000E9C  A849               	btfss	_LCD_data^0,4,c
  1485   000E9E  D002               	bra	u735
  1486   000EA0  888C               	bsf	140,4,c	;volatile
  1487   000EA2  D001               	bra	u737
  1488   000EA4                     u735:
  1489   000EA4  988C               	bcf	140,4,c	;volatile
  1490   000EA6                     u737:
  1491   000EA6                     
  1492                           ;./LCD_16x2.h: 684:     LATDbits.LATD3 = 1; _delay((unsigned long)((1)*(1000000/4000000.
      +                          0))); LATDbits.LATD3 = 0;;
  1493   000EA6  868C               	bsf	140,3,c	;volatile
  1494   000EA8  968C               	bcf	140,3,c	;volatile
  1495   000EAA                     
  1496                           ;./LCD_16x2.h: 685:     if (mode) {
  1497   000EAA  503B               	movf	LCD_Write@mode^0,w,c
  1498   000EAC  B4D8               	btfsc	status,2,c
  1499   000EAE  EF5B  F007         	goto	u741
  1500   000EB2  EF5D  F007         	goto	u740
  1501   000EB6                     u741:
  1502   000EB6  EF73  F007         	goto	l53
  1503   000EBA                     u740:
  1504   000EBA                     
  1505                           ;./LCD_16x2.h: 687:         LATDbits.LATD7 = LCD_data.bit3;
  1506   000EBA  A649               	btfss	_LCD_data^0,3,c
  1507   000EBC  D002               	bra	u755
  1508   000EBE  8E8C               	bsf	140,7,c	;volatile
  1509   000EC0  D001               	bra	u757
  1510   000EC2                     u755:
  1511   000EC2  9E8C               	bcf	140,7,c	;volatile
  1512   000EC4                     u757:
  1513                           
  1514                           ;./LCD_16x2.h: 688:         LATDbits.LATD6 = LCD_data.bit2;
  1515   000EC4  A449               	btfss	_LCD_data^0,2,c
  1516   000EC6  D002               	bra	u765
  1517   000EC8  8C8C               	bsf	140,6,c	;volatile
  1518   000ECA  D001               	bra	u767
  1519   000ECC                     u765:
  1520   000ECC  9C8C               	bcf	140,6,c	;volatile
  1521   000ECE                     u767:
  1522                           
  1523                           ;./LCD_16x2.h: 689:         LATDbits.LATD5 = LCD_data.bit1;
  1524   000ECE  A249               	btfss	_LCD_data^0,1,c
  1525   000ED0  D002               	bra	u775
  1526   000ED2  8A8C               	bsf	140,5,c	;volatile
  1527   000ED4  D001               	bra	u777
  1528   000ED6                     u775:
  1529   000ED6  9A8C               	bcf	140,5,c	;volatile
  1530   000ED8                     u777:
  1531                           
  1532                           ;./LCD_16x2.h: 690:         LATDbits.LATD4 = LCD_data.bit0;
  1533   000ED8  A049               	btfss	_LCD_data^0,0,c
  1534   000EDA  D002               	bra	u785
  1535   000EDC  888C               	bsf	140,4,c	;volatile
  1536   000EDE  D001               	bra	u787
  1537   000EE0                     u785:
  1538   000EE0  988C               	bcf	140,4,c	;volatile
  1539   000EE2                     u787:
  1540                           
  1541                           ;./LCD_16x2.h: 691:         LATDbits.LATD3 = 1; _delay((unsigned long)((1)*(1000000/4000
      +                          000.0))); LATDbits.LATD3 = 0;;
  1542   000EE2  868C               	bsf	140,3,c	;volatile
  1543   000EE4  968C               	bcf	140,3,c	;volatile
  1544   000EE6                     l53:
  1545   000EE6  0012               	return		;funcret
  1546   000EE8                     __end_of_LCD_Write:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _LCD_Busy *****************
  1550 ;; Defined at:
  1551 ;;		line 742 in file "./LCD_16x2.h"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      unsigned char 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_LCD_Init
  1575 ;;		_LCD_Text
  1576 ;;		_LCD_CustomChar
  1577 ;;		_main
  1578 ;;		_LCD_print_number
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text5
  1583   000EE8                     __ptext5:
  1584                           	callstack 0
  1585   000EE8                     _LCD_Busy:
  1586                           	callstack 29
  1587   000EE8                     
  1588                           ;./LCD_16x2.h: 744:     if (LCD_busy_cnt >= 100) {
  1589   000EE8  0E63               	movlw	99
  1590   000EEA  644A               	cpfsgt	_LCD_busy_cnt^0,c
  1591   000EEC  EF7A  F007         	goto	u101
  1592   000EF0  EF7C  F007         	goto	u100
  1593   000EF4                     u101:
  1594   000EF4  EF81  F007         	goto	l93
  1595   000EF8                     u100:
  1596   000EF8                     l893:
  1597                           
  1598                           ;./LCD_16x2.h: 745:         LCD_busy_cnt = 1;
  1599   000EF8  0E01               	movlw	1
  1600   000EFA  6E4A               	movwf	_LCD_busy_cnt^0,c
  1601   000EFC                     
  1602                           ;./LCD_16x2.h: 746:         return 0;
  1603   000EFC  0E00               	movlw	0
  1604   000EFE  EF9A  F007         	goto	l94
  1605   000F02                     l93:
  1606                           
  1607                           ;./LCD_16x2.h: 749:     LATAbits.LATA0 = 1;
  1608   000F02  8089               	bsf	137,0,c	;volatile
  1609                           
  1610                           ;./LCD_16x2.h: 750:     LATDbits.LATD2 = 0;
  1611   000F04  948C               	bcf	140,2,c	;volatile
  1612   000F06                     
  1613                           ;./LCD_16x2.h: 751:     TRISD |= 0xF0;
  1614   000F06  0EF0               	movlw	240
  1615   000F08  1295               	iorwf	149,f,c	;volatile
  1616   000F0A                     
  1617                           ;./LCD_16x2.h: 753:     LATDbits.LATD3 = 1;;
  1618   000F0A  868C               	bsf	140,3,c	;volatile
  1619   000F0C                     
  1620                           ;./LCD_16x2.h: 755:     LCD_data.bit7 = PORTDbits.RD7;
  1621   000F0C  AE83               	btfss	131,7,c	;volatile
  1622   000F0E  D002               	bra	u115
  1623   000F10  8E49               	bsf	_LCD_data^0,7,c
  1624   000F12  D001               	bra	u117
  1625   000F14                     u115:
  1626   000F14  9E49               	bcf	_LCD_data^0,7,c
  1627   000F16                     u117:
  1628   000F16                     
  1629                           ;./LCD_16x2.h: 756:     LATDbits.LATD3 = 0;;
  1630   000F16  968C               	bcf	140,3,c	;volatile
  1631   000F18                     
  1632                           ;./LCD_16x2.h: 757:     LATDbits.LATD3 = 1;;
  1633   000F18  868C               	bsf	140,3,c	;volatile
  1634   000F1A                     
  1635                           ;./LCD_16x2.h: 759:     LATDbits.LATD3 = 0;;
  1636   000F1A  968C               	bcf	140,3,c	;volatile
  1637                           
  1638                           ;./LCD_16x2.h: 761:     TRISD &= 0x0F;
  1639   000F1C  0E0F               	movlw	15
  1640   000F1E  1695               	andwf	149,f,c	;volatile
  1641   000F20                     
  1642                           ;./LCD_16x2.h: 762:     LATAbits.LATA0 = 0;
  1643   000F20  9089               	bcf	137,0,c	;volatile
  1644   000F22                     
  1645                           ;./LCD_16x2.h: 765:     if (LCD_data.bit7 == 1) {
  1646   000F22  AE49               	btfss	_LCD_data^0,7,c
  1647   000F24  EF96  F007         	goto	u121
  1648   000F28  EF98  F007         	goto	u120
  1649   000F2C                     u121:
  1650   000F2C  EF7C  F007         	goto	l893
  1651   000F30                     u120:
  1652   000F30                     
  1653                           ;./LCD_16x2.h: 766:         LCD_busy_cnt++;
  1654   000F30  2A4A               	incf	_LCD_busy_cnt^0,f,c
  1655   000F32                     
  1656                           ;./LCD_16x2.h: 767:         return 1;
  1657   000F32  0E01               	movlw	1
  1658   000F34                     l94:
  1659   000F34  0012               	return		;funcret
  1660   000F36                     __end_of_LCD_Busy:
  1661                           	callstack 0
  1662                           
  1663                           	psect	rparam
  1664   000000                     
  1665                           	psect	idloc
  1666                           
  1667                           ;Config register IDLOC0 @ 0x200000
  1668                           ;	unspecified, using default values
  1669   200000                     	org	2097152
  1670   200000  FF                 	db	255
  1671                           
  1672                           ;Config register IDLOC1 @ 0x200001
  1673                           ;	unspecified, using default values
  1674   200001                     	org	2097153
  1675   200001  FF                 	db	255
  1676                           
  1677                           ;Config register IDLOC2 @ 0x200002
  1678                           ;	unspecified, using default values
  1679   200002                     	org	2097154
  1680   200002  FF                 	db	255
  1681                           
  1682                           ;Config register IDLOC3 @ 0x200003
  1683                           ;	unspecified, using default values
  1684   200003                     	org	2097155
  1685   200003  FF                 	db	255
  1686                           
  1687                           ;Config register IDLOC4 @ 0x200004
  1688                           ;	unspecified, using default values
  1689   200004                     	org	2097156
  1690   200004  FF                 	db	255
  1691                           
  1692                           ;Config register IDLOC5 @ 0x200005
  1693                           ;	unspecified, using default values
  1694   200005                     	org	2097157
  1695   200005  FF                 	db	255
  1696                           
  1697                           ;Config register IDLOC6 @ 0x200006
  1698                           ;	unspecified, using default values
  1699   200006                     	org	2097158
  1700   200006  FF                 	db	255
  1701                           
  1702                           ;Config register IDLOC7 @ 0x200007
  1703                           ;	unspecified, using default values
  1704   200007                     	org	2097159
  1705   200007  FF                 	db	255
  1706                           
  1707                           	psect	config
  1708                           
  1709                           ;Config register CONFIG1L @ 0x300000
  1710                           ;	PLL Prescaler Selection bits
  1711                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1712                           ;	System Clock Postscaler Selection bits
  1713                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1714                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1715                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1716   300000                     	org	3145728
  1717   300000  00                 	db	0
  1718                           
  1719                           ;Config register CONFIG1H @ 0x300001
  1720                           ;	Oscillator Selection bits
  1721                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1722                           ;	Fail-Safe Clock Monitor Enable bit
  1723                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1724                           ;	Internal/External Oscillator Switchover bit
  1725                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1726   300001                     	org	3145729
  1727   300001  08                 	db	8
  1728                           
  1729                           ;Config register CONFIG2L @ 0x300002
  1730                           ;	Power-up Timer Enable bit
  1731                           ;	PWRT = OFF, PWRT disabled
  1732                           ;	Brown-out Reset Enable bits
  1733                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1734                           ;	Brown-out Reset Voltage bits
  1735                           ;	BORV = 3, Minimum setting 2.05V
  1736                           ;	USB Voltage Regulator Enable bit
  1737                           ;	VREGEN = OFF, USB voltage regulator disabled
  1738   300002                     	org	3145730
  1739   300002  1F                 	db	31
  1740                           
  1741                           ;Config register CONFIG2H @ 0x300003
  1742                           ;	Watchdog Timer Enable bit
  1743                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1744                           ;	Watchdog Timer Postscale Select bits
  1745                           ;	WDTPS = 32768, 1:32768
  1746   300003                     	org	3145731
  1747   300003  1E                 	db	30
  1748                           
  1749                           ; Padding undefined space
  1750   300004                     	org	3145732
  1751   300004  FF                 	db	255
  1752                           
  1753                           ;Config register CONFIG3H @ 0x300005
  1754                           ;	CCP2 MUX bit
  1755                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1756                           ;	PORTB A/D Enable bit
  1757                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1758                           ;	Low-Power Timer 1 Oscillator Enable bit
  1759                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1760                           ;	MCLR Pin Enable bit
  1761                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1762   300005                     	org	3145733
  1763   300005  83                 	db	131
  1764                           
  1765                           ;Config register CONFIG4L @ 0x300006
  1766                           ;	Stack Full/Underflow Reset Enable bit
  1767                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1768                           ;	Single-Supply ICSP Enable bit
  1769                           ;	LVP = OFF, Single-Supply ICSP disabled
  1770                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1771                           ;	ICPRT = OFF, ICPORT disabled
  1772                           ;	Extended Instruction Set Enable bit
  1773                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1774                           ;	Background Debugger Enable bit
  1775                           ;	DEBUG = 0x1, unprogrammed default
  1776   300006                     	org	3145734
  1777   300006  81                 	db	129
  1778                           
  1779                           ; Padding undefined space
  1780   300007                     	org	3145735
  1781   300007  FF                 	db	255
  1782                           
  1783                           ;Config register CONFIG5L @ 0x300008
  1784                           ;	Code Protection bit
  1785                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1786                           ;	Code Protection bit
  1787                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1788                           ;	Code Protection bit
  1789                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1790                           ;	Code Protection bit
  1791                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1792   300008                     	org	3145736
  1793   300008  0F                 	db	15
  1794                           
  1795                           ;Config register CONFIG5H @ 0x300009
  1796                           ;	Boot Block Code Protection bit
  1797                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1798                           ;	Data EEPROM Code Protection bit
  1799                           ;	CPD = OFF, Data EEPROM is not code-protected
  1800   300009                     	org	3145737
  1801   300009  C0                 	db	192
  1802                           
  1803                           ;Config register CONFIG6L @ 0x30000A
  1804                           ;	Write Protection bit
  1805                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1806                           ;	Write Protection bit
  1807                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1808                           ;	Write Protection bit
  1809                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1810                           ;	Write Protection bit
  1811                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1812   30000A                     	org	3145738
  1813   30000A  0F                 	db	15
  1814                           
  1815                           ;Config register CONFIG6H @ 0x30000B
  1816                           ;	Configuration Register Write Protection bit
  1817                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1818                           ;	Boot Block Write Protection bit
  1819                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1820                           ;	Data EEPROM Write Protection bit
  1821                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1822   30000B                     	org	3145739
  1823   30000B  E0                 	db	224
  1824                           
  1825                           ;Config register CONFIG7L @ 0x30000C
  1826                           ;	Table Read Protection bit
  1827                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1828                           ;	Table Read Protection bit
  1829                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1830                           ;	Table Read Protection bit
  1831                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1832                           ;	Table Read Protection bit
  1833                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1834   30000C                     	org	3145740
  1835   30000C  0F                 	db	15
  1836                           
  1837                           ;Config register CONFIG7H @ 0x30000D
  1838                           ;	Boot Block Table Read Protection bit
  1839                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1840   30000D                     	org	3145741
  1841   30000D  40                 	db	64
  1842                           tosu	equ	0xFFF
  1843                           tosh	equ	0xFFE
  1844                           tosl	equ	0xFFD
  1845                           stkptr	equ	0xFFC
  1846                           pclatu	equ	0xFFB
  1847                           pclath	equ	0xFFA
  1848                           pcl	equ	0xFF9
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           prodh	equ	0xFF4
  1854                           prodl	equ	0xFF3
  1855                           indf0	equ	0xFEF
  1856                           postinc0	equ	0xFEE
  1857                           postdec0	equ	0xFED
  1858                           preinc0	equ	0xFEC
  1859                           plusw0	equ	0xFEB
  1860                           fsr0h	equ	0xFEA
  1861                           fsr0l	equ	0xFE9
  1862                           wreg	equ	0xFE8
  1863                           indf1	equ	0xFE7
  1864                           postinc1	equ	0xFE6
  1865                           postdec1	equ	0xFE5
  1866                           preinc1	equ	0xFE4
  1867                           plusw1	equ	0xFE3
  1868                           fsr1h	equ	0xFE2
  1869                           fsr1l	equ	0xFE1
  1870                           bsr	equ	0xFE0
  1871                           indf2	equ	0xFDF
  1872                           postinc2	equ	0xFDE
  1873                           postdec2	equ	0xFDD
  1874                           preinc2	equ	0xFDC
  1875                           plusw2	equ	0xFDB
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        58
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_CustomChar@pt	PTR void  size(2) Largest target is 7
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), 

    LCD_CustomChar@c	PTR unsigned char  size(2) Largest target is 7
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), 

    LCD_Text@pt	PTR void  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 

    LCD_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_LCD_CustomChar
    _LCD_Text->_LCD_Write
    _LCD_Init->_LCD_Write
    _LCD_CustomChar->_LCD_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11158
                                              7 COMRAM     5     5      0
                           _LCD_Busy
                     _LCD_CustomChar
                           _LCD_Init
                           _LCD_Text
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Text                                             4     2      2    2772
                                              2 COMRAM     4     2      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    2552
                                              2 COMRAM     1     1      0
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_CustomChar                                       5     3      2    2872
                                              2 COMRAM     5     3      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            2     1      1    2552
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Busy
   _LCD_CustomChar
     _LCD_Busy
     _LCD_Write
   _LCD_Init
     _LCD_Busy
     _LCD_Write
   _LCD_Text
     _LCD_Busy
     _LCD_Write
   _LCD_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      4A       1       77.9%
BITBIGSFRhhh        3E      0       0      20        0.0%
BITBIGSFRhhl        2B      0       0      21        0.0%
BITBIGSFRlll        23      0       0      26        0.0%
BITBIGSFRllh         5      0       0      25        0.0%
BITBIGSFRlhh         5      0       0      23        0.0%
BITBIGSFRlhl         2      0       0      24        0.0%
BITBIGSFRhl          2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      27        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 08 22:36:43 2023

         _LCD_CustomChar 0F36                       _C1 0034                       _C2 002D  
                     _C3 0026                       l42 0DA6                       l36 0D5C  
                     l60 0E16                       l53 0EE6                       l45 0DC8  
                     l70 0F80                       l62 0E74                       l39 0D80  
                     l48 0DE8                       l49 0DF4                       l93 0F02  
                     l69 0F56                       l94 0F34                      l120 0856  
                    l123 0882                      l132 08FC                      l141 0946  
                    l117 082A                      l150 09CC                      l126 08AE  
                    l135 0920                      l144 0968                      l161 0A4E  
                    l129 08DA                      l147 09A4                      l156 0A08  
                    l173 0B60                      l165 0A94                      l176 0B9A  
                    l169 0ADA                      l179 0BC2                      l189 0C82  
                    l901 0F0A                      l911 0F1A                      l903 0F0C  
                    l921 0F32                      l913 0F1A                      l905 0F0C  
                    l915 0F20                      l907 0F16                      l917 0F22  
                    l909 0F18                      l919 0F30                      l891 0EE8  
                    l893 0EF8                      l895 0EFC                      l899 0F06  
                    u100 0EF8                      u101 0EF4                      u120 0F30  
                    u121 0F2C                      u115 0F14                      u117 0F16  
                    u800 0D5C                      u705 0E86                      u801 0D58  
                    u810 0D80                      u715 0E90                      u707 0E88  
                    u811 0D7C                      u740 0EBA                      u900 0F80  
                    u820 0DA6                      u741 0EB6                      u725 0E9A  
                    u717 0E92                      u901 0F7C                      u821 0DA2  
                    u830 0DC8                      u735 0EA4                      u727 0E9C  
                    u831 0DC4                      u840 0DE8                      u737 0EA6  
                    u841 0DE4                      u850 0E16                      u755 0EC2  
                    u851 0E12                      u860 0E3C                      u765 0ECC  
                    u757 0EC4                      u790 0D48                      u870 0E64  
                    u775 0ED6                      u767 0ECE                      u791 0D44  
                    u880 0E74                      u785 0EE0                      u777 0ED8  
                    u881 0E70                      u890 0F56                      u787 0EE2  
                    u891 0F52                      u867 0E32                      u980 082A  
                    u877 0E5A                      u981 0826                      u990 0856  
                    u991 0852                      wreg 0FE8                     l1301 0DB4  
                   l1231 0E78                     l1303 0DCA                     l1311 0E02  
                   l1241 0E9C                     l1233 0E7C                     l1321 0F3E  
                   l1305 0DD4                     l1313 0E18                     l1401 08C6  
                   l1251 0EBA                     l1243 0EA6                     l1235 0E7E  
                   l1331 0F6A                     l1307 0DEA                     l1315 0E40  
                   l1411 090A                     l1403 08DC                     l1245 0EA8  
                   l1237 0E88                     l1333 0F6E                     l1261 0CEC  
                   l1253 0CCA                     l1317 0E44                     l1309 0DF6  
                   l1501 0BAE                     l1413 090C                     l1405 08E6  
                   l1247 0EA8                     l1239 0E92                     l1335 0F70  
                   l1327 0F42                     l1319 0F36                     l1271 0D0C  
                   l1263 0CEE                     l1255 0CD6                     l1511 0C22  
                   l1503 0BC4                     l1431 096A                     l1423 0932  
                   l1415 0922                     l1407 08E8                     l1249 0EAA  
                   l1329 0F58                     l1281 0D2A                     l1273 0D14  
                   l1265 0CF8                     l1257 0CDA                     l1521 0C8E  
                   l1505 0BD4                     l1441 09B2                     l1433 0976  
                   l1425 0948                     l1417 092E                     l1409 08FE  
                   l1291 0D6C                     l1283 0D34                     l1275 0D16  
                   l1267 0D00                     l1259 0CDE                     l1523 0C90  
                   l1507 0BEE                     l1515 0C3C                     l1451 09F4  
                   l1443 09B6                     l1435 098E                     l1427 0952  
                   l1293 0D82                     l1285 0D48                     l1277 0D20  
                   l1269 0D02                     l1525 0CA0                     l1509 0C08  
                   l1517 0C6E                     l1461 0A6A                     l1453 0A0A  
                   l1445 09B8                     l1437 0990                     l1429 0954  
                   l1381 0836                     l1373 080E                     l1295 0D8E  
                   l1287 0D5E                     l1279 0D28                     l1527 0CB0  
                   l1519 0C84                     l1551 0B0A                     l1471 0ADC  
                   l1463 0A80                     l1455 0A24                     l1447 09CE  
                   l1439 09A6                     l1391 0884                     l1383 0842  
                   l1375 0812                     l1297 0D92                     l1289 0D68  
                   l1529 0CB2                     l1553 0C50                     l1481 0B3A  
                   l1465 0A96                     l1457 0A3A                     l1449 09DE  
                   l1393 088E                     l1385 0858                     l1377 0816  
                   l1299 0DA8                     l1491 0B84                     l1483 0B4A  
                   l1467 0AB0                     l1459 0A50                     l1475 0AF6  
                   l1395 089A                     l1387 0862                     l1379 082C  
                   l1493 0B86                     l1485 0B4C                     l1469 0AC6  
                   l1477 0B28                     l1397 08B0                     l1389 086E  
                   l1495 0B9C                     l1487 0B62                     l1479 0B2A  
                   l1399 08BA                     l1497 0BA8                     l1489 0B6E  
                   l1499 0BAC                     STR_1 0801                     u1000 0882  
                   u1001 087E                     u1010 08AE                     u1011 08AA  
                   u1100 09F2                     u1020 08DA                     u1021 08D6  
                   u1110 0A08                     u1030 08FC                     u1111 0A04  
                   u1031 08F8                     u1200 0ADA                     u1120 0A36  
                   u1040 0920                     u1201 0AD6                     u1121 0A30  
                   u1041 091C                     u1210 0B4A                     u1130 0A38  
                   u1050 0946                     u1211 0B46                     u1051 0942  
                   u1300 0C1C                     u1220 0B60                     u1140 0A4E  
                   u1060 0968                     u1221 0B5C                     u1141 0A4A  
                   u1061 0964                     u1310 0C34                     u1230 0B9A  
                   u1150 0A7C                     u1070 09A4                     u1311 0C2E  
                   u1231 0B96                     u1151 0A76                     u1071 09A0  
                   u1320 0C36                     u1240 0BC2                     u1160 0A7E  
                   u1080 09CC                     u1241 0BBE                     u1081 09C8  
                   u1330 0C82                     u1250 0BE6                     u1170 0A94  
                   u1090 09F0                     u1331 0C7E                     u1251 0BE0  
                   u1171 0A90                     u1091 09EA                     u1340 0CB0  
                   u1260 0BE8                     u1180 0AC2                     u1341 0CAC  
                   u1181 0ABC                     u1350 0CC2                     u1270 0C00  
                   u1190 0AC4                     u1407 0CE4                     u1351 0CBE  
                   u1271 0BFA                     u1280 0C02                     u1417 0CFA  
                   u1290 0C1A                     u1427 0D0E                     u1291 0C14  
                   u1437 0D22                     u1367 0980                     u1377 0B30  
                   u1387 0B78                     u1397 0C96                     _main 080E  
                   _msg1 000D                     _msg2 0001                     _msg3 001D  
                   _msg4 0018                     fsr0h 0FEA                     indf0 0FEF  
                   fsr2h 0FDA                     fsr0l 0FE9                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
 __end_of_LCD_CustomChar 0F82             ___param_bank 0000         __end_of_LCD_Busy 0F36  
       __end_of_LCD_Init 0DF6         __end_of_LCD_Text 0E76                    ?_main 003B  
                  _TRISD 0F95          LCD_CustomChar@c 003F          LCD_CustomChar@i 0041  
                  main@i 0046                    main@j 0045                    tablat 0FF5  
                  status 0FD8          ?_LCD_CustomChar 003D          __initialization 0FBC  
           __end_of_main 0CCA                   ??_main 0042            __activetblptr 0002  
      __end_of_LCD_Write 0EE8                   _ADCON1 0FC1             LCD_Text@text 003F  
           __displaymode 0047         LCD_CustomChar@pt 003D                   isa$std 0001  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0FE2                ?_LCD_Busy 003B                ?_LCD_Init 003B  
              ?_LCD_Text 003D            ___rparam_used 0001           __pcstackCOMRAM 003B  
             ??_LCD_Busy 003B               ??_LCD_Init 003D               ??_LCD_Text 003F  
             __pnvCOMRAM 004A         ??_LCD_CustomChar 003F                  __Hparam 0000  
                __Lparam 0000            LCD_Write@mode 003B             __psmallconst 0800  
                __pcinit 0FBC                  __ramtop 0800                  __ptext0 080E  
                __ptext1 0DF6                  __ptext2 0CCA                  __ptext3 0F36  
                __ptext4 0E76                  __ptext5 0EE8          __displaycontrol 0048  
              _LCD_Write 0E76     end_of_initialization 0FE2            __Lmediumconst 0000  
                postdec1 0FE5                  postinc0 0FEE                _PORTDbits 0F83  
              _TRISAbits 0F92                _TRISDbits 0F95               ?_LCD_Write 003B  
             LCD_Text@pt 003D            __pidataCOMRAM 0F82      start_initialization 0FBC  
           _LCD_busy_cnt 004A              __pbssCOMRAM 0047              ??_LCD_Write 003C  
            __smallconst 0800                 _LCD_Busy 0EE8                 _LCD_Init 0CCA  
               _LCD_Text 0DF6                 _LATAbits 0F89                 _LATDbits 0F8C  
               _LCD_data 0049                main@valid 0044                copy_data0 0FD0  
               __Hrparam 0000                 __Lrparam 0000           LCD_Write@value 003C  
               isa$xinst 0000  
