

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Dec 03 02:26:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   000F5E                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _msg2
    63   000F5E  51                 	db	81
    64   000F5F  75                 	db	117
    65   000F60  69                 	db	105
    66   000F61  65                 	db	101
    67   000F62  6E                 	db	110
    68   000F63  20                 	db	32
    69   000F64  65                 	db	101
    70   000F65  72                 	db	114
    71   000F66  65                 	db	101
    72   000F67  73                 	db	115
    73   000F68  3F                 	db	63
    74   000F69  00                 	db	0
    75                           
    76                           ;initializer for _msg1
    77   000F6A  48                 	db	72
    78   000F6B  6F                 	db	111
    79   000F6C  6C                 	db	108
    80   000F6D  61                 	db	97
    81   000F6E  20                 	db	32
    82   000F6F  4D                 	db	77
    83   000F70  75                 	db	117
    84   000F71  6E                 	db	110
    85   000F72  64                 	db	100
    86   000F73  6F                 	db	111
    87   000F74  00                 	db	0
    88                           
    89                           ;initializer for _msg5
    90   000F75  01                 	db	1
    91   000F76  02                 	db	2
    92   000F77  C2                 	db	194
    93   000F78  00                 	db	0
    94   000F79  00                 	db	0
    95   000F7A  00                 	db	0
    96                           
    97                           ;initializer for _msg4
    98   000F7B  28                 	db	40
    99   000F7C  03                 	db	3
   100   000F7D  5F                 	db	95
   101   000F7E  03                 	db	3
   102   000F7F  29                 	db	41
   103                           
   104                           ;initializer for _displaybf
   105   000F80  4B                 	db	75
   106   000F81  4F                 	db	79
   107   000F82  4C                 	db	76
   108   000F83  00                 	db	0
   109                           
   110                           ;initializer for _cont
   111   000F84  7C                 	db	124
   112                           
   113                           ;initializer for _msg3
   114   000F85  01                 	db	1
   115   000F86  02                 	db	2
   116   000F87  5F                 	db	95
   117   000F88  28                 	db	40
   118   000F89  C2                 	db	194
   119   000F8A  29                 	db	41
   120   000F8B  5F                 	db	95
   121   000F8C  2F                 	db	47
   122   000F8D  01                 	db	1
   123                           
   124                           ;initializer for _fig
   125   000F8E  8E                 	db	142
   126   000F8F  8E                 	db	142
   127   000F90  84                 	db	132
   128   000F91  9F                 	db	159
   129   000F92  95                 	db	149
   130   000F93  8A                 	db	138
   131   000F94  91                 	db	145
   132   000F95  80                 	db	128
   133                           
   134                           ;initializer for _C3
   135   000F96  00                 	db	0
   136   000F97  00                 	db	0
   137   000F98  1F                 	db	31
   138   000F99  0A                 	db	10
   139   000F9A  0A                 	db	10
   140   000F9B  0A                 	db	10
   141   000F9C  0A                 	db	10
   142                           
   143                           ;initializer for _C2
   144   000F9D  00                 	db	0
   145   000F9E  10                 	db	16
   146   000F9F  08                 	db	8
   147   000FA0  04                 	db	4
   148   000FA1  02                 	db	2
   149   000FA2  01                 	db	1
   150   000FA3  00                 	db	0
   151                           
   152                           ;initializer for _C1
   153   000FA4  1F                 	db	31
   154   000FA5  00                 	db	0
   155   000FA6  00                 	db	0
   156   000FA7  00                 	db	0
   157   000FA8  00                 	db	0
   158   000FA9  00                 	db	0
   159   000FAA  00                 	db	0
   160                           
   161                           	psect	nvCOMRAM
   162   00005D                     __pnvCOMRAM:
   163                           	callstack 0
   164   00005D                     _LCD_busy_cnt:
   165                           	callstack 0
   166   00005D                     	ds	1
   167   000000                     _TRISD	set	3989
   168   000000                     _PORTDbits	set	3971
   169   000000                     _LATAbits	set	3977
   170   000000                     _TRISAbits	set	3986
   171   000000                     _TRISDbits	set	3989
   172   000000                     _LATDbits	set	3980
   173                           
   174                           	psect	smallconst
   175   000800                     __psmallconst:
   176                           	callstack 0
   177   000800  00                 	db	0
   178   000801                     STR_1:
   179   000801  54                 	db	84	;'T'
   180   000802  65                 	db	101	;'e'
   181   000803  73                 	db	115	;'s'
   182   000804  74                 	db	116	;'t'
   183   000805  65                 	db	101	;'e'
   184   000806  6F                 	db	111	;'o'
   185   000807  2E                 	db	46
   186   000808  2E                 	db	46
   187   000809  2E                 	db	46
   188   00080A  2E                 	db	46
   189   00080B  00                 	db	0
   190   00080C  00                 	db	0	; dummy byte at the end
   191   000000                     
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   000FF8                     __pcinit:
   196                           	callstack 0
   197   000FF8                     start_initialization:
   198                           	callstack 0
   199   000FF8                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to COMRAM (77 bytes)
   203                           ; load TBLPTR registers with __pidataCOMRAM
   204   000FF8  0E5E               	movlw	low __pidataCOMRAM
   205   000FFA  6EF6               	movwf	tblptrl,c
   206   000FFC  0E0F               	movlw	high __pidataCOMRAM
   207   000FFE  6EF7               	movwf	tblptrh,c
   208   001000  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   209   001002  6EF8               	movwf	tblptru,c
   210   001004  EE00  F001         	lfsr	0,__pdataCOMRAM
   211   001008  EE10 F04D          	lfsr	1,77
   212   00100C                     copy_data0:
   213   00100C  0009               	tblrd		*+
   214   00100E  CFF5 FFEE          	movff	tablat,postinc0
   215   001012  50E5               	movf	postdec1,w,c
   216   001014  50E1               	movf	fsr1l,w,c
   217   001016  E1FA               	bnz	copy_data0
   218                           
   219                           ; Clear objects allocated to COMRAM (3 bytes)
   220   001018  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   221   00101A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   222   00101C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   223   00101E                     end_of_initialization:
   224                           	callstack 0
   225   00101E                     __end_of__initialization:
   226                           	callstack 0
   227   00101E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228   001020  6EF8               	movwf	tblptru,c
   229   001022  0100               	movlb	0
   230   001024  EF07  F004         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233   00005A                     __pbssCOMRAM:
   234                           	callstack 0
   235   00005A                     __displaymode:
   236                           	callstack 0
   237   00005A                     	ds	1
   238   00005B                     __displaycontrol:
   239                           	callstack 0
   240   00005B                     	ds	1
   241   00005C                     _LCD_data:
   242                           	callstack 0
   243   00005C                     	ds	1
   244                           
   245                           	psect	dataCOMRAM
   246   000001                     __pdataCOMRAM:
   247                           	callstack 0
   248   000001                     _msg2:
   249                           	callstack 0
   250   000001                     	ds	12
   251   00000D                     _msg1:
   252                           	callstack 0
   253   00000D                     	ds	11
   254   000018                     _msg5:
   255                           	callstack 0
   256   000018                     	ds	6
   257   00001E                     _msg4:
   258                           	callstack 0
   259   00001E                     	ds	5
   260   000023                     _displaybf:
   261                           	callstack 0
   262   000023                     	ds	4
   263   000027                     _cont:
   264                           	callstack 0
   265   000027                     	ds	1
   266   000028                     _msg3:
   267                           	callstack 0
   268   000028                     	ds	9
   269   000031                     _fig:
   270                           	callstack 0
   271   000031                     	ds	8
   272   000039                     _C3:
   273                           	callstack 0
   274   000039                     	ds	7
   275   000040                     _C2:
   276                           	callstack 0
   277   000040                     	ds	7
   278   000047                     _C1:
   279                           	callstack 0
   280   000047                     	ds	7
   281                           
   282                           	psect	cstackCOMRAM
   283   00004E                     __pcstackCOMRAM:
   284                           	callstack 0
   285   00004E                     LCD_Write@mode:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x0
   289   00004E                     	ds	1
   290   00004F                     LCD_Write@value:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x1
   294   00004F                     	ds	1
   295   000050                     ??_LCD_Init:
   296   000050                     LCD_Text@pt:
   297                           	callstack 0
   298   000050                     LCD_CustomChar@pt:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x2
   302   000050                     	ds	2
   303   000052                     LCD_Text@text:
   304                           	callstack 0
   305   000052                     LCD_CustomChar@c:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x4
   309   000052                     	ds	2
   310   000054                     LCD_CustomChar@i:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314   000054                     	ds	1
   315   000055                     ??_main:
   316                           
   317                           ; 1 bytes @ 0x7
   318   000055                     	ds	2
   319   000057                     main@valid:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x9
   323   000057                     	ds	1
   324   000058                     main@j:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xA
   328   000058                     	ds	1
   329   000059                     main@i:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xB
   333   000059                     	ds	1
   334                           
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 34 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  i               1   11[COMRAM] unsigned char 
   345 ;;  j               1   10[COMRAM] unsigned char 
   346 ;;  valid           1    9[COMRAM] unsigned char 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   356 ;;      Params:         0       0       0       0       0       0       0       0       0
   357 ;;      Locals:         3       0       0       0       0       0       0       0       0
   358 ;;      Temps:          2       0       0       0       0       0       0       0       0
   359 ;;      Totals:         5       0       0       0       0       0       0       0       0
   360 ;;Total ram usage:        5 bytes
   361 ;; Hardware stack levels required when called: 2
   362 ;; This function calls:
   363 ;;		_LCD_Busy
   364 ;;		_LCD_CustomChar
   365 ;;		_LCD_Init
   366 ;;		_LCD_Text
   367 ;;		_LCD_Write
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text0
   374   00080E                     __ptext0:
   375                           	callstack 0
   376   00080E                     _main:
   377                           	callstack 29
   378   00080E                     
   379                           ;main.c: 36:     LCD_Init();
   380   00080E  EC79  F006         	call	_LCD_Init	;wreg free
   381   000812                     l1388:
   382   000812  EC88  F007         	call	_LCD_Busy	;wreg free
   383   000816  0900               	iorlw	0
   384   000818  A4D8               	btfss	status,2,c
   385   00081A  EF11  F004         	goto	u991
   386   00081E  EF13  F004         	goto	u990
   387   000822                     u991:
   388   000822  EF09  F004         	goto	l1388
   389   000826                     u990:
   390   000826  948C               	bcf	140,2,c	;volatile
   391   000828  0E01               	movlw	1
   392   00082A  6E4E               	movwf	LCD_Write@mode^0,c
   393   00082C  0E40               	movlw	64
   394   00082E  EC4F  F007         	call	_LCD_Write
   395   000832  0E31               	movlw	low _fig
   396   000834  6E50               	movwf	LCD_CustomChar@pt^0,c
   397   000836  0E00               	movlw	high _fig
   398   000838  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   399   00083A  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   400   00083E                     l1394:
   401   00083E  EC88  F007         	call	_LCD_Busy	;wreg free
   402   000842  0900               	iorlw	0
   403   000844  A4D8               	btfss	status,2,c
   404   000846  EF27  F004         	goto	u1001
   405   00084A  EF29  F004         	goto	u1000
   406   00084E                     u1001:
   407   00084E  EF1F  F004         	goto	l1394
   408   000852                     u1000:
   409   000852  948C               	bcf	140,2,c	;volatile
   410   000854  0E01               	movlw	1
   411   000856  6E4E               	movwf	LCD_Write@mode^0,c
   412   000858  0E48               	movlw	72
   413   00085A  EC4F  F007         	call	_LCD_Write
   414   00085E  0E47               	movlw	low _C1
   415   000860  6E50               	movwf	LCD_CustomChar@pt^0,c
   416   000862  0E00               	movlw	high _C1
   417   000864  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   418   000866  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   419   00086A                     l1400:
   420   00086A  EC88  F007         	call	_LCD_Busy	;wreg free
   421   00086E  0900               	iorlw	0
   422   000870  A4D8               	btfss	status,2,c
   423   000872  EF3D  F004         	goto	u1011
   424   000876  EF3F  F004         	goto	u1010
   425   00087A                     u1011:
   426   00087A  EF35  F004         	goto	l1400
   427   00087E                     u1010:
   428   00087E  948C               	bcf	140,2,c	;volatile
   429   000880  0E01               	movlw	1
   430   000882  6E4E               	movwf	LCD_Write@mode^0,c
   431   000884  0E50               	movlw	80
   432   000886  EC4F  F007         	call	_LCD_Write
   433   00088A  0E40               	movlw	low _C2
   434   00088C  6E50               	movwf	LCD_CustomChar@pt^0,c
   435   00088E  0E00               	movlw	high _C2
   436   000890  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   437   000892  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   438   000896                     l1406:
   439   000896  EC88  F007         	call	_LCD_Busy	;wreg free
   440   00089A  0900               	iorlw	0
   441   00089C  A4D8               	btfss	status,2,c
   442   00089E  EF53  F004         	goto	u1021
   443   0008A2  EF55  F004         	goto	u1020
   444   0008A6                     u1021:
   445   0008A6  EF4B  F004         	goto	l1406
   446   0008AA                     u1020:
   447   0008AA  948C               	bcf	140,2,c	;volatile
   448   0008AC  0E01               	movlw	1
   449   0008AE  6E4E               	movwf	LCD_Write@mode^0,c
   450   0008B0  0E58               	movlw	88
   451   0008B2  EC4F  F007         	call	_LCD_Write
   452   0008B6  0E39               	movlw	low _C3
   453   0008B8  6E50               	movwf	LCD_CustomChar@pt^0,c
   454   0008BA  0E00               	movlw	high _C3
   455   0008BC  6E51               	movwf	(LCD_CustomChar@pt+1)^0,c
   456   0008BE  ECD6  F007         	call	_LCD_CustomChar	;wreg free
   457   0008C2                     l1412:
   458   0008C2  EC88  F007         	call	_LCD_Busy	;wreg free
   459   0008C6  0900               	iorlw	0
   460   0008C8  A4D8               	btfss	status,2,c
   461   0008CA  EF69  F004         	goto	u1031
   462   0008CE  EF6B  F004         	goto	u1030
   463   0008D2                     u1031:
   464   0008D2  EF61  F004         	goto	l1412
   465   0008D6                     u1030:
   466   0008D6  948C               	bcf	140,2,c	;volatile
   467   0008D8  0E01               	movlw	1
   468   0008DA  6E4E               	movwf	LCD_Write@mode^0,c
   469   0008DC  0E80               	movlw	128
   470   0008DE  EC4F  F007         	call	_LCD_Write
   471   0008E2                     
   472                           ;main.c: 46:     LCD_Text("Testeo....");
   473   0008E2  0E01               	movlw	low STR_1
   474   0008E4  6E50               	movwf	LCD_Text@pt^0,c
   475   0008E6  0E08               	movlw	high STR_1
   476   0008E8  6E51               	movwf	(LCD_Text@pt+1)^0,c
   477   0008EA  EC0F  F007         	call	_LCD_Text	;wreg free
   478   0008EE                     l1418:
   479   0008EE  EC88  F007         	call	_LCD_Busy	;wreg free
   480   0008F2  0900               	iorlw	0
   481   0008F4  A4D8               	btfss	status,2,c
   482   0008F6  EF7F  F004         	goto	u1041
   483   0008FA  EF81  F004         	goto	u1040
   484   0008FE                     u1041:
   485   0008FE  EF77  F004         	goto	l1418
   486   000902                     u1040:
   487   000902  848C               	bsf	140,2,c	;volatile
   488   000904  0E01               	movlw	1
   489   000906  6E4E               	movwf	LCD_Write@mode^0,c
   490   000908  0E08               	movlw	8
   491   00090A  EC4F  F007         	call	_LCD_Write
   492   00090E                     
   493                           ;main.c: 52:     _displaycontrol |= 0x02; while(LCD_Busy()); LATDbits.LATD2 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   494   00090E  825B               	bsf	__displaycontrol^0,1,c
   495   000910                     l1424:
   496   000910  EC88  F007         	call	_LCD_Busy	;wreg free
   497   000914  0900               	iorlw	0
   498   000916  A4D8               	btfss	status,2,c
   499   000918  EF90  F004         	goto	u1051
   500   00091C  EF92  F004         	goto	u1050
   501   000920                     u1051:
   502   000920  EF88  F004         	goto	l1424
   503   000924                     u1050:
   504   000924  948C               	bcf	140,2,c	;volatile
   505   000926  0E01               	movlw	1
   506   000928  6E4E               	movwf	LCD_Write@mode^0,c
   507   00092A  505B               	movf	__displaycontrol^0,w,c
   508   00092C  0908               	iorlw	8
   509   00092E  EC4F  F007         	call	_LCD_Write
   510   000932                     
   511                           ;main.c: 53:     _displaycontrol |= 0x01; while(LCD_Busy()); LATDbits.LATD2 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   512   000932  805B               	bsf	__displaycontrol^0,0,c
   513   000934                     l1430:
   514   000934  EC88  F007         	call	_LCD_Busy	;wreg free
   515   000938  0900               	iorlw	0
   516   00093A  A4D8               	btfss	status,2,c
   517   00093C  EFA2  F004         	goto	u1061
   518   000940  EFA4  F004         	goto	u1060
   519   000944                     u1061:
   520   000944  EF9A  F004         	goto	l1430
   521   000948                     u1060:
   522   000948  948C               	bcf	140,2,c	;volatile
   523   00094A  0E01               	movlw	1
   524   00094C  6E4E               	movwf	LCD_Write@mode^0,c
   525   00094E  505B               	movf	__displaycontrol^0,w,c
   526   000950  0908               	iorlw	8
   527   000952  EC4F  F007         	call	_LCD_Write
   528   000956                     l1434:
   529                           
   530                           ;main.c: 58:         for (j = 0; j < 4; j++) {
   531   000956  0E00               	movlw	0
   532   000958  6E58               	movwf	main@j^0,c
   533   00095A                     l1440:
   534   00095A  EC88  F007         	call	_LCD_Busy	;wreg free
   535   00095E  0900               	iorlw	0
   536   000960  A4D8               	btfss	status,2,c
   537   000962  EFB5  F004         	goto	u1071
   538   000966  EFB7  F004         	goto	u1070
   539   00096A                     u1071:
   540   00096A  EFAD  F004         	goto	l1440
   541   00096E                     u1070:
   542   00096E  948C               	bcf	140,2,c	;volatile
   543   000970  0E01               	movlw	1
   544   000972  6E4E               	movwf	LCD_Write@mode^0,c
   545   000974  0EC0               	movlw	192
   546   000976  EC4F  F007         	call	_LCD_Write
   547   00097A                     
   548                           ;main.c: 60:             _displaycontrol |= 0x01; while(LCD_Busy()); LATDbits.LATD2 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   549   00097A  805B               	bsf	__displaycontrol^0,0,c
   550   00097C                     l1446:
   551   00097C  EC88  F007         	call	_LCD_Busy	;wreg free
   552   000980  0900               	iorlw	0
   553   000982  A4D8               	btfss	status,2,c
   554   000984  EFC6  F004         	goto	u1081
   555   000988  EFC8  F004         	goto	u1080
   556   00098C                     u1081:
   557   00098C  EFBE  F004         	goto	l1446
   558   000990                     u1080:
   559   000990  948C               	bcf	140,2,c	;volatile
   560   000992  0E01               	movlw	1
   561   000994  6E4E               	movwf	LCD_Write@mode^0,c
   562   000996  505B               	movf	__displaycontrol^0,w,c
   563   000998  0908               	iorlw	8
   564   00099A  EC4F  F007         	call	_LCD_Write
   565   00099E                     
   566                           ;main.c: 61:             _delay((unsigned long)((1500)*(1000000/4000.0)));
   567   00099E  0E02               	movlw	2
   568   0009A0  6E56               	movwf	(??_main+1)^0,c
   569   0009A2  0EE7               	movlw	231
   570   0009A4  6E55               	movwf	??_main^0,c
   571   0009A6  0E00               	movlw	0
   572   0009A8                     u1387:
   573   0009A8  2EE8               	decfsz	wreg,f,c
   574   0009AA  D7FE               	bra	u1387
   575   0009AC  2E55               	decfsz	??_main^0,f,c
   576   0009AE  D7FC               	bra	u1387
   577   0009B0  2E56               	decfsz	(??_main+1)^0,f,c
   578   0009B2  D7FA               	bra	u1387
   579   0009B4  D000               	nop2	
   580   0009B6                     
   581                           ;main.c: 62:             _displaymode |= 0x02;; while(LCD_Busy()); LATDbits.LATD2 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   582   0009B6  825A               	bsf	__displaymode^0,1,c
   583   0009B8                     l1454:
   584   0009B8  EC88  F007         	call	_LCD_Busy	;wreg free
   585   0009BC  0900               	iorlw	0
   586   0009BE  A4D8               	btfss	status,2,c
   587   0009C0  EFE4  F004         	goto	u1091
   588   0009C4  EFE6  F004         	goto	u1090
   589   0009C8                     u1091:
   590   0009C8  EFDC  F004         	goto	l1454
   591   0009CC                     u1090:
   592   0009CC  948C               	bcf	140,2,c	;volatile
   593   0009CE  0E01               	movlw	1
   594   0009D0  6E4E               	movwf	LCD_Write@mode^0,c
   595   0009D2  505A               	movf	__displaymode^0,w,c
   596   0009D4  0904               	iorlw	4
   597   0009D6  EC4F  F007         	call	_LCD_Write
   598   0009DA                     
   599                           ;main.c: 63:             i = 0;
   600   0009DA  0E00               	movlw	0
   601   0009DC  6E59               	movwf	main@i^0,c
   602   0009DE                     
   603                           ;main.c: 64:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATDbits.LATD2 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   604   0009DE  905B               	bcf	__displaycontrol^0,0,c
   605   0009E0                     l1462:
   606   0009E0  EC88  F007         	call	_LCD_Busy	;wreg free
   607   0009E4  0900               	iorlw	0
   608   0009E6  A4D8               	btfss	status,2,c
   609   0009E8  EFF8  F004         	goto	u1101
   610   0009EC  EFFA  F004         	goto	u1100
   611   0009F0                     u1101:
   612   0009F0  EFF0  F004         	goto	l1462
   613   0009F4                     u1100:
   614   0009F4  948C               	bcf	140,2,c	;volatile
   615   0009F6  0E01               	movlw	1
   616   0009F8  6E4E               	movwf	LCD_Write@mode^0,c
   617   0009FA  505B               	movf	__displaycontrol^0,w,c
   618   0009FC  0908               	iorlw	8
   619   0009FE  EC4F  F007         	call	_LCD_Write
   620   000A02  EF8F  F005         	goto	l1492
   621   000A06                     l1466:
   622                           
   623                           ;main.c: 68:                         valid = i < (sizeof (msg1) - 2);
   624   000A06  0E08               	movlw	8
   625   000A08  6459               	cpfsgt	main@i^0,c
   626   000A0A  EF09  F005         	goto	u1111
   627   000A0E  EF0C  F005         	goto	u1110
   628   000A12                     u1111:
   629   000A12  0E01               	movlw	1
   630   000A14  EF0D  F005         	goto	u1120
   631   000A18                     u1110:
   632   000A18  0E00               	movlw	0
   633   000A1A                     u1120:
   634   000A1A  6E57               	movwf	main@valid^0,c
   635   000A1C                     l1468:
   636   000A1C  EC88  F007         	call	_LCD_Busy	;wreg free
   637   000A20  0900               	iorlw	0
   638   000A22  A4D8               	btfss	status,2,c
   639   000A24  EF16  F005         	goto	u1131
   640   000A28  EF18  F005         	goto	u1130
   641   000A2C                     u1131:
   642   000A2C  EF0E  F005         	goto	l1468
   643   000A30                     u1130:
   644   000A30  848C               	bsf	140,2,c	;volatile
   645   000A32  0E01               	movlw	1
   646   000A34  6E4E               	movwf	LCD_Write@mode^0,c
   647   000A36  0E0D               	movlw	low _msg1
   648   000A38  2459               	addwf	main@i^0,w,c
   649   000A3A  6ED9               	movwf	fsr2l,c
   650   000A3C  6ADA               	clrf	fsr2h,c
   651   000A3E  0E00               	movlw	high _msg1
   652   000A40  22DA               	addwfc	fsr2h,f,c
   653   000A42  50DF               	movf	indf2,w,c
   654   000A44  EC4F  F007         	call	_LCD_Write
   655                           
   656                           ;main.c: 70:                         break;
   657   000A48  EFA8  F005         	goto	l1494
   658   000A4C                     l1472:
   659                           
   660                           ;main.c: 72:                         valid = i < (sizeof (msg2) - 2);
   661   000A4C  0E09               	movlw	9
   662   000A4E  6459               	cpfsgt	main@i^0,c
   663   000A50  EF2C  F005         	goto	u1141
   664   000A54  EF2F  F005         	goto	u1140
   665   000A58                     u1141:
   666   000A58  0E01               	movlw	1
   667   000A5A  EF30  F005         	goto	u1150
   668   000A5E                     u1140:
   669   000A5E  0E00               	movlw	0
   670   000A60                     u1150:
   671   000A60  6E57               	movwf	main@valid^0,c
   672   000A62                     l1474:
   673   000A62  EC88  F007         	call	_LCD_Busy	;wreg free
   674   000A66  0900               	iorlw	0
   675   000A68  A4D8               	btfss	status,2,c
   676   000A6A  EF39  F005         	goto	u1161
   677   000A6E  EF3B  F005         	goto	u1160
   678   000A72                     u1161:
   679   000A72  EF31  F005         	goto	l1474
   680   000A76                     u1160:
   681   000A76  848C               	bsf	140,2,c	;volatile
   682   000A78  0E01               	movlw	1
   683   000A7A  6E4E               	movwf	LCD_Write@mode^0,c
   684   000A7C  0E01               	movlw	low _msg2
   685   000A7E  2459               	addwf	main@i^0,w,c
   686   000A80  6ED9               	movwf	fsr2l,c
   687   000A82  6ADA               	clrf	fsr2h,c
   688   000A84  0E00               	movlw	high _msg2
   689   000A86  22DA               	addwfc	fsr2h,f,c
   690   000A88  50DF               	movf	indf2,w,c
   691   000A8A  EC4F  F007         	call	_LCD_Write
   692                           
   693                           ;main.c: 74:                         break;
   694   000A8E  EFA8  F005         	goto	l1494
   695   000A92                     l1478:
   696                           
   697                           ;main.c: 76:                         valid = i < (sizeof (msg3) - 1);
   698   000A92  0E07               	movlw	7
   699   000A94  6459               	cpfsgt	main@i^0,c
   700   000A96  EF4F  F005         	goto	u1171
   701   000A9A  EF52  F005         	goto	u1170
   702   000A9E                     u1171:
   703   000A9E  0E01               	movlw	1
   704   000AA0  EF53  F005         	goto	u1180
   705   000AA4                     u1170:
   706   000AA4  0E00               	movlw	0
   707   000AA6                     u1180:
   708   000AA6  6E57               	movwf	main@valid^0,c
   709   000AA8                     l1480:
   710   000AA8  EC88  F007         	call	_LCD_Busy	;wreg free
   711   000AAC  0900               	iorlw	0
   712   000AAE  A4D8               	btfss	status,2,c
   713   000AB0  EF5C  F005         	goto	u1191
   714   000AB4  EF5E  F005         	goto	u1190
   715   000AB8                     u1191:
   716   000AB8  EF54  F005         	goto	l1480
   717   000ABC                     u1190:
   718   000ABC  848C               	bsf	140,2,c	;volatile
   719   000ABE  0E01               	movlw	1
   720   000AC0  6E4E               	movwf	LCD_Write@mode^0,c
   721   000AC2  0E28               	movlw	low _msg3
   722   000AC4  2459               	addwf	main@i^0,w,c
   723   000AC6  6ED9               	movwf	fsr2l,c
   724   000AC8  6ADA               	clrf	fsr2h,c
   725   000ACA  0E00               	movlw	high _msg3
   726   000ACC  22DA               	addwfc	fsr2h,f,c
   727   000ACE  50DF               	movf	indf2,w,c
   728   000AD0  EC4F  F007         	call	_LCD_Write
   729                           
   730                           ;main.c: 78:                         break;
   731   000AD4  EFA8  F005         	goto	l1494
   732   000AD8                     l1484:
   733                           
   734                           ;main.c: 80:                         valid = i < (sizeof (msg4) - 1);
   735   000AD8  0E03               	movlw	3
   736   000ADA  6459               	cpfsgt	main@i^0,c
   737   000ADC  EF72  F005         	goto	u1201
   738   000AE0  EF75  F005         	goto	u1200
   739   000AE4                     u1201:
   740   000AE4  0E01               	movlw	1
   741   000AE6  EF76  F005         	goto	u1210
   742   000AEA                     u1200:
   743   000AEA  0E00               	movlw	0
   744   000AEC                     u1210:
   745   000AEC  6E57               	movwf	main@valid^0,c
   746   000AEE                     l1486:
   747   000AEE  EC88  F007         	call	_LCD_Busy	;wreg free
   748   000AF2  0900               	iorlw	0
   749   000AF4  A4D8               	btfss	status,2,c
   750   000AF6  EF7F  F005         	goto	u1221
   751   000AFA  EF81  F005         	goto	u1220
   752   000AFE                     u1221:
   753   000AFE  EF77  F005         	goto	l1486
   754   000B02                     u1220:
   755   000B02  848C               	bsf	140,2,c	;volatile
   756   000B04  0E01               	movlw	1
   757   000B06  6E4E               	movwf	LCD_Write@mode^0,c
   758   000B08  0E1E               	movlw	low _msg4
   759   000B0A  2459               	addwf	main@i^0,w,c
   760   000B0C  6ED9               	movwf	fsr2l,c
   761   000B0E  6ADA               	clrf	fsr2h,c
   762   000B10  0E00               	movlw	high _msg4
   763   000B12  22DA               	addwfc	fsr2h,f,c
   764   000B14  50DF               	movf	indf2,w,c
   765   000B16  EC4F  F007         	call	_LCD_Write
   766                           
   767                           ;main.c: 82:                         break;
   768   000B1A  EFA8  F005         	goto	l1494
   769   000B1E                     l1492:
   770   000B1E  5058               	movf	main@j^0,w,c
   771   000B20  6E55               	movwf	??_main^0,c
   772   000B22  6A56               	clrf	(??_main+1)^0,c
   773                           
   774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   775                           ; Switch size 1, requested type "simple"
   776                           ; Number of cases is 1, Range of values is 0 to 0
   777                           ; switch strategies available:
   778                           ; Name         Instructions Cycles
   779                           ; simple_byte            4     3 (average)
   780                           ;	Chosen strategy is simple_byte
   781   000B24  5056               	movf	(??_main+1)^0,w,c
   782   000B26  0A00               	xorlw	0	; case 0
   783   000B28  B4D8               	btfsc	status,2,c
   784   000B2A  EF99  F005         	goto	l1568
   785   000B2E  EF6C  F005         	goto	l1484
   786   000B32                     l1568:
   787                           
   788                           ; Switch size 1, requested type "simple"
   789                           ; Number of cases is 3, Range of values is 0 to 2
   790                           ; switch strategies available:
   791                           ; Name         Instructions Cycles
   792                           ; simple_byte           10     6 (average)
   793                           ;	Chosen strategy is simple_byte
   794   000B32  5055               	movf	??_main^0,w,c
   795   000B34  0A00               	xorlw	0	; case 0
   796   000B36  B4D8               	btfsc	status,2,c
   797   000B38  EF03  F005         	goto	l1466
   798   000B3C  0A01               	xorlw	1	; case 1
   799   000B3E  B4D8               	btfsc	status,2,c
   800   000B40  EF26  F005         	goto	l1472
   801   000B44  0A03               	xorlw	3	; case 2
   802   000B46  B4D8               	btfsc	status,2,c
   803   000B48  EF49  F005         	goto	l1478
   804   000B4C  EF6C  F005         	goto	l1484
   805   000B50                     l1494:
   806                           
   807                           ;main.c: 84:                 i++;
   808   000B50  2A59               	incf	main@i^0,f,c
   809   000B52                     
   810                           ;main.c: 85:                 _delay((unsigned long)((150)*(1000000/4000.0)));
   811   000B52  0E31               	movlw	49
   812   000B54  6E55               	movwf	??_main^0,c
   813   000B56  0EB2               	movlw	178
   814   000B58                     u1397:
   815   000B58  2EE8               	decfsz	wreg,f,c
   816   000B5A  D7FE               	bra	u1397
   817   000B5C  2E55               	decfsz	??_main^0,f,c
   818   000B5E  D7FC               	bra	u1397
   819   000B60  D000               	nop2	
   820   000B62                     
   821                           ;main.c: 86:             } while (valid);
   822   000B62  5057               	movf	main@valid^0,w,c
   823   000B64  A4D8               	btfss	status,2,c
   824   000B66  EFB7  F005         	goto	u1231
   825   000B6A  EFB9  F005         	goto	u1230
   826   000B6E                     u1231:
   827   000B6E  EF8F  F005         	goto	l1492
   828   000B72                     u1230:
   829   000B72                     
   830                           ;main.c: 87:             _displaycontrol |= 0x01; while(LCD_Busy()); LATDbits.LATD2 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   831   000B72  805B               	bsf	__displaycontrol^0,0,c
   832   000B74                     l1502:
   833   000B74  EC88  F007         	call	_LCD_Busy	;wreg free
   834   000B78  0900               	iorlw	0
   835   000B7A  A4D8               	btfss	status,2,c
   836   000B7C  EFC2  F005         	goto	u1241
   837   000B80  EFC4  F005         	goto	u1240
   838   000B84                     u1241:
   839   000B84  EFBA  F005         	goto	l1502
   840   000B88                     u1240:
   841   000B88  948C               	bcf	140,2,c	;volatile
   842   000B8A  0E01               	movlw	1
   843   000B8C  6E4E               	movwf	LCD_Write@mode^0,c
   844   000B8E  505B               	movf	__displaycontrol^0,w,c
   845   000B90  0908               	iorlw	8
   846   000B92  EC4F  F007         	call	_LCD_Write
   847   000B96                     
   848                           ;main.c: 88:             _delay((unsigned long)((1000)*(1000000/4000.0)));
   849   000B96  0E02               	movlw	2
   850   000B98  6E56               	movwf	(??_main+1)^0,c
   851   000B9A  0E45               	movlw	69
   852   000B9C  6E55               	movwf	??_main^0,c
   853   000B9E  0EAA               	movlw	170
   854   000BA0                     u1407:
   855   000BA0  2EE8               	decfsz	wreg,f,c
   856   000BA2  D7FE               	bra	u1407
   857   000BA4  2E55               	decfsz	??_main^0,f,c
   858   000BA6  D7FC               	bra	u1407
   859   000BA8  2E56               	decfsz	(??_main+1)^0,f,c
   860   000BAA  D7FA               	bra	u1407
   861   000BAC                     
   862                           ;main.c: 89:             _displaymode &= ~0x02; while(LCD_Busy()); LATDbits.LATD2 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   863   000BAC  925A               	bcf	__displaymode^0,1,c
   864   000BAE                     l1510:
   865   000BAE  EC88  F007         	call	_LCD_Busy	;wreg free
   866   000BB2  0900               	iorlw	0
   867   000BB4  A4D8               	btfss	status,2,c
   868   000BB6  EFDF  F005         	goto	u1251
   869   000BBA  EFE1  F005         	goto	u1250
   870   000BBE                     u1251:
   871   000BBE  EFD7  F005         	goto	l1510
   872   000BC2                     u1250:
   873   000BC2  948C               	bcf	140,2,c	;volatile
   874   000BC4  0E01               	movlw	1
   875   000BC6  6E4E               	movwf	LCD_Write@mode^0,c
   876   000BC8  505A               	movf	__displaymode^0,w,c
   877   000BCA  0904               	iorlw	4
   878   000BCC  EC4F  F007         	call	_LCD_Write
   879   000BD0                     
   880                           ;main.c: 90:             i = 0;
   881   000BD0  0E00               	movlw	0
   882   000BD2  6E59               	movwf	main@i^0,c
   883   000BD4                     
   884                           ;main.c: 91:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATDbits.LATD2 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   885   000BD4  905B               	bcf	__displaycontrol^0,0,c
   886   000BD6                     l1518:
   887   000BD6  EC88  F007         	call	_LCD_Busy	;wreg free
   888   000BDA  0900               	iorlw	0
   889   000BDC  A4D8               	btfss	status,2,c
   890   000BDE  EFF3  F005         	goto	u1261
   891   000BE2  EFF5  F005         	goto	u1260
   892   000BE6                     u1261:
   893   000BE6  EFEB  F005         	goto	l1518
   894   000BEA                     u1260:
   895   000BEA  948C               	bcf	140,2,c	;volatile
   896   000BEC  0E01               	movlw	1
   897   000BEE  6E4E               	movwf	LCD_Write@mode^0,c
   898   000BF0  505B               	movf	__displaycontrol^0,w,c
   899   000BF2  0908               	iorlw	8
   900   000BF4  EC4F  F007         	call	_LCD_Write
   901   000BF8  EF32  F006         	goto	l1532
   902   000BFC                     l1522:
   903                           
   904                           ;main.c: 95:                         valid = i < (sizeof (msg1));
   905   000BFC  0E0A               	movlw	10
   906   000BFE  6459               	cpfsgt	main@i^0,c
   907   000C00  EF04  F006         	goto	u1271
   908   000C04  EF07  F006         	goto	u1270
   909   000C08                     u1271:
   910   000C08  0E01               	movlw	1
   911   000C0A  EF08  F006         	goto	u1280
   912   000C0E                     u1270:
   913   000C0E  0E00               	movlw	0
   914   000C10                     u1280:
   915   000C10  6E57               	movwf	main@valid^0,c
   916                           
   917                           ;main.c: 96:                         break;
   918   000C12  EF4B  F006         	goto	l1534
   919   000C16                     l1524:
   920                           
   921                           ;main.c: 98:                         valid = i < (sizeof (msg2));
   922   000C16  0E0B               	movlw	11
   923   000C18  6459               	cpfsgt	main@i^0,c
   924   000C1A  EF11  F006         	goto	u1291
   925   000C1E  EF14  F006         	goto	u1290
   926   000C22                     u1291:
   927   000C22  0E01               	movlw	1
   928   000C24  EF15  F006         	goto	u1300
   929   000C28                     u1290:
   930   000C28  0E00               	movlw	0
   931   000C2A                     u1300:
   932   000C2A  6E57               	movwf	main@valid^0,c
   933                           
   934                           ;main.c: 99:                         break;
   935   000C2C  EF4B  F006         	goto	l1534
   936   000C30                     l1526:
   937                           
   938                           ;main.c: 101:                         valid = i < (sizeof (msg3));
   939   000C30  0E08               	movlw	8
   940   000C32  6459               	cpfsgt	main@i^0,c
   941   000C34  EF1E  F006         	goto	u1311
   942   000C38  EF21  F006         	goto	u1310
   943   000C3C                     u1311:
   944   000C3C  0E01               	movlw	1
   945   000C3E  EF22  F006         	goto	u1320
   946   000C42                     u1310:
   947   000C42  0E00               	movlw	0
   948   000C44                     u1320:
   949   000C44  6E57               	movwf	main@valid^0,c
   950                           
   951                           ;main.c: 102:                         break;
   952   000C46  EF4B  F006         	goto	l1534
   953   000C4A                     l1528:
   954                           
   955                           ;main.c: 104:                         valid = i < (sizeof (msg4));
   956   000C4A  0E04               	movlw	4
   957   000C4C  6459               	cpfsgt	main@i^0,c
   958   000C4E  EF2B  F006         	goto	u1331
   959   000C52  EF2E  F006         	goto	u1330
   960   000C56                     u1331:
   961   000C56  0E01               	movlw	1
   962   000C58  EF2F  F006         	goto	u1340
   963   000C5C                     u1330:
   964   000C5C  0E00               	movlw	0
   965   000C5E                     u1340:
   966   000C5E  6E57               	movwf	main@valid^0,c
   967                           
   968                           ;main.c: 105:                         break;
   969   000C60  EF4B  F006         	goto	l1534
   970   000C64                     l1532:
   971   000C64  5058               	movf	main@j^0,w,c
   972   000C66  6E55               	movwf	??_main^0,c
   973   000C68  6A56               	clrf	(??_main+1)^0,c
   974                           
   975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   976                           ; Switch size 1, requested type "simple"
   977                           ; Number of cases is 1, Range of values is 0 to 0
   978                           ; switch strategies available:
   979                           ; Name         Instructions Cycles
   980                           ; simple_byte            4     3 (average)
   981                           ;	Chosen strategy is simple_byte
   982   000C6A  5056               	movf	(??_main+1)^0,w,c
   983   000C6C  0A00               	xorlw	0	; case 0
   984   000C6E  B4D8               	btfsc	status,2,c
   985   000C70  EF3C  F006         	goto	l1570
   986   000C74  EF25  F006         	goto	l1528
   987   000C78                     l1570:
   988                           
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 3, Range of values is 0 to 2
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte           10     6 (average)
   994                           ;	Chosen strategy is simple_byte
   995   000C78  5055               	movf	??_main^0,w,c
   996   000C7A  0A00               	xorlw	0	; case 0
   997   000C7C  B4D8               	btfsc	status,2,c
   998   000C7E  EFFE  F005         	goto	l1522
   999   000C82  0A01               	xorlw	1	; case 1
  1000   000C84  B4D8               	btfsc	status,2,c
  1001   000C86  EF0B  F006         	goto	l1524
  1002   000C8A  0A03               	xorlw	3	; case 2
  1003   000C8C  B4D8               	btfsc	status,2,c
  1004   000C8E  EF18  F006         	goto	l1526
  1005   000C92  EF25  F006         	goto	l1528
  1006   000C96                     l1534:
  1007   000C96  EC88  F007         	call	_LCD_Busy	;wreg free
  1008   000C9A  0900               	iorlw	0
  1009   000C9C  A4D8               	btfss	status,2,c
  1010   000C9E  EF53  F006         	goto	u1351
  1011   000CA2  EF55  F006         	goto	u1350
  1012   000CA6                     u1351:
  1013   000CA6  EF4B  F006         	goto	l1534
  1014   000CAA                     u1350:
  1015   000CAA  848C               	bsf	140,2,c	;volatile
  1016   000CAC  0E01               	movlw	1
  1017   000CAE  6E4E               	movwf	LCD_Write@mode^0,c
  1018   000CB0  0E20               	movlw	32
  1019   000CB2  EC4F  F007         	call	_LCD_Write
  1020   000CB6                     
  1021                           ;main.c: 108:                 i++;
  1022   000CB6  2A59               	incf	main@i^0,f,c
  1023   000CB8                     
  1024                           ;main.c: 109:                 _delay((unsigned long)((50)*(1000000/4000.0)));
  1025   000CB8  0E11               	movlw	17
  1026   000CBA  6E55               	movwf	??_main^0,c
  1027   000CBC  0E3A               	movlw	58
  1028   000CBE                     u1417:
  1029   000CBE  2EE8               	decfsz	wreg,f,c
  1030   000CC0  D7FE               	bra	u1417
  1031   000CC2  2E55               	decfsz	??_main^0,f,c
  1032   000CC4  D7FC               	bra	u1417
  1033   000CC6  D000               	nop2	
  1034   000CC8                     
  1035                           ;main.c: 110:             } while (valid);
  1036   000CC8  5057               	movf	main@valid^0,w,c
  1037   000CCA  A4D8               	btfss	status,2,c
  1038   000CCC  EF6A  F006         	goto	u1361
  1039   000CD0  EF6C  F006         	goto	u1360
  1040   000CD4                     u1361:
  1041   000CD4  EF32  F006         	goto	l1532
  1042   000CD8                     u1360:
  1043   000CD8                     
  1044                           ;main.c: 111:         }
  1045   000CD8  2A58               	incf	main@j^0,f,c
  1046   000CDA  0E03               	movlw	3
  1047   000CDC  6458               	cpfsgt	main@j^0,c
  1048   000CDE  EF73  F006         	goto	u1371
  1049   000CE2  EF75  F006         	goto	u1370
  1050   000CE6                     u1371:
  1051   000CE6  EFAD  F004         	goto	l1440
  1052   000CEA                     u1370:
  1053   000CEA  EFAB  F004         	goto	l1434
  1054   000CEE  EF00  F000         	goto	start
  1055   000CF2                     __end_of_main:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _LCD_Text *****************
  1059 ;; Defined at:
  1060 ;;		line 701 in file "./LCD_16x2.h"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  pt              2    2[COMRAM] PTR void 
  1063 ;;		 -> msg3(9), STR_1(11), 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  text            2    4[COMRAM] PTR unsigned char 
  1066 ;;		 -> msg3(9), STR_1(11), 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1076 ;;      Params:         2       0       0       0       0       0       0       0       0
  1077 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1079 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1080 ;;Total ram usage:        4 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 1
  1083 ;; This function calls:
  1084 ;;		_LCD_Busy
  1085 ;;		_LCD_Write
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text1
  1092   000E1E                     __ptext1:
  1093                           	callstack 0
  1094   000E1E                     _LCD_Text:
  1095                           	callstack 29
  1096   000E1E                     
  1097                           ;./LCD_16x2.h: 702:     unsigned char *text = pt;
  1098   000E1E  C050  F052         	movff	LCD_Text@pt,LCD_Text@text
  1099   000E22  C051  F053         	movff	LCD_Text@pt+1,LCD_Text@text+1
  1100                           
  1101                           ;./LCD_16x2.h: 703:     while (*text) {
  1102   000E26  EF36  F007         	goto	l1330
  1103   000E2A                     l1324:
  1104   000E2A  EC88  F007         	call	_LCD_Busy	;wreg free
  1105   000E2E  0900               	iorlw	0
  1106   000E30  A4D8               	btfss	status,2,c
  1107   000E32  EF1D  F007         	goto	u861
  1108   000E36  EF1F  F007         	goto	u860
  1109   000E3A                     u861:
  1110   000E3A  EF15  F007         	goto	l1324
  1111   000E3E                     u860:
  1112   000E3E  848C               	bsf	140,2,c	;volatile
  1113   000E40  0E01               	movlw	1
  1114   000E42  6E4E               	movwf	LCD_Write@mode^0,c
  1115   000E44  C052  FFF6         	movff	LCD_Text@text,tblptrl
  1116   000E48  C053  FFF7         	movff	LCD_Text@text+1,tblptrh
  1117   000E4C  6AF8               	clrf	tblptru,c
  1118   000E4E  0E07               	movlw	(high __ramtop+-1)
  1119   000E50  64F7               	cpfsgt	tblptrh,c
  1120   000E52  D003               	bra	u877
  1121   000E54  0008               	tblrd		*
  1122   000E56  50F5               	movf	tablat,w,c
  1123   000E58  D005               	bra	u870
  1124   000E5A                     u877:
  1125   000E5A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1126   000E5E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1127   000E62  50EF               	movf	indf0,w,c
  1128   000E64                     u870:
  1129   000E64  EC4F  F007         	call	_LCD_Write
  1130   000E68                     
  1131                           ;./LCD_16x2.h: 705:         text++;
  1132   000E68  4A52               	infsnz	LCD_Text@text^0,f,c
  1133   000E6A  2A53               	incf	(LCD_Text@text+1)^0,f,c
  1134   000E6C                     l1330:
  1135                           
  1136                           ;./LCD_16x2.h: 703:     while (*text) {
  1137   000E6C  C052  FFF6         	movff	LCD_Text@text,tblptrl
  1138   000E70  C053  FFF7         	movff	LCD_Text@text+1,tblptrh
  1139   000E74  6AF8               	clrf	tblptru,c
  1140   000E76  0E07               	movlw	(high __ramtop+-1)
  1141   000E78  64F7               	cpfsgt	tblptrh,c
  1142   000E7A  D003               	bra	u887
  1143   000E7C  0008               	tblrd		*
  1144   000E7E  50F5               	movf	tablat,w,c
  1145   000E80  D005               	bra	u880
  1146   000E82                     u887:
  1147   000E82  CFF6 FFE9          	movff	tblptrl,fsr0l
  1148   000E86  CFF7 FFEA          	movff	tblptrh,fsr0h
  1149   000E8A  50EF               	movf	indf0,w,c
  1150   000E8C                     u880:
  1151   000E8C  0900               	iorlw	0
  1152   000E8E  A4D8               	btfss	status,2,c
  1153   000E90  EF4C  F007         	goto	u891
  1154   000E94  EF4E  F007         	goto	u890
  1155   000E98                     u891:
  1156   000E98  EF15  F007         	goto	l1324
  1157   000E9C                     u890:
  1158   000E9C  0012               	return		;funcret
  1159   000E9E                     __end_of_LCD_Text:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _LCD_Init *****************
  1163 ;; Defined at:
  1164 ;;		line 628 in file "./LCD_16x2.h"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1180 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1181 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1182 ;;Total ram usage:        1 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 1
  1185 ;; This function calls:
  1186 ;;		_LCD_Busy
  1187 ;;		_LCD_Write
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text2
  1194   000CF2                     __ptext2:
  1195                           	callstack 0
  1196   000CF2                     _LCD_Init:
  1197                           	callstack 29
  1198   000CF2                     
  1199                           ;./LCD_16x2.h: 630:     TRISAbits.TRISA0 = 0;
  1200   000CF2  9092               	bcf	146,0,c	;volatile
  1201                           
  1202                           ;./LCD_16x2.h: 631:     LATAbits.LATA0 = 0;
  1203   000CF4  9089               	bcf	137,0,c	;volatile
  1204                           
  1205                           ;./LCD_16x2.h: 633:     TRISDbits.TRISD2 = 0;
  1206   000CF6  9495               	bcf	149,2,c	;volatile
  1207                           
  1208                           ;./LCD_16x2.h: 634:     LATDbits.LATD2 = 0;
  1209   000CF8  948C               	bcf	140,2,c	;volatile
  1210                           
  1211                           ;./LCD_16x2.h: 635:     TRISDbits.TRISD3 = 0;
  1212   000CFA  9695               	bcf	149,3,c	;volatile
  1213                           
  1214                           ;./LCD_16x2.h: 636:     LATDbits.LATD3 = 0;
  1215   000CFC  968C               	bcf	140,3,c	;volatile
  1216   000CFE                     
  1217                           ;./LCD_16x2.h: 638:     TRISD &= 0x0F;
  1218   000CFE  0E0F               	movlw	15
  1219   000D00  1695               	andwf	149,f,c	;volatile
  1220   000D02                     
  1221                           ;./LCD_16x2.h: 640:     LCD_busy_cnt = 1;
  1222   000D02  0E01               	movlw	1
  1223   000D04  6E5D               	movwf	_LCD_busy_cnt^0,c
  1224   000D06                     
  1225                           ;./LCD_16x2.h: 642:     _delay((unsigned long)((15)*(1000000/4000.0)));
  1226   000D06  0E05               	movlw	5
  1227   000D08  6E50               	movwf	??_LCD_Init^0,c
  1228   000D0A  0EDE               	movlw	222
  1229   000D0C                     u1427:
  1230   000D0C  2EE8               	decfsz	wreg,f,c
  1231   000D0E  D7FE               	bra	u1427
  1232   000D10  2E50               	decfsz	??_LCD_Init^0,f,c
  1233   000D12  D7FC               	bra	u1427
  1234   000D14                     
  1235                           ;./LCD_16x2.h: 644:     LATDbits.LATD2 = 0; LCD_Write(0x30,0);
  1236   000D14  948C               	bcf	140,2,c	;volatile
  1237   000D16  0E00               	movlw	0
  1238   000D18  6E4E               	movwf	LCD_Write@mode^0,c
  1239   000D1A  0E30               	movlw	48
  1240   000D1C  EC4F  F007         	call	_LCD_Write
  1241   000D20                     
  1242                           ;./LCD_16x2.h: 645:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1243   000D20  0EFA               	movlw	250
  1244   000D22                     u1437:
  1245   000D22  D000               	nop2	
  1246   000D24  2EE8               	decfsz	wreg,f,c
  1247   000D26  D7FD               	bra	u1437
  1248   000D28                     
  1249                           ;./LCD_16x2.h: 646:     LATDbits.LATD2 = 0; LCD_Write(0x30,0);
  1250   000D28  948C               	bcf	140,2,c	;volatile
  1251   000D2A  0E00               	movlw	0
  1252   000D2C  6E4E               	movwf	LCD_Write@mode^0,c
  1253   000D2E  0E30               	movlw	48
  1254   000D30  EC4F  F007         	call	_LCD_Write
  1255   000D34                     
  1256                           ;./LCD_16x2.h: 647:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1257   000D34  0EFA               	movlw	250
  1258   000D36                     u1447:
  1259   000D36  D000               	nop2	
  1260   000D38  2EE8               	decfsz	wreg,f,c
  1261   000D3A  D7FD               	bra	u1447
  1262   000D3C                     
  1263                           ;./LCD_16x2.h: 648:     LATDbits.LATD2 = 0; LCD_Write(0x30,0);
  1264   000D3C  948C               	bcf	140,2,c	;volatile
  1265   000D3E  0E00               	movlw	0
  1266   000D40  6E4E               	movwf	LCD_Write@mode^0,c
  1267   000D42  0E30               	movlw	48
  1268   000D44  EC4F  F007         	call	_LCD_Write
  1269   000D48                     
  1270                           ;./LCD_16x2.h: 649:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1271   000D48  0EFA               	movlw	250
  1272   000D4A                     u1457:
  1273   000D4A  D000               	nop2	
  1274   000D4C  2EE8               	decfsz	wreg,f,c
  1275   000D4E  D7FD               	bra	u1457
  1276   000D50                     
  1277                           ;./LCD_16x2.h: 658:     LATDbits.LATD2 = 0; LCD_Write(0x20,0);
  1278   000D50  948C               	bcf	140,2,c	;volatile
  1279   000D52  0E00               	movlw	0
  1280   000D54  6E4E               	movwf	LCD_Write@mode^0,c
  1281   000D56  0E20               	movlw	32
  1282   000D58  EC4F  F007         	call	_LCD_Write
  1283   000D5C                     l1296:
  1284                           
  1285                           ;./LCD_16x2.h: 659:     while (LCD_Busy()) {
  1286   000D5C  EC88  F007         	call	_LCD_Busy	;wreg free
  1287   000D60  0900               	iorlw	0
  1288   000D62  A4D8               	btfss	status,2,c
  1289   000D64  EFB6  F006         	goto	u801
  1290   000D68  EFB8  F006         	goto	u800
  1291   000D6C                     u801:
  1292   000D6C  EFAE  F006         	goto	l1296
  1293   000D70                     u800:
  1294   000D70                     l1298:
  1295   000D70  EC88  F007         	call	_LCD_Busy	;wreg free
  1296   000D74  0900               	iorlw	0
  1297   000D76  A4D8               	btfss	status,2,c
  1298   000D78  EFC0  F006         	goto	u811
  1299   000D7C  EFC2  F006         	goto	u810
  1300   000D80                     u811:
  1301   000D80  EFB8  F006         	goto	l1298
  1302   000D84                     u810:
  1303   000D84  948C               	bcf	140,2,c	;volatile
  1304   000D86  0E01               	movlw	1
  1305   000D88  6E4E               	movwf	LCD_Write@mode^0,c
  1306   000D8A  0E28               	movlw	40
  1307   000D8C  EC4F  F007         	call	_LCD_Write
  1308   000D90                     
  1309                           ;./LCD_16x2.h: 664:     _displaycontrol = 0x04 | 0x00 | 0x00;
  1310   000D90  0E04               	movlw	4
  1311   000D92  6E5B               	movwf	__displaycontrol^0,c
  1312   000D94                     l1304:
  1313   000D94  EC88  F007         	call	_LCD_Busy	;wreg free
  1314   000D98  0900               	iorlw	0
  1315   000D9A  A4D8               	btfss	status,2,c
  1316   000D9C  EFD2  F006         	goto	u821
  1317   000DA0  EFD4  F006         	goto	u820
  1318   000DA4                     u821:
  1319   000DA4  EFCA  F006         	goto	l1304
  1320   000DA8                     u820:
  1321   000DA8  948C               	bcf	140,2,c	;volatile
  1322   000DAA  0E01               	movlw	1
  1323   000DAC  6E4E               	movwf	LCD_Write@mode^0,c
  1324   000DAE  505B               	movf	__displaycontrol^0,w,c
  1325   000DB0  0908               	iorlw	8
  1326   000DB2  EC4F  F007         	call	_LCD_Write
  1327   000DB6                     
  1328                           ;./LCD_16x2.h: 668:      _displaymode = 0x00 | 0x00;
  1329   000DB6  0E00               	movlw	0
  1330   000DB8  6E5A               	movwf	__displaymode^0,c
  1331   000DBA                     l1310:
  1332   000DBA  EC88  F007         	call	_LCD_Busy	;wreg free
  1333   000DBE  0900               	iorlw	0
  1334   000DC0  A4D8               	btfss	status,2,c
  1335   000DC2  EFE5  F006         	goto	u831
  1336   000DC6  EFE7  F006         	goto	u830
  1337   000DCA                     u831:
  1338   000DCA  EFDD  F006         	goto	l1310
  1339   000DCE                     u830:
  1340   000DCE  948C               	bcf	140,2,c	;volatile
  1341   000DD0  0E01               	movlw	1
  1342   000DD2  6E4E               	movwf	LCD_Write@mode^0,c
  1343   000DD4  505A               	movf	__displaymode^0,w,c
  1344   000DD6  0904               	iorlw	4
  1345   000DD8  EC4F  F007         	call	_LCD_Write
  1346   000DDC                     l1314:
  1347   000DDC  EC88  F007         	call	_LCD_Busy	;wreg free
  1348   000DE0  0900               	iorlw	0
  1349   000DE2  A4D8               	btfss	status,2,c
  1350   000DE4  EFF6  F006         	goto	u841
  1351   000DE8  EFF8  F006         	goto	u840
  1352   000DEC                     u841:
  1353   000DEC  EFEE  F006         	goto	l1314
  1354   000DF0                     u840:
  1355   000DF0  948C               	bcf	140,2,c	;volatile
  1356   000DF2  0E01               	movlw	1
  1357   000DF4  6E4E               	movwf	LCD_Write@mode^0,c
  1358   000DF6  0E01               	movlw	1
  1359   000DF8  EC4F  F007         	call	_LCD_Write
  1360   000DFC                     l1318:
  1361   000DFC  EC88  F007         	call	_LCD_Busy	;wreg free
  1362   000E00  0900               	iorlw	0
  1363   000E02  A4D8               	btfss	status,2,c
  1364   000E04  EF06  F007         	goto	u851
  1365   000E08  EF08  F007         	goto	u850
  1366   000E0C                     u851:
  1367   000E0C  EFFE  F006         	goto	l1318
  1368   000E10                     u850:
  1369   000E10  948C               	bcf	140,2,c	;volatile
  1370   000E12  0E01               	movlw	1
  1371   000E14  6E4E               	movwf	LCD_Write@mode^0,c
  1372   000E16  0E02               	movlw	2
  1373   000E18  EC4F  F007         	call	_LCD_Write
  1374   000E1C  0012               	return		;funcret
  1375   000E1E                     __end_of_LCD_Init:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _LCD_CustomChar *****************
  1379 ;; Defined at:
  1380 ;;		line 711 in file "./LCD_16x2.h"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  pt              2    2[COMRAM] PTR void 
  1383 ;;		 -> C3(7), C2(7), C1(7), fig(8), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  i               1    6[COMRAM] unsigned char 
  1386 ;;  c               2    4[COMRAM] PTR unsigned char 
  1387 ;;		 -> C3(7), C2(7), C1(7), fig(8), 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         2       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        5 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 1
  1404 ;; This function calls:
  1405 ;;		_LCD_Busy
  1406 ;;		_LCD_Write
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text3
  1413   000FAC                     __ptext3:
  1414                           	callstack 0
  1415   000FAC                     _LCD_CustomChar:
  1416                           	callstack 29
  1417   000FAC                     
  1418                           ;./LCD_16x2.h: 712:     unsigned char *c = pt;
  1419   000FAC  C050  F052         	movff	LCD_CustomChar@pt,LCD_CustomChar@c
  1420   000FB0  C051  F053         	movff	LCD_CustomChar@pt+1,LCD_CustomChar@c+1
  1421   000FB4                     
  1422                           ;./LCD_16x2.h: 713:     for (char i = 0; i < 8; i++) {
  1423   000FB4  0E00               	movlw	0
  1424   000FB6  6E54               	movwf	LCD_CustomChar@i^0,c
  1425   000FB8                     l1340:
  1426   000FB8  EC88  F007         	call	_LCD_Busy	;wreg free
  1427   000FBC  0900               	iorlw	0
  1428   000FBE  A4D8               	btfss	status,2,c
  1429   000FC0  EFE4  F007         	goto	u901
  1430   000FC4  EFE6  F007         	goto	u900
  1431   000FC8                     u901:
  1432   000FC8  EFDC  F007         	goto	l1340
  1433   000FCC                     u900:
  1434   000FCC  848C               	bsf	140,2,c	;volatile
  1435   000FCE  0E01               	movlw	1
  1436   000FD0  6E4E               	movwf	LCD_Write@mode^0,c
  1437   000FD2  C052  FFD9         	movff	LCD_CustomChar@c,fsr2l
  1438   000FD6  C053  FFDA         	movff	LCD_CustomChar@c+1,fsr2h
  1439   000FDA  50DF               	movf	indf2,w,c
  1440   000FDC  EC4F  F007         	call	_LCD_Write
  1441   000FE0                     
  1442                           ;./LCD_16x2.h: 715:         c++;
  1443   000FE0  4A52               	infsnz	LCD_CustomChar@c^0,f,c
  1444   000FE2  2A53               	incf	(LCD_CustomChar@c+1)^0,f,c
  1445   000FE4                     
  1446                           ;./LCD_16x2.h: 716:     }
  1447   000FE4  2A54               	incf	LCD_CustomChar@i^0,f,c
  1448   000FE6  0E07               	movlw	7
  1449   000FE8  6454               	cpfsgt	LCD_CustomChar@i^0,c
  1450   000FEA  EFF9  F007         	goto	u911
  1451   000FEE  EFFB  F007         	goto	u910
  1452   000FF2                     u911:
  1453   000FF2  EFDC  F007         	goto	l1340
  1454   000FF6                     u910:
  1455   000FF6  0012               	return		;funcret
  1456   000FF8                     __end_of_LCD_CustomChar:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _LCD_Write *****************
  1460 ;; Defined at:
  1461 ;;		line 676 in file "./LCD_16x2.h"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  value           1    wreg     unsigned char 
  1464 ;;  mode            1    0[COMRAM] unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  value           1    1[COMRAM] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:         1       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1479 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:        2 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_LCD_Init
  1486 ;;		_LCD_Text
  1487 ;;		_LCD_CustomChar
  1488 ;;		_main
  1489 ;;		_LCD_print_number
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text4
  1494   000E9E                     __ptext4:
  1495                           	callstack 0
  1496   000E9E                     _LCD_Write:
  1497                           	callstack 30
  1498                           
  1499                           ;incstack = 0
  1500                           ;LCD_Write@value stored from wreg
  1501   000E9E  6E4F               	movwf	LCD_Write@value^0,c
  1502   000EA0                     
  1503                           ;./LCD_16x2.h: 677:     LCD_data.all = value;
  1504   000EA0  C04F  F05C         	movff	LCD_Write@value,_LCD_data
  1505   000EA4                     
  1506                           ;./LCD_16x2.h: 679:     LATAbits.LATA0 = 0;
  1507   000EA4  9089               	bcf	137,0,c	;volatile
  1508   000EA6                     
  1509                           ;./LCD_16x2.h: 681:     LATDbits.LATD7 = LCD_data.bit7;
  1510   000EA6  AE5C               	btfss	_LCD_data^0,7,c
  1511   000EA8  D002               	bra	u715
  1512   000EAA  8E8C               	bsf	140,7,c	;volatile
  1513   000EAC  D001               	bra	u717
  1514   000EAE                     u715:
  1515   000EAE  9E8C               	bcf	140,7,c	;volatile
  1516   000EB0                     u717:
  1517   000EB0                     
  1518                           ;./LCD_16x2.h: 682:     LATDbits.LATD6 = LCD_data.bit6;
  1519   000EB0  AC5C               	btfss	_LCD_data^0,6,c
  1520   000EB2  D002               	bra	u725
  1521   000EB4  8C8C               	bsf	140,6,c	;volatile
  1522   000EB6  D001               	bra	u727
  1523   000EB8                     u725:
  1524   000EB8  9C8C               	bcf	140,6,c	;volatile
  1525   000EBA                     u727:
  1526   000EBA                     
  1527                           ;./LCD_16x2.h: 683:     LATDbits.LATD5 = LCD_data.bit5;
  1528   000EBA  AA5C               	btfss	_LCD_data^0,5,c
  1529   000EBC  D002               	bra	u735
  1530   000EBE  8A8C               	bsf	140,5,c	;volatile
  1531   000EC0  D001               	bra	u737
  1532   000EC2                     u735:
  1533   000EC2  9A8C               	bcf	140,5,c	;volatile
  1534   000EC4                     u737:
  1535   000EC4                     
  1536                           ;./LCD_16x2.h: 684:     LATDbits.LATD4 = LCD_data.bit4;
  1537   000EC4  A85C               	btfss	_LCD_data^0,4,c
  1538   000EC6  D002               	bra	u745
  1539   000EC8  888C               	bsf	140,4,c	;volatile
  1540   000ECA  D001               	bra	u747
  1541   000ECC                     u745:
  1542   000ECC  988C               	bcf	140,4,c	;volatile
  1543   000ECE                     u747:
  1544   000ECE                     
  1545                           ;./LCD_16x2.h: 686:     LATDbits.LATD3 = 1; _delay((unsigned long)((1)*(1000000/4000000.
      +                          0))); LATDbits.LATD3 = 0;;
  1546   000ECE  868C               	bsf	140,3,c	;volatile
  1547   000ED0  968C               	bcf	140,3,c	;volatile
  1548   000ED2                     
  1549                           ;./LCD_16x2.h: 687:     if (mode) {
  1550   000ED2  504E               	movf	LCD_Write@mode^0,w,c
  1551   000ED4  B4D8               	btfsc	status,2,c
  1552   000ED6  EF6F  F007         	goto	u751
  1553   000EDA  EF71  F007         	goto	u750
  1554   000EDE                     u751:
  1555   000EDE  EF87  F007         	goto	l51
  1556   000EE2                     u750:
  1557   000EE2                     
  1558                           ;./LCD_16x2.h: 689:         LATDbits.LATD7 = LCD_data.bit3;
  1559   000EE2  A65C               	btfss	_LCD_data^0,3,c
  1560   000EE4  D002               	bra	u765
  1561   000EE6  8E8C               	bsf	140,7,c	;volatile
  1562   000EE8  D001               	bra	u767
  1563   000EEA                     u765:
  1564   000EEA  9E8C               	bcf	140,7,c	;volatile
  1565   000EEC                     u767:
  1566                           
  1567                           ;./LCD_16x2.h: 690:         LATDbits.LATD6 = LCD_data.bit2;
  1568   000EEC  A45C               	btfss	_LCD_data^0,2,c
  1569   000EEE  D002               	bra	u775
  1570   000EF0  8C8C               	bsf	140,6,c	;volatile
  1571   000EF2  D001               	bra	u777
  1572   000EF4                     u775:
  1573   000EF4  9C8C               	bcf	140,6,c	;volatile
  1574   000EF6                     u777:
  1575                           
  1576                           ;./LCD_16x2.h: 691:         LATDbits.LATD5 = LCD_data.bit1;
  1577   000EF6  A25C               	btfss	_LCD_data^0,1,c
  1578   000EF8  D002               	bra	u785
  1579   000EFA  8A8C               	bsf	140,5,c	;volatile
  1580   000EFC  D001               	bra	u787
  1581   000EFE                     u785:
  1582   000EFE  9A8C               	bcf	140,5,c	;volatile
  1583   000F00                     u787:
  1584                           
  1585                           ;./LCD_16x2.h: 692:         LATDbits.LATD4 = LCD_data.bit0;
  1586   000F00  A05C               	btfss	_LCD_data^0,0,c
  1587   000F02  D002               	bra	u795
  1588   000F04  888C               	bsf	140,4,c	;volatile
  1589   000F06  D001               	bra	u797
  1590   000F08                     u795:
  1591   000F08  988C               	bcf	140,4,c	;volatile
  1592   000F0A                     u797:
  1593                           
  1594                           ;./LCD_16x2.h: 693:         LATDbits.LATD3 = 1; _delay((unsigned long)((1)*(1000000/4000
      +                          000.0))); LATDbits.LATD3 = 0;;
  1595   000F0A  868C               	bsf	140,3,c	;volatile
  1596   000F0C  968C               	bcf	140,3,c	;volatile
  1597   000F0E                     l51:
  1598   000F0E  0012               	return		;funcret
  1599   000F10                     __end_of_LCD_Write:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _LCD_Busy *****************
  1603 ;; Defined at:
  1604 ;;		line 744 in file "./LCD_16x2.h"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      unsigned char 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1618 ;;      Params:         0       0       0       0       0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1621 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1622 ;;Total ram usage:        0 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_LCD_Init
  1628 ;;		_LCD_Text
  1629 ;;		_LCD_CustomChar
  1630 ;;		_main
  1631 ;;		_LCD_print_number
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text5
  1636   000F10                     __ptext5:
  1637                           	callstack 0
  1638   000F10                     _LCD_Busy:
  1639                           	callstack 29
  1640   000F10                     
  1641                           ;./LCD_16x2.h: 746:     if (LCD_busy_cnt >= 100) {
  1642   000F10  0E63               	movlw	99
  1643   000F12  645D               	cpfsgt	_LCD_busy_cnt^0,c
  1644   000F14  EF8E  F007         	goto	u101
  1645   000F18  EF90  F007         	goto	u100
  1646   000F1C                     u101:
  1647   000F1C  EF95  F007         	goto	l91
  1648   000F20                     u100:
  1649   000F20                     l902:
  1650                           
  1651                           ;./LCD_16x2.h: 747:         LCD_busy_cnt = 1;
  1652   000F20  0E01               	movlw	1
  1653   000F22  6E5D               	movwf	_LCD_busy_cnt^0,c
  1654   000F24                     
  1655                           ;./LCD_16x2.h: 748:         return 0;
  1656   000F24  0E00               	movlw	0
  1657   000F26  EFAE  F007         	goto	l92
  1658   000F2A                     l91:
  1659                           
  1660                           ;./LCD_16x2.h: 751:     LATAbits.LATA0 = 1;
  1661   000F2A  8089               	bsf	137,0,c	;volatile
  1662                           
  1663                           ;./LCD_16x2.h: 752:     LATDbits.LATD2 = 0;
  1664   000F2C  948C               	bcf	140,2,c	;volatile
  1665   000F2E                     
  1666                           ;./LCD_16x2.h: 753:     TRISD |= 0xF0;
  1667   000F2E  0EF0               	movlw	240
  1668   000F30  1295               	iorwf	149,f,c	;volatile
  1669   000F32                     
  1670                           ;./LCD_16x2.h: 755:     LATDbits.LATD3 = 1;;
  1671   000F32  868C               	bsf	140,3,c	;volatile
  1672   000F34                     
  1673                           ;./LCD_16x2.h: 757:     LCD_data.bit7 = PORTDbits.RD7;
  1674   000F34  AE83               	btfss	131,7,c	;volatile
  1675   000F36  D002               	bra	u115
  1676   000F38  8E5C               	bsf	_LCD_data^0,7,c
  1677   000F3A  D001               	bra	u117
  1678   000F3C                     u115:
  1679   000F3C  9E5C               	bcf	_LCD_data^0,7,c
  1680   000F3E                     u117:
  1681   000F3E                     
  1682                           ;./LCD_16x2.h: 758:     LATDbits.LATD3 = 0;;
  1683   000F3E  968C               	bcf	140,3,c	;volatile
  1684   000F40                     
  1685                           ;./LCD_16x2.h: 759:     LATDbits.LATD3 = 1;;
  1686   000F40  868C               	bsf	140,3,c	;volatile
  1687   000F42                     
  1688                           ;./LCD_16x2.h: 761:     LATDbits.LATD3 = 0;;
  1689   000F42  968C               	bcf	140,3,c	;volatile
  1690                           
  1691                           ;./LCD_16x2.h: 763:     TRISD &= 0x0F;
  1692   000F44  0E0F               	movlw	15
  1693   000F46  1695               	andwf	149,f,c	;volatile
  1694   000F48                     
  1695                           ;./LCD_16x2.h: 764:     LATAbits.LATA0 = 0;
  1696   000F48  9089               	bcf	137,0,c	;volatile
  1697   000F4A                     
  1698                           ;./LCD_16x2.h: 767:     if (LCD_data.bit7 == 1) {
  1699   000F4A  AE5C               	btfss	_LCD_data^0,7,c
  1700   000F4C  EFAA  F007         	goto	u121
  1701   000F50  EFAC  F007         	goto	u120
  1702   000F54                     u121:
  1703   000F54  EF90  F007         	goto	l902
  1704   000F58                     u120:
  1705   000F58                     
  1706                           ;./LCD_16x2.h: 768:         LCD_busy_cnt++;
  1707   000F58  2A5D               	incf	_LCD_busy_cnt^0,f,c
  1708   000F5A                     
  1709                           ;./LCD_16x2.h: 769:         return 1;
  1710   000F5A  0E01               	movlw	1
  1711   000F5C                     l92:
  1712   000F5C  0012               	return		;funcret
  1713   000F5E                     __end_of_LCD_Busy:
  1714                           	callstack 0
  1715                           
  1716                           	psect	rparam
  1717   000000                     
  1718                           	psect	idloc
  1719                           
  1720                           ;Config register IDLOC0 @ 0x200000
  1721                           ;	unspecified, using default values
  1722   200000                     	org	2097152
  1723   200000  FF                 	db	255
  1724                           
  1725                           ;Config register IDLOC1 @ 0x200001
  1726                           ;	unspecified, using default values
  1727   200001                     	org	2097153
  1728   200001  FF                 	db	255
  1729                           
  1730                           ;Config register IDLOC2 @ 0x200002
  1731                           ;	unspecified, using default values
  1732   200002                     	org	2097154
  1733   200002  FF                 	db	255
  1734                           
  1735                           ;Config register IDLOC3 @ 0x200003
  1736                           ;	unspecified, using default values
  1737   200003                     	org	2097155
  1738   200003  FF                 	db	255
  1739                           
  1740                           ;Config register IDLOC4 @ 0x200004
  1741                           ;	unspecified, using default values
  1742   200004                     	org	2097156
  1743   200004  FF                 	db	255
  1744                           
  1745                           ;Config register IDLOC5 @ 0x200005
  1746                           ;	unspecified, using default values
  1747   200005                     	org	2097157
  1748   200005  FF                 	db	255
  1749                           
  1750                           ;Config register IDLOC6 @ 0x200006
  1751                           ;	unspecified, using default values
  1752   200006                     	org	2097158
  1753   200006  FF                 	db	255
  1754                           
  1755                           ;Config register IDLOC7 @ 0x200007
  1756                           ;	unspecified, using default values
  1757   200007                     	org	2097159
  1758   200007  FF                 	db	255
  1759                           
  1760                           	psect	config
  1761                           
  1762                           ;Config register CONFIG1L @ 0x300000
  1763                           ;	unspecified, using default values
  1764                           ;	PLL Prescaler Selection bits
  1765                           ;	PLLDIV = 0x0, unprogrammed default
  1766                           ;	System Clock Postscaler Selection bits
  1767                           ;	CPUDIV = 0x0, unprogrammed default
  1768                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1769                           ;	USBDIV = 0x0, unprogrammed default
  1770   300000                     	org	3145728
  1771   300000  00                 	db	0
  1772                           
  1773                           ;Config register CONFIG1H @ 0x300001
  1774                           ;	unspecified, using default values
  1775                           ;	Oscillator Selection bits
  1776                           ;	FOSC = 0x5, unprogrammed default
  1777                           ;	Fail-Safe Clock Monitor Enable bit
  1778                           ;	FCMEN = 0x0, unprogrammed default
  1779                           ;	Internal/External Oscillator Switchover bit
  1780                           ;	IESO = 0x0, unprogrammed default
  1781   300001                     	org	3145729
  1782   300001  05                 	db	5
  1783                           
  1784                           ;Config register CONFIG2L @ 0x300002
  1785                           ;	unspecified, using default values
  1786                           ;	Power-up Timer Enable bit
  1787                           ;	PWRT = 0x1, unprogrammed default
  1788                           ;	Brown-out Reset Enable bits
  1789                           ;	BOR = 0x3, unprogrammed default
  1790                           ;	Brown-out Reset Voltage bits
  1791                           ;	BORV = 0x3, unprogrammed default
  1792                           ;	USB Voltage Regulator Enable bit
  1793                           ;	VREGEN = 0x0, unprogrammed default
  1794   300002                     	org	3145730
  1795   300002  1F                 	db	31
  1796                           
  1797                           ;Config register CONFIG2H @ 0x300003
  1798                           ;	unspecified, using default values
  1799                           ;	Watchdog Timer Enable bit
  1800                           ;	WDT = 0x1, unprogrammed default
  1801                           ;	Watchdog Timer Postscale Select bits
  1802                           ;	WDTPS = 0xF, unprogrammed default
  1803   300003                     	org	3145731
  1804   300003  1F                 	db	31
  1805                           
  1806                           ; Padding undefined space
  1807   300004                     	org	3145732
  1808   300004  FF                 	db	255
  1809                           
  1810                           ;Config register CONFIG3H @ 0x300005
  1811                           ;	unspecified, using default values
  1812                           ;	CCP2 MUX bit
  1813                           ;	CCP2MX = 0x1, unprogrammed default
  1814                           ;	PORTB A/D Enable bit
  1815                           ;	PBADEN = 0x1, unprogrammed default
  1816                           ;	Low-Power Timer 1 Oscillator Enable bit
  1817                           ;	LPT1OSC = 0x0, unprogrammed default
  1818                           ;	MCLR Pin Enable bit
  1819                           ;	MCLRE = 0x1, unprogrammed default
  1820   300005                     	org	3145733
  1821   300005  83                 	db	131
  1822                           
  1823                           ;Config register CONFIG4L @ 0x300006
  1824                           ;	unspecified, using default values
  1825                           ;	Stack Full/Underflow Reset Enable bit
  1826                           ;	STVREN = 0x1, unprogrammed default
  1827                           ;	Single-Supply ICSP Enable bit
  1828                           ;	LVP = 0x1, unprogrammed default
  1829                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1830                           ;	ICPRT = 0x0, unprogrammed default
  1831                           ;	Extended Instruction Set Enable bit
  1832                           ;	XINST = 0x0, unprogrammed default
  1833                           ;	Background Debugger Enable bit
  1834                           ;	DEBUG = 0x1, unprogrammed default
  1835   300006                     	org	3145734
  1836   300006  85                 	db	133
  1837                           
  1838                           ; Padding undefined space
  1839   300007                     	org	3145735
  1840   300007  FF                 	db	255
  1841                           
  1842                           ;Config register CONFIG5L @ 0x300008
  1843                           ;	unspecified, using default values
  1844                           ;	Code Protection bit
  1845                           ;	CP0 = 0x1, unprogrammed default
  1846                           ;	Code Protection bit
  1847                           ;	CP1 = 0x1, unprogrammed default
  1848                           ;	Code Protection bit
  1849                           ;	CP2 = 0x1, unprogrammed default
  1850                           ;	Code Protection bit
  1851                           ;	CP3 = 0x1, unprogrammed default
  1852   300008                     	org	3145736
  1853   300008  0F                 	db	15
  1854                           
  1855                           ;Config register CONFIG5H @ 0x300009
  1856                           ;	unspecified, using default values
  1857                           ;	Boot Block Code Protection bit
  1858                           ;	CPB = 0x1, unprogrammed default
  1859                           ;	Data EEPROM Code Protection bit
  1860                           ;	CPD = 0x1, unprogrammed default
  1861   300009                     	org	3145737
  1862   300009  C0                 	db	192
  1863                           
  1864                           ;Config register CONFIG6L @ 0x30000A
  1865                           ;	unspecified, using default values
  1866                           ;	Write Protection bit
  1867                           ;	WRT0 = 0x1, unprogrammed default
  1868                           ;	Write Protection bit
  1869                           ;	WRT1 = 0x1, unprogrammed default
  1870                           ;	Write Protection bit
  1871                           ;	WRT2 = 0x1, unprogrammed default
  1872                           ;	Write Protection bit
  1873                           ;	WRT3 = 0x1, unprogrammed default
  1874   30000A                     	org	3145738
  1875   30000A  0F                 	db	15
  1876                           
  1877                           ;Config register CONFIG6H @ 0x30000B
  1878                           ;	unspecified, using default values
  1879                           ;	Configuration Register Write Protection bit
  1880                           ;	WRTC = 0x1, unprogrammed default
  1881                           ;	Boot Block Write Protection bit
  1882                           ;	WRTB = 0x1, unprogrammed default
  1883                           ;	Data EEPROM Write Protection bit
  1884                           ;	WRTD = 0x1, unprogrammed default
  1885   30000B                     	org	3145739
  1886   30000B  E0                 	db	224
  1887                           
  1888                           ;Config register CONFIG7L @ 0x30000C
  1889                           ;	unspecified, using default values
  1890                           ;	Table Read Protection bit
  1891                           ;	EBTR0 = 0x1, unprogrammed default
  1892                           ;	Table Read Protection bit
  1893                           ;	EBTR1 = 0x1, unprogrammed default
  1894                           ;	Table Read Protection bit
  1895                           ;	EBTR2 = 0x1, unprogrammed default
  1896                           ;	Table Read Protection bit
  1897                           ;	EBTR3 = 0x1, unprogrammed default
  1898   30000C                     	org	3145740
  1899   30000C  0F                 	db	15
  1900                           
  1901                           ;Config register CONFIG7H @ 0x30000D
  1902                           ;	unspecified, using default values
  1903                           ;	Boot Block Table Read Protection bit
  1904                           ;	EBTRB = 0x1, unprogrammed default
  1905   30000D                     	org	3145741
  1906   30000D  40                 	db	64
  1907                           tosu	equ	0xFFF
  1908                           tosh	equ	0xFFE
  1909                           tosl	equ	0xFFD
  1910                           stkptr	equ	0xFFC
  1911                           pclatu	equ	0xFFB
  1912                           pclath	equ	0xFFA
  1913                           pcl	equ	0xFF9
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           prodh	equ	0xFF4
  1919                           prodl	equ	0xFF3
  1920                           indf0	equ	0xFEF
  1921                           postinc0	equ	0xFEE
  1922                           postdec0	equ	0xFED
  1923                           preinc0	equ	0xFEC
  1924                           plusw0	equ	0xFEB
  1925                           fsr0h	equ	0xFEA
  1926                           fsr0l	equ	0xFE9
  1927                           wreg	equ	0xFE8
  1928                           indf1	equ	0xFE7
  1929                           postinc1	equ	0xFE6
  1930                           postdec1	equ	0xFE5
  1931                           preinc1	equ	0xFE4
  1932                           plusw1	equ	0xFE3
  1933                           fsr1h	equ	0xFE2
  1934                           fsr1l	equ	0xFE1
  1935                           bsr	equ	0xFE0
  1936                           indf2	equ	0xFDF
  1937                           postinc2	equ	0xFDE
  1938                           postdec2	equ	0xFDD
  1939                           preinc2	equ	0xFDC
  1940                           plusw2	equ	0xFDB
  1941                           fsr2h	equ	0xFDA
  1942                           fsr2l	equ	0xFD9
  1943                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        77
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      93
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_CustomChar@pt	PTR void  size(2) Largest target is 8
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), fig(COMRAM[8]), 

    LCD_CustomChar@c	PTR unsigned char  size(2) Largest target is 8
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), fig(COMRAM[8]), 

    LCD_Text@pt	PTR void  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 

    LCD_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_LCD_CustomChar
    _LCD_Text->_LCD_Write
    _LCD_Init->_LCD_Write
    _LCD_CustomChar->_LCD_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11538
                                              7 COMRAM     5     5      0
                           _LCD_Busy
                     _LCD_CustomChar
                           _LCD_Init
                           _LCD_Text
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Text                                             4     2      2    2848
                                              2 COMRAM     4     2      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    2628
                                              2 COMRAM     1     1      0
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_CustomChar                                       5     3      2    3024
                                              2 COMRAM     5     3      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            2     1      1    2628
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Busy
   _LCD_CustomChar
     _LCD_Busy
     _LCD_Write
   _LCD_Init
     _LCD_Busy
     _LCD_Write
   _LCD_Text
     _LCD_Busy
     _LCD_Write
   _LCD_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBIGSFRhh         6A      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      5D       1       97.9%
BITBIGSFRlll        23      0       0      26        0.0%
BITBIGSFRllh         5      0       0      25        0.0%
BITBIGSFRlhh         5      0       0      23        0.0%
BITBIGSFRlhl         2      0       0      24        0.0%
BITBIGSFRhl          2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D       3        0.0%
DATA                 0      0      5D       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Dec 03 02:26:13 2023

         _LCD_CustomChar 0FAC                       _C1 0047                       _C2 0040  
                     _C3 0039                       l40 0DCE                       l34 0D84  
                     l51 0F0E                       l43 0DF0                       l60 0E9C  
                     l37 0DA8                       l46 0E10                       l47 0E1C  
                     l58 0E3E                       l91 0F2A                       l67 0FCC  
                     l92 0F5C                       l68 0FF6                      l123 0826  
                    l132 08AA                      l141 0924                      l150 096E  
                    l126 0852                      l135 08D6                      l144 0948  
                    l153 0990                      l129 087E                      l170 0A76  
                    l138 0902                      l156 09CC                      l165 0A30  
                    l182 0B88                      l174 0ABC                      l159 09F4  
                    l185 0BC2                      l178 0B02                      l188 0BEA  
                    l198 0CAA                      l900 0F10                      l910 0F32  
                    l902 0F20                      l920 0F42                      l912 0F34  
                    l904 0F24                      l930 0F5A                      l922 0F42  
                    l914 0F34                      l924 0F48                      l916 0F3E  
                    l908 0F2E                      l926 0F4A                      l918 0F40  
                    l928 0F58                      u100 0F20                      u101 0F1C  
                    u120 0F58                      u121 0F54                      u115 0F3C  
                    u117 0F3E                      u800 0D70                      u801 0D6C  
                    u810 0D84                      u715 0EAE                      u811 0D80  
                    u900 0FCC                      u820 0DA8                      u725 0EB8  
                    u717 0EB0                      u901 0FC8                      u821 0DA4  
                    u750 0EE2                      u910 0FF6                      u830 0DCE  
                    u751 0EDE                      u735 0EC2                      u727 0EBA  
                    u911 0FF2                      u831 0DCA                      u840 0DF0  
                    u745 0ECC                      u737 0EC4                      u841 0DEC  
                    u850 0E10                      u747 0ECE                      u851 0E0C  
                    u860 0E3E                      u765 0EEA                      u861 0E3A  
                    u870 0E64                      u775 0EF4                      u767 0EEC  
                    u880 0E8C                      u785 0EFE                      u777 0EF6  
                    u890 0E9C                      u795 0F08                      u787 0F00  
                    u891 0E98                      u797 0F0A                      u877 0E5A  
                    u990 0826                      u887 0E82                      u991 0822  
                    _fig 0031                      wreg 0FE8                     l1300 0D86  
                   l1310 0DBA                     l1302 0D90                     l1320 0E12  
                   l1312 0DD0                     l1304 0D94                     l1400 086A  
                   l1250 0EB0                     l1314 0DDC                     l1306 0DAA  
                   l1330 0E6C                     l1322 0E1E                     l1410 08B6  
                   l1402 0880                     l1260 0ED0                     l1252 0EBA  
                   l1244 0EA0                     l1340 0FB8                     l1332 0FAC  
                   l1316 0DF2                     l1308 0DB6                     l1324 0E2A  
                   l1500 0B72                     l1420 0904                     l1412 08C2  
                   l1404 088A                     l1262 0ED2                     l1254 0EC4  
                   l1246 0EA4                     l1342 0FCE                     l1334 0FB4  
                   l1318 0DFC                     l1270 0D02                     l1326 0E40  
                   l1510 0BAE                     l1502 0B74                     l1430 0934  
                   l1422 090E                     l1414 08D8                     l1406 0896  
                   l1264 0EE2                     l1256 0ECE                     l1248 0EA6  
                   l1344 0FE0                     l1280 0D28                     l1272 0D06  
                   l1328 0E68                     l1520 0BEC                     l1512 0BC4  
                   l1504 0B8A                     l1440 095A                     l1432 094A  
                   l1424 0910                     l1416 08E2                     l1408 08AC  
                   l1258 0ED0                     l1346 0FE4                     l1290 0D48  
                   l1282 0D2A                     l1274 0D14                     l1266 0CF2  
                   l1522 0BFC                     l1514 0BD0                     l1506 0B96  
                   l1450 099E                     l1442 0970                     l1434 0956  
                   l1426 0926                     l1418 08EE                     l1348 0FE6  
                   l1292 0D50                     l1284 0D34                     l1276 0D16  
                   l1268 0CFE                     l1540 0CB8                     l1524 0C16  
                   l1532 0C64                     l1516 0BD4                     l1508 0BAC  
                   l1460 09DE                     l1452 09B6                     l1444 097A  
                   l1428 0932                     l1294 0D52                     l1286 0D3C  
                   l1278 0D20                     l1542 0CC8                     l1526 0C30  
                   l1534 0C96                     l1518 0BD6                     l1470 0A32  
                   l1462 09E0                     l1454 09B8                     l1446 097C  
                   l1390 0828                     l1296 0D5C                     l1288 0D3E  
                   l1544 0CD8                     l1536 0CAC                     l1528 0C4A  
                   l1480 0AA8                     l1472 0A4C                     l1464 09F6  
                   l1456 09CE                     l1448 0992                     l1392 0832  
                   l1298 0D70                     l1546 0CDA                     l1538 0CB6  
                   l1570 0C78                     l1482 0ABE                     l1474 0A62  
                   l1466 0A06                     l1458 09DA                     l1394 083E  
                   l1386 080E                     l1484 0AD8                     l1476 0A78  
                   l1468 0A1C                     l1492 0B1E                     l1396 0854  
                   l1388 0812                     l1486 0AEE                     l1478 0A92  
                   l1494 0B50                     l1398 085E                     l1496 0B52  
                   l1568 0B32                     l1488 0B04                     l1498 0B62  
                   STR_1 0801                     u1000 0852                     u1001 084E  
                   u1010 087E                     u1011 087A                     u1100 09F4  
                   u1020 08AA                     u1101 09F0                     u1021 08A6  
                   u1110 0A18                     u1030 08D6                     u1111 0A12  
                   u1031 08D2                     u1200 0AEA                     u1120 0A1A  
                   u1040 0902                     u1201 0AE4                     u1041 08FE  
                   u1210 0AEC                     u1130 0A30                     u1050 0924  
                   u1131 0A2C                     u1051 0920                     u1300 0C2A  
                   u1220 0B02                     u1140 0A5E                     u1060 0948  
                   u1221 0AFE                     u1141 0A58                     u1061 0944  
                   u1310 0C42                     u1230 0B72                     u1150 0A60  
                   u1070 096E                     u1311 0C3C                     u1231 0B6E  
                   u1071 096A                     u1320 0C44                     u1240 0B88  
                   u1160 0A76                     u1080 0990                     u1241 0B84  
                   u1161 0A72                     u1081 098C                     u1330 0C5C  
                   u1250 0BC2                     u1170 0AA4                     u1090 09CC  
                   u1331 0C56                     u1251 0BBE                     u1171 0A9E  
                   u1091 09C8                     u1340 0C5E                     u1260 0BEA  
                   u1180 0AA6                     u1261 0BE6                     u1350 0CAA  
                   u1270 0C0E                     u1190 0ABC                     u1351 0CA6  
                   u1271 0C08                     u1407 0BA0                     u1191 0AB8  
                   u1360 0CD8                     u1280 0C10                     u1361 0CD4  
                   u1417 0CBE                     u1370 0CEA                     u1290 0C28  
                   u1427 0D0C                     u1371 0CE6                     u1291 0C22  
                   u1437 0D22                     u1447 0D36                     u1457 0D4A  
                   u1387 09A8                     u1397 0B58                     _cont 0027  
                   _main 080E                     _msg1 000D                     _msg2 0001  
                   _msg3 0028                     _msg4 001E                     _msg5 0018  
                   fsr0h 0FEA                     indf0 0FEF                     fsr2h 0FDA  
                   fsr0l 0FE9                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000   __end_of_LCD_CustomChar 0FF8  
           ___param_bank 0000         __end_of_LCD_Busy 0F5E         __end_of_LCD_Init 0E1E  
       __end_of_LCD_Text 0E9E                    ?_main 004E                    _TRISD 0F95  
        LCD_CustomChar@c 0052          LCD_CustomChar@i 0054                    main@i 0059  
                  main@j 0058                    tablat 0FF5                    status 0FD8  
        ?_LCD_CustomChar 0050          __initialization 0FF8             __end_of_main 0CF2  
                 ??_main 0055            __activetblptr 0002        __end_of_LCD_Write 0F10  
           LCD_Text@text 0052             __displaymode 005A         LCD_CustomChar@pt 0050  
                 isa$std 0001             __pdataCOMRAM 0001             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 101E                ?_LCD_Busy 004E  
              ?_LCD_Init 004E                ?_LCD_Text 0050            ___rparam_used 0001  
         __pcstackCOMRAM 004E               ??_LCD_Busy 004E               ??_LCD_Init 0050  
             ??_LCD_Text 0052               __pnvCOMRAM 005D         ??_LCD_CustomChar 0052  
                __Hparam 0000                  __Lparam 0000            LCD_Write@mode 004E  
           __psmallconst 0800                  __pcinit 0FF8                  __ramtop 0800  
                __ptext0 080E                  __ptext1 0E1E                  __ptext2 0CF2  
                __ptext3 0FAC                  __ptext4 0E9E                  __ptext5 0F10  
        __displaycontrol 005B                _LCD_Write 0E9E     end_of_initialization 101E  
          __Lmediumconst 0000                  postdec1 0FE5                  postinc0 0FEE  
              _PORTDbits 0F83                _TRISAbits 0F92                _TRISDbits 0F95  
             ?_LCD_Write 004E               LCD_Text@pt 0050            __pidataCOMRAM 0F5E  
    start_initialization 0FF8             _LCD_busy_cnt 005D              __pbssCOMRAM 005A  
            ??_LCD_Write 004F                _displaybf 0023              __smallconst 0800  
               _LCD_Busy 0F10                 _LCD_Init 0CF2                 _LCD_Text 0E1E  
               _LATAbits 0F89                 _LATDbits 0F8C                 _LCD_data 005C  
              main@valid 0057                copy_data0 100C                 __Hrparam 0000  
               __Lrparam 0000           LCD_Write@value 004F                 isa$xinst 0000  
