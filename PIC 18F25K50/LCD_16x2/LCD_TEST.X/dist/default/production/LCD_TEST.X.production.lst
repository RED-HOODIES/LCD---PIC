

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Dec 03 02:49:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F25K50 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   000F7E                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _msg2
    63   000F7E  51                 	db	81
    64   000F7F  75                 	db	117
    65   000F80  69                 	db	105
    66   000F81  65                 	db	101
    67   000F82  6E                 	db	110
    68   000F83  20                 	db	32
    69   000F84  65                 	db	101
    70   000F85  72                 	db	114
    71   000F86  65                 	db	101
    72   000F87  73                 	db	115
    73   000F88  3F                 	db	63
    74   000F89  00                 	db	0
    75                           
    76                           ;initializer for _msg1
    77   000F8A  48                 	db	72
    78   000F8B  6F                 	db	111
    79   000F8C  6C                 	db	108
    80   000F8D  61                 	db	97
    81   000F8E  20                 	db	32
    82   000F8F  4D                 	db	77
    83   000F90  75                 	db	117
    84   000F91  6E                 	db	110
    85   000F92  64                 	db	100
    86   000F93  6F                 	db	111
    87   000F94  00                 	db	0
    88                           
    89                           ;initializer for _msg5
    90   000F95  01                 	db	1
    91   000F96  02                 	db	2
    92   000F97  C2                 	db	194
    93   000F98  00                 	db	0
    94   000F99  00                 	db	0
    95   000F9A  00                 	db	0
    96                           
    97                           ;initializer for _msg4
    98   000F9B  28                 	db	40
    99   000F9C  03                 	db	3
   100   000F9D  5F                 	db	95
   101   000F9E  03                 	db	3
   102   000F9F  29                 	db	41
   103                           
   104                           ;initializer for _displaybf
   105   000FA0  4B                 	db	75
   106   000FA1  4F                 	db	79
   107   000FA2  4C                 	db	76
   108   000FA3  00                 	db	0
   109                           
   110                           ;initializer for _cont
   111   000FA4  7C                 	db	124
   112                           
   113                           ;initializer for _msg3
   114   000FA5  01                 	db	1
   115   000FA6  02                 	db	2
   116   000FA7  5F                 	db	95
   117   000FA8  28                 	db	40
   118   000FA9  C2                 	db	194
   119   000FAA  29                 	db	41
   120   000FAB  5F                 	db	95
   121   000FAC  2F                 	db	47
   122   000FAD  01                 	db	1
   123                           
   124                           ;initializer for _C3
   125   000FAE  00                 	db	0
   126   000FAF  00                 	db	0
   127   000FB0  1F                 	db	31
   128   000FB1  0A                 	db	10
   129   000FB2  0A                 	db	10
   130   000FB3  0A                 	db	10
   131   000FB4  0A                 	db	10
   132                           
   133                           ;initializer for _C2
   134   000FB5  00                 	db	0
   135   000FB6  10                 	db	16
   136   000FB7  08                 	db	8
   137   000FB8  04                 	db	4
   138   000FB9  02                 	db	2
   139   000FBA  01                 	db	1
   140   000FBB  00                 	db	0
   141                           
   142                           ;initializer for _C1
   143   000FBC  1F                 	db	31
   144   000FBD  00                 	db	0
   145   000FBE  00                 	db	0
   146   000FBF  00                 	db	0
   147   000FC0  00                 	db	0
   148   000FC1  00                 	db	0
   149   000FC2  00                 	db	0
   150                           
   151                           	psect	nvCOMRAM
   152   000055                     __pnvCOMRAM:
   153                           	callstack 0
   154   000055                     _LCD_busy_cnt:
   155                           	callstack 0
   156   000055                     	ds	1
   157   000000                     _TRISA	set	3986
   158   000000                     _PORTAbits	set	3968
   159   000000                     _LATAbits	set	3977
   160   000000                     _TRISAbits	set	3986
   161                           
   162                           	psect	smallconst
   163   000800                     __psmallconst:
   164                           	callstack 0
   165   000800  00                 	db	0
   166   000801                     STR_1:
   167   000801  54                 	db	84	;'T'
   168   000802  65                 	db	101	;'e'
   169   000803  73                 	db	115	;'s'
   170   000804  74                 	db	116	;'t'
   171   000805  65                 	db	101	;'e'
   172   000806  6F                 	db	111	;'o'
   173   000807  2E                 	db	46
   174   000808  2E                 	db	46
   175   000809  2E                 	db	46
   176   00080A  2E                 	db	46
   177   00080B  00                 	db	0
   178   00080C  00                 	db	0	; dummy byte at the end
   179   000000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   000FC4                     __pcinit:
   184                           	callstack 0
   185   000FC4                     start_initialization:
   186                           	callstack 0
   187   000FC4                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Initialize objects allocated to COMRAM (69 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192   000FC4  0E7E               	movlw	low __pidataCOMRAM
   193   000FC6  6EF6               	movwf	tblptrl,c
   194   000FC8  0E0F               	movlw	high __pidataCOMRAM
   195   000FCA  6EF7               	movwf	tblptrh,c
   196   000FCC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197   000FCE  6EF8               	movwf	tblptru,c
   198   000FD0  EE00  F001         	lfsr	0,__pdataCOMRAM
   199   000FD4  EE10 F045          	lfsr	1,69
   200   000FD8                     copy_data0:
   201   000FD8  0009               	tblrd		*+
   202   000FDA  CFF5 FFEE          	movff	tablat,postinc0
   203   000FDE  50E5               	movf	postdec1,w,c
   204   000FE0  50E1               	movf	fsr1l,w,c
   205   000FE2  E1FA               	bnz	copy_data0
   206                           
   207                           ; Clear objects allocated to COMRAM (3 bytes)
   208   000FE4  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   209   000FE6  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   210   000FE8  6A52               	clrf	__pbssCOMRAM& (0+255),c
   211   000FEA                     end_of_initialization:
   212                           	callstack 0
   213   000FEA                     __end_of__initialization:
   214                           	callstack 0
   215   000FEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216   000FEC  6EF8               	movwf	tblptru,c
   217   000FEE  0100               	movlb	0
   218   000FF0  EF07  F004         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221   000052                     __pbssCOMRAM:
   222                           	callstack 0
   223   000052                     __displaymode:
   224                           	callstack 0
   225   000052                     	ds	1
   226   000053                     __displaycontrol:
   227                           	callstack 0
   228   000053                     	ds	1
   229   000054                     _LCD_data:
   230                           	callstack 0
   231   000054                     	ds	1
   232                           
   233                           	psect	dataCOMRAM
   234   000001                     __pdataCOMRAM:
   235                           	callstack 0
   236   000001                     _msg2:
   237                           	callstack 0
   238   000001                     	ds	12
   239   00000D                     _msg1:
   240                           	callstack 0
   241   00000D                     	ds	11
   242   000018                     _msg5:
   243                           	callstack 0
   244   000018                     	ds	6
   245   00001E                     _msg4:
   246                           	callstack 0
   247   00001E                     	ds	5
   248   000023                     _displaybf:
   249                           	callstack 0
   250   000023                     	ds	4
   251   000027                     _cont:
   252                           	callstack 0
   253   000027                     	ds	1
   254   000028                     _msg3:
   255                           	callstack 0
   256   000028                     	ds	9
   257   000031                     _C3:
   258                           	callstack 0
   259   000031                     	ds	7
   260   000038                     _C2:
   261                           	callstack 0
   262   000038                     	ds	7
   263   00003F                     _C1:
   264                           	callstack 0
   265   00003F                     	ds	7
   266                           
   267                           	psect	cstackCOMRAM
   268   000046                     __pcstackCOMRAM:
   269                           	callstack 0
   270   000046                     LCD_Write@mode:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x0
   274   000046                     	ds	1
   275   000047                     LCD_Write@value:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x1
   279   000047                     	ds	1
   280   000048                     ??_LCD_Init:
   281   000048                     LCD_Text@pt:
   282                           	callstack 0
   283   000048                     LCD_CustomChar@pt:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x2
   287   000048                     	ds	2
   288   00004A                     LCD_Text@text:
   289                           	callstack 0
   290   00004A                     LCD_CustomChar@c:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x4
   294   00004A                     	ds	2
   295   00004C                     LCD_CustomChar@i:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x6
   299   00004C                     	ds	1
   300   00004D                     ??_main:
   301                           
   302                           ; 1 bytes @ 0x7
   303   00004D                     	ds	2
   304   00004F                     main@valid:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x9
   308   00004F                     	ds	1
   309   000050                     main@j:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xA
   313   000050                     	ds	1
   314   000051                     main@i:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xB
   318   000051                     	ds	1
   319                           
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 34 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  i               1   11[COMRAM] unsigned char 
   330 ;;  j               1   10[COMRAM] unsigned char 
   331 ;;  valid           1    9[COMRAM] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         3       0       0       0       0       0       0       0       0
   343 ;;      Temps:          2       0       0       0       0       0       0       0       0
   344 ;;      Totals:         5       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        5 bytes
   346 ;; Hardware stack levels required when called: 2
   347 ;; This function calls:
   348 ;;		_LCD_Busy
   349 ;;		_LCD_CustomChar
   350 ;;		_LCD_Init
   351 ;;		_LCD_Text
   352 ;;		_LCD_Write
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text0
   359   00080E                     __ptext0:
   360                           	callstack 0
   361   00080E                     _main:
   362                           	callstack 29
   363   00080E                     
   364                           ;main.c: 36:     LCD_Init();
   365   00080E  EC63  F006         	call	_LCD_Init	;wreg free
   366   000812                     l1373:
   367   000812  EC72  F007         	call	_LCD_Busy	;wreg free
   368   000816  0900               	iorlw	0
   369   000818  A4D8               	btfss	status,2,c
   370   00081A  EF11  F004         	goto	u981
   371   00081E  EF13  F004         	goto	u980
   372   000822                     u981:
   373   000822  EF09  F004         	goto	l1373
   374   000826                     u980:
   375   000826  9689               	bcf	137,3,c	;volatile
   376   000828  0E01               	movlw	1
   377   00082A  6E46               	movwf	LCD_Write@mode^0,c
   378   00082C  0E48               	movlw	72
   379   00082E  EC39  F007         	call	_LCD_Write
   380   000832  0E3F               	movlw	low _C1
   381   000834  6E48               	movwf	LCD_CustomChar@pt^0,c
   382   000836  0E00               	movlw	high _C1
   383   000838  6E49               	movwf	(LCD_CustomChar@pt+1)^0,c
   384   00083A  EC99  F007         	call	_LCD_CustomChar	;wreg free
   385   00083E                     l1379:
   386   00083E  EC72  F007         	call	_LCD_Busy	;wreg free
   387   000842  0900               	iorlw	0
   388   000844  A4D8               	btfss	status,2,c
   389   000846  EF27  F004         	goto	u991
   390   00084A  EF29  F004         	goto	u990
   391   00084E                     u991:
   392   00084E  EF1F  F004         	goto	l1379
   393   000852                     u990:
   394   000852  9689               	bcf	137,3,c	;volatile
   395   000854  0E01               	movlw	1
   396   000856  6E46               	movwf	LCD_Write@mode^0,c
   397   000858  0E50               	movlw	80
   398   00085A  EC39  F007         	call	_LCD_Write
   399   00085E  0E38               	movlw	low _C2
   400   000860  6E48               	movwf	LCD_CustomChar@pt^0,c
   401   000862  0E00               	movlw	high _C2
   402   000864  6E49               	movwf	(LCD_CustomChar@pt+1)^0,c
   403   000866  EC99  F007         	call	_LCD_CustomChar	;wreg free
   404   00086A                     l1385:
   405   00086A  EC72  F007         	call	_LCD_Busy	;wreg free
   406   00086E  0900               	iorlw	0
   407   000870  A4D8               	btfss	status,2,c
   408   000872  EF3D  F004         	goto	u1001
   409   000876  EF3F  F004         	goto	u1000
   410   00087A                     u1001:
   411   00087A  EF35  F004         	goto	l1385
   412   00087E                     u1000:
   413   00087E  9689               	bcf	137,3,c	;volatile
   414   000880  0E01               	movlw	1
   415   000882  6E46               	movwf	LCD_Write@mode^0,c
   416   000884  0E58               	movlw	88
   417   000886  EC39  F007         	call	_LCD_Write
   418   00088A  0E31               	movlw	low _C3
   419   00088C  6E48               	movwf	LCD_CustomChar@pt^0,c
   420   00088E  0E00               	movlw	high _C3
   421   000890  6E49               	movwf	(LCD_CustomChar@pt+1)^0,c
   422   000892  EC99  F007         	call	_LCD_CustomChar	;wreg free
   423   000896                     l1391:
   424   000896  EC72  F007         	call	_LCD_Busy	;wreg free
   425   00089A  0900               	iorlw	0
   426   00089C  A4D8               	btfss	status,2,c
   427   00089E  EF53  F004         	goto	u1011
   428   0008A2  EF55  F004         	goto	u1010
   429   0008A6                     u1011:
   430   0008A6  EF4B  F004         	goto	l1391
   431   0008AA                     u1010:
   432   0008AA  9689               	bcf	137,3,c	;volatile
   433   0008AC  0E01               	movlw	1
   434   0008AE  6E46               	movwf	LCD_Write@mode^0,c
   435   0008B0  0E80               	movlw	128
   436   0008B2  EC39  F007         	call	_LCD_Write
   437   0008B6                     
   438                           ;main.c: 46:     LCD_Text("Testeo....");
   439   0008B6  0E01               	movlw	low STR_1
   440   0008B8  6E48               	movwf	LCD_Text@pt^0,c
   441   0008BA  0E08               	movlw	high STR_1
   442   0008BC  6E49               	movwf	(LCD_Text@pt+1)^0,c
   443   0008BE  ECF9  F006         	call	_LCD_Text	;wreg free
   444   0008C2                     l1397:
   445   0008C2  EC72  F007         	call	_LCD_Busy	;wreg free
   446   0008C6  0900               	iorlw	0
   447   0008C8  A4D8               	btfss	status,2,c
   448   0008CA  EF69  F004         	goto	u1021
   449   0008CE  EF6B  F004         	goto	u1020
   450   0008D2                     u1021:
   451   0008D2  EF61  F004         	goto	l1397
   452   0008D6                     u1020:
   453   0008D6  8689               	bsf	137,3,c	;volatile
   454   0008D8  0E01               	movlw	1
   455   0008DA  6E46               	movwf	LCD_Write@mode^0,c
   456   0008DC  0E08               	movlw	8
   457   0008DE  EC39  F007         	call	_LCD_Write
   458   0008E2                     
   459                           ;main.c: 49:     _displaycontrol |= 0x02; while(LCD_Busy()); LATAbits.LATA3 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   460   0008E2  8253               	bsf	__displaycontrol^0,1,c
   461   0008E4                     l1403:
   462   0008E4  EC72  F007         	call	_LCD_Busy	;wreg free
   463   0008E8  0900               	iorlw	0
   464   0008EA  A4D8               	btfss	status,2,c
   465   0008EC  EF7A  F004         	goto	u1031
   466   0008F0  EF7C  F004         	goto	u1030
   467   0008F4                     u1031:
   468   0008F4  EF72  F004         	goto	l1403
   469   0008F8                     u1030:
   470   0008F8  9689               	bcf	137,3,c	;volatile
   471   0008FA  0E01               	movlw	1
   472   0008FC  6E46               	movwf	LCD_Write@mode^0,c
   473   0008FE  5053               	movf	__displaycontrol^0,w,c
   474   000900  0908               	iorlw	8
   475   000902  EC39  F007         	call	_LCD_Write
   476   000906                     
   477                           ;main.c: 50:     _displaycontrol |= 0x01; while(LCD_Busy()); LATAbits.LATA3 = 0; LCD_Wri
      +                          te((unsigned)0x08 | _displaycontrol,1);
   478   000906  8053               	bsf	__displaycontrol^0,0,c
   479   000908                     l1409:
   480   000908  EC72  F007         	call	_LCD_Busy	;wreg free
   481   00090C  0900               	iorlw	0
   482   00090E  A4D8               	btfss	status,2,c
   483   000910  EF8C  F004         	goto	u1041
   484   000914  EF8E  F004         	goto	u1040
   485   000918                     u1041:
   486   000918  EF84  F004         	goto	l1409
   487   00091C                     u1040:
   488   00091C  9689               	bcf	137,3,c	;volatile
   489   00091E  0E01               	movlw	1
   490   000920  6E46               	movwf	LCD_Write@mode^0,c
   491   000922  5053               	movf	__displaycontrol^0,w,c
   492   000924  0908               	iorlw	8
   493   000926  EC39  F007         	call	_LCD_Write
   494   00092A                     l1413:
   495                           
   496                           ;main.c: 55:         for (j = 0; j < 4; j++) {
   497   00092A  0E00               	movlw	0
   498   00092C  6E50               	movwf	main@j^0,c
   499   00092E                     l1419:
   500   00092E  EC72  F007         	call	_LCD_Busy	;wreg free
   501   000932  0900               	iorlw	0
   502   000934  A4D8               	btfss	status,2,c
   503   000936  EF9F  F004         	goto	u1051
   504   00093A  EFA1  F004         	goto	u1050
   505   00093E                     u1051:
   506   00093E  EF97  F004         	goto	l1419
   507   000942                     u1050:
   508   000942  9689               	bcf	137,3,c	;volatile
   509   000944  0E01               	movlw	1
   510   000946  6E46               	movwf	LCD_Write@mode^0,c
   511   000948  0EC0               	movlw	192
   512   00094A  EC39  F007         	call	_LCD_Write
   513   00094E                     
   514                           ;main.c: 57:             _displaycontrol |= 0x01; while(LCD_Busy()); LATAbits.LATA3 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   515   00094E  8053               	bsf	__displaycontrol^0,0,c
   516   000950                     l1425:
   517   000950  EC72  F007         	call	_LCD_Busy	;wreg free
   518   000954  0900               	iorlw	0
   519   000956  A4D8               	btfss	status,2,c
   520   000958  EFB0  F004         	goto	u1061
   521   00095C  EFB2  F004         	goto	u1060
   522   000960                     u1061:
   523   000960  EFA8  F004         	goto	l1425
   524   000964                     u1060:
   525   000964  9689               	bcf	137,3,c	;volatile
   526   000966  0E01               	movlw	1
   527   000968  6E46               	movwf	LCD_Write@mode^0,c
   528   00096A  5053               	movf	__displaycontrol^0,w,c
   529   00096C  0908               	iorlw	8
   530   00096E  EC39  F007         	call	_LCD_Write
   531   000972                     
   532                           ;main.c: 58:             _delay((unsigned long)((1500)*(1000000/4000.0)));
   533   000972  0E02               	movlw	2
   534   000974  6E4E               	movwf	(??_main+1)^0,c
   535   000976  0EE7               	movlw	231
   536   000978  6E4D               	movwf	??_main^0,c
   537   00097A  0E00               	movlw	0
   538   00097C                     u1367:
   539   00097C  2EE8               	decfsz	wreg,f,c
   540   00097E  D7FE               	bra	u1367
   541   000980  2E4D               	decfsz	??_main^0,f,c
   542   000982  D7FC               	bra	u1367
   543   000984  2E4E               	decfsz	(??_main+1)^0,f,c
   544   000986  D7FA               	bra	u1367
   545   000988  D000               	nop2	
   546   00098A                     
   547                           ;main.c: 59:             _displaymode |= 0x02;; while(LCD_Busy()); LATAbits.LATA3 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   548   00098A  8252               	bsf	__displaymode^0,1,c
   549   00098C                     l1433:
   550   00098C  EC72  F007         	call	_LCD_Busy	;wreg free
   551   000990  0900               	iorlw	0
   552   000992  A4D8               	btfss	status,2,c
   553   000994  EFCE  F004         	goto	u1071
   554   000998  EFD0  F004         	goto	u1070
   555   00099C                     u1071:
   556   00099C  EFC6  F004         	goto	l1433
   557   0009A0                     u1070:
   558   0009A0  9689               	bcf	137,3,c	;volatile
   559   0009A2  0E01               	movlw	1
   560   0009A4  6E46               	movwf	LCD_Write@mode^0,c
   561   0009A6  5052               	movf	__displaymode^0,w,c
   562   0009A8  0904               	iorlw	4
   563   0009AA  EC39  F007         	call	_LCD_Write
   564   0009AE                     
   565                           ;main.c: 60:             i = 0;
   566   0009AE  0E00               	movlw	0
   567   0009B0  6E51               	movwf	main@i^0,c
   568   0009B2                     
   569                           ;main.c: 61:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATAbits.LATA3 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   570   0009B2  9053               	bcf	__displaycontrol^0,0,c
   571   0009B4                     l1441:
   572   0009B4  EC72  F007         	call	_LCD_Busy	;wreg free
   573   0009B8  0900               	iorlw	0
   574   0009BA  A4D8               	btfss	status,2,c
   575   0009BC  EFE2  F004         	goto	u1081
   576   0009C0  EFE4  F004         	goto	u1080
   577   0009C4                     u1081:
   578   0009C4  EFDA  F004         	goto	l1441
   579   0009C8                     u1080:
   580   0009C8  9689               	bcf	137,3,c	;volatile
   581   0009CA  0E01               	movlw	1
   582   0009CC  6E46               	movwf	LCD_Write@mode^0,c
   583   0009CE  5053               	movf	__displaycontrol^0,w,c
   584   0009D0  0908               	iorlw	8
   585   0009D2  EC39  F007         	call	_LCD_Write
   586   0009D6  EF79  F005         	goto	l1471
   587   0009DA                     l1445:
   588                           
   589                           ;main.c: 65:                         valid = i < (sizeof (msg1) - 2);
   590   0009DA  0E08               	movlw	8
   591   0009DC  6451               	cpfsgt	main@i^0,c
   592   0009DE  EFF3  F004         	goto	u1091
   593   0009E2  EFF6  F004         	goto	u1090
   594   0009E6                     u1091:
   595   0009E6  0E01               	movlw	1
   596   0009E8  EFF7  F004         	goto	u1100
   597   0009EC                     u1090:
   598   0009EC  0E00               	movlw	0
   599   0009EE                     u1100:
   600   0009EE  6E4F               	movwf	main@valid^0,c
   601   0009F0                     l1447:
   602   0009F0  EC72  F007         	call	_LCD_Busy	;wreg free
   603   0009F4  0900               	iorlw	0
   604   0009F6  A4D8               	btfss	status,2,c
   605   0009F8  EF00  F005         	goto	u1111
   606   0009FC  EF02  F005         	goto	u1110
   607   000A00                     u1111:
   608   000A00  EFF8  F004         	goto	l1447
   609   000A04                     u1110:
   610   000A04  8689               	bsf	137,3,c	;volatile
   611   000A06  0E01               	movlw	1
   612   000A08  6E46               	movwf	LCD_Write@mode^0,c
   613   000A0A  0E0D               	movlw	low _msg1
   614   000A0C  2451               	addwf	main@i^0,w,c
   615   000A0E  6ED9               	movwf	fsr2l,c
   616   000A10  6ADA               	clrf	fsr2h,c
   617   000A12  0E00               	movlw	high _msg1
   618   000A14  22DA               	addwfc	fsr2h,f,c
   619   000A16  50DF               	movf	indf2,w,c
   620   000A18  EC39  F007         	call	_LCD_Write
   621                           
   622                           ;main.c: 67:                         break;
   623   000A1C  EF92  F005         	goto	l1473
   624   000A20                     l1451:
   625                           
   626                           ;main.c: 69:                         valid = i < (sizeof (msg2) - 2);
   627   000A20  0E09               	movlw	9
   628   000A22  6451               	cpfsgt	main@i^0,c
   629   000A24  EF16  F005         	goto	u1121
   630   000A28  EF19  F005         	goto	u1120
   631   000A2C                     u1121:
   632   000A2C  0E01               	movlw	1
   633   000A2E  EF1A  F005         	goto	u1130
   634   000A32                     u1120:
   635   000A32  0E00               	movlw	0
   636   000A34                     u1130:
   637   000A34  6E4F               	movwf	main@valid^0,c
   638   000A36                     l1453:
   639   000A36  EC72  F007         	call	_LCD_Busy	;wreg free
   640   000A3A  0900               	iorlw	0
   641   000A3C  A4D8               	btfss	status,2,c
   642   000A3E  EF23  F005         	goto	u1141
   643   000A42  EF25  F005         	goto	u1140
   644   000A46                     u1141:
   645   000A46  EF1B  F005         	goto	l1453
   646   000A4A                     u1140:
   647   000A4A  8689               	bsf	137,3,c	;volatile
   648   000A4C  0E01               	movlw	1
   649   000A4E  6E46               	movwf	LCD_Write@mode^0,c
   650   000A50  0E01               	movlw	low _msg2
   651   000A52  2451               	addwf	main@i^0,w,c
   652   000A54  6ED9               	movwf	fsr2l,c
   653   000A56  6ADA               	clrf	fsr2h,c
   654   000A58  0E00               	movlw	high _msg2
   655   000A5A  22DA               	addwfc	fsr2h,f,c
   656   000A5C  50DF               	movf	indf2,w,c
   657   000A5E  EC39  F007         	call	_LCD_Write
   658                           
   659                           ;main.c: 71:                         break;
   660   000A62  EF92  F005         	goto	l1473
   661   000A66                     l1457:
   662                           
   663                           ;main.c: 73:                         valid = i < (sizeof (msg3) - 1);
   664   000A66  0E07               	movlw	7
   665   000A68  6451               	cpfsgt	main@i^0,c
   666   000A6A  EF39  F005         	goto	u1151
   667   000A6E  EF3C  F005         	goto	u1150
   668   000A72                     u1151:
   669   000A72  0E01               	movlw	1
   670   000A74  EF3D  F005         	goto	u1160
   671   000A78                     u1150:
   672   000A78  0E00               	movlw	0
   673   000A7A                     u1160:
   674   000A7A  6E4F               	movwf	main@valid^0,c
   675   000A7C                     l1459:
   676   000A7C  EC72  F007         	call	_LCD_Busy	;wreg free
   677   000A80  0900               	iorlw	0
   678   000A82  A4D8               	btfss	status,2,c
   679   000A84  EF46  F005         	goto	u1171
   680   000A88  EF48  F005         	goto	u1170
   681   000A8C                     u1171:
   682   000A8C  EF3E  F005         	goto	l1459
   683   000A90                     u1170:
   684   000A90  8689               	bsf	137,3,c	;volatile
   685   000A92  0E01               	movlw	1
   686   000A94  6E46               	movwf	LCD_Write@mode^0,c
   687   000A96  0E28               	movlw	low _msg3
   688   000A98  2451               	addwf	main@i^0,w,c
   689   000A9A  6ED9               	movwf	fsr2l,c
   690   000A9C  6ADA               	clrf	fsr2h,c
   691   000A9E  0E00               	movlw	high _msg3
   692   000AA0  22DA               	addwfc	fsr2h,f,c
   693   000AA2  50DF               	movf	indf2,w,c
   694   000AA4  EC39  F007         	call	_LCD_Write
   695                           
   696                           ;main.c: 75:                         break;
   697   000AA8  EF92  F005         	goto	l1473
   698   000AAC                     l1463:
   699                           
   700                           ;main.c: 77:                         valid = i < (sizeof (msg4) - 1);
   701   000AAC  0E03               	movlw	3
   702   000AAE  6451               	cpfsgt	main@i^0,c
   703   000AB0  EF5C  F005         	goto	u1181
   704   000AB4  EF5F  F005         	goto	u1180
   705   000AB8                     u1181:
   706   000AB8  0E01               	movlw	1
   707   000ABA  EF60  F005         	goto	u1190
   708   000ABE                     u1180:
   709   000ABE  0E00               	movlw	0
   710   000AC0                     u1190:
   711   000AC0  6E4F               	movwf	main@valid^0,c
   712   000AC2                     l1465:
   713   000AC2  EC72  F007         	call	_LCD_Busy	;wreg free
   714   000AC6  0900               	iorlw	0
   715   000AC8  A4D8               	btfss	status,2,c
   716   000ACA  EF69  F005         	goto	u1201
   717   000ACE  EF6B  F005         	goto	u1200
   718   000AD2                     u1201:
   719   000AD2  EF61  F005         	goto	l1465
   720   000AD6                     u1200:
   721   000AD6  8689               	bsf	137,3,c	;volatile
   722   000AD8  0E01               	movlw	1
   723   000ADA  6E46               	movwf	LCD_Write@mode^0,c
   724   000ADC  0E1E               	movlw	low _msg4
   725   000ADE  2451               	addwf	main@i^0,w,c
   726   000AE0  6ED9               	movwf	fsr2l,c
   727   000AE2  6ADA               	clrf	fsr2h,c
   728   000AE4  0E00               	movlw	high _msg4
   729   000AE6  22DA               	addwfc	fsr2h,f,c
   730   000AE8  50DF               	movf	indf2,w,c
   731   000AEA  EC39  F007         	call	_LCD_Write
   732                           
   733                           ;main.c: 79:                         break;
   734   000AEE  EF92  F005         	goto	l1473
   735   000AF2                     l1471:
   736   000AF2  5050               	movf	main@j^0,w,c
   737   000AF4  6E4D               	movwf	??_main^0,c
   738   000AF6  6A4E               	clrf	(??_main+1)^0,c
   739                           
   740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   741                           ; Switch size 1, requested type "simple"
   742                           ; Number of cases is 1, Range of values is 0 to 0
   743                           ; switch strategies available:
   744                           ; Name         Instructions Cycles
   745                           ; simple_byte            4     3 (average)
   746                           ;	Chosen strategy is simple_byte
   747   000AF8  504E               	movf	(??_main+1)^0,w,c
   748   000AFA  0A00               	xorlw	0	; case 0
   749   000AFC  B4D8               	btfsc	status,2,c
   750   000AFE  EF83  F005         	goto	l1547
   751   000B02  EF56  F005         	goto	l1463
   752   000B06                     l1547:
   753                           
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 3, Range of values is 0 to 2
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte           10     6 (average)
   759                           ;	Chosen strategy is simple_byte
   760   000B06  504D               	movf	??_main^0,w,c
   761   000B08  0A00               	xorlw	0	; case 0
   762   000B0A  B4D8               	btfsc	status,2,c
   763   000B0C  EFED  F004         	goto	l1445
   764   000B10  0A01               	xorlw	1	; case 1
   765   000B12  B4D8               	btfsc	status,2,c
   766   000B14  EF10  F005         	goto	l1451
   767   000B18  0A03               	xorlw	3	; case 2
   768   000B1A  B4D8               	btfsc	status,2,c
   769   000B1C  EF33  F005         	goto	l1457
   770   000B20  EF56  F005         	goto	l1463
   771   000B24                     l1473:
   772                           
   773                           ;main.c: 81:                 i++;
   774   000B24  2A51               	incf	main@i^0,f,c
   775   000B26                     
   776                           ;main.c: 82:                 _delay((unsigned long)((150)*(1000000/4000.0)));
   777   000B26  0E31               	movlw	49
   778   000B28  6E4D               	movwf	??_main^0,c
   779   000B2A  0EB2               	movlw	178
   780   000B2C                     u1377:
   781   000B2C  2EE8               	decfsz	wreg,f,c
   782   000B2E  D7FE               	bra	u1377
   783   000B30  2E4D               	decfsz	??_main^0,f,c
   784   000B32  D7FC               	bra	u1377
   785   000B34  D000               	nop2	
   786   000B36                     
   787                           ;main.c: 83:             } while (valid);
   788   000B36  504F               	movf	main@valid^0,w,c
   789   000B38  A4D8               	btfss	status,2,c
   790   000B3A  EFA1  F005         	goto	u1211
   791   000B3E  EFA3  F005         	goto	u1210
   792   000B42                     u1211:
   793   000B42  EF79  F005         	goto	l1471
   794   000B46                     u1210:
   795   000B46                     
   796                           ;main.c: 84:             _displaycontrol |= 0x01; while(LCD_Busy()); LATAbits.LATA3 = 0;
      +                           LCD_Write((unsigned)0x08 | _displaycontrol,1);
   797   000B46  8053               	bsf	__displaycontrol^0,0,c
   798   000B48                     l1481:
   799   000B48  EC72  F007         	call	_LCD_Busy	;wreg free
   800   000B4C  0900               	iorlw	0
   801   000B4E  A4D8               	btfss	status,2,c
   802   000B50  EFAC  F005         	goto	u1221
   803   000B54  EFAE  F005         	goto	u1220
   804   000B58                     u1221:
   805   000B58  EFA4  F005         	goto	l1481
   806   000B5C                     u1220:
   807   000B5C  9689               	bcf	137,3,c	;volatile
   808   000B5E  0E01               	movlw	1
   809   000B60  6E46               	movwf	LCD_Write@mode^0,c
   810   000B62  5053               	movf	__displaycontrol^0,w,c
   811   000B64  0908               	iorlw	8
   812   000B66  EC39  F007         	call	_LCD_Write
   813   000B6A                     
   814                           ;main.c: 85:             _delay((unsigned long)((1000)*(1000000/4000.0)));
   815   000B6A  0E02               	movlw	2
   816   000B6C  6E4E               	movwf	(??_main+1)^0,c
   817   000B6E  0E45               	movlw	69
   818   000B70  6E4D               	movwf	??_main^0,c
   819   000B72  0EAA               	movlw	170
   820   000B74                     u1387:
   821   000B74  2EE8               	decfsz	wreg,f,c
   822   000B76  D7FE               	bra	u1387
   823   000B78  2E4D               	decfsz	??_main^0,f,c
   824   000B7A  D7FC               	bra	u1387
   825   000B7C  2E4E               	decfsz	(??_main+1)^0,f,c
   826   000B7E  D7FA               	bra	u1387
   827   000B80                     
   828                           ;main.c: 86:             _displaymode &= ~0x02; while(LCD_Busy()); LATAbits.LATA3 = 0; L
      +                          CD_Write((unsigned)0x04 | _displaymode,1);
   829   000B80  9252               	bcf	__displaymode^0,1,c
   830   000B82                     l1489:
   831   000B82  EC72  F007         	call	_LCD_Busy	;wreg free
   832   000B86  0900               	iorlw	0
   833   000B88  A4D8               	btfss	status,2,c
   834   000B8A  EFC9  F005         	goto	u1231
   835   000B8E  EFCB  F005         	goto	u1230
   836   000B92                     u1231:
   837   000B92  EFC1  F005         	goto	l1489
   838   000B96                     u1230:
   839   000B96  9689               	bcf	137,3,c	;volatile
   840   000B98  0E01               	movlw	1
   841   000B9A  6E46               	movwf	LCD_Write@mode^0,c
   842   000B9C  5052               	movf	__displaymode^0,w,c
   843   000B9E  0904               	iorlw	4
   844   000BA0  EC39  F007         	call	_LCD_Write
   845   000BA4                     
   846                           ;main.c: 87:             i = 0;
   847   000BA4  0E00               	movlw	0
   848   000BA6  6E51               	movwf	main@i^0,c
   849   000BA8                     
   850                           ;main.c: 88:             _displaycontrol &= ~0x01; while(LCD_Busy()); LATAbits.LATA3 = 0
      +                          ; LCD_Write((unsigned)0x08 | _displaycontrol,1);
   851   000BA8  9053               	bcf	__displaycontrol^0,0,c
   852   000BAA                     l1497:
   853   000BAA  EC72  F007         	call	_LCD_Busy	;wreg free
   854   000BAE  0900               	iorlw	0
   855   000BB0  A4D8               	btfss	status,2,c
   856   000BB2  EFDD  F005         	goto	u1241
   857   000BB6  EFDF  F005         	goto	u1240
   858   000BBA                     u1241:
   859   000BBA  EFD5  F005         	goto	l1497
   860   000BBE                     u1240:
   861   000BBE  9689               	bcf	137,3,c	;volatile
   862   000BC0  0E01               	movlw	1
   863   000BC2  6E46               	movwf	LCD_Write@mode^0,c
   864   000BC4  5053               	movf	__displaycontrol^0,w,c
   865   000BC6  0908               	iorlw	8
   866   000BC8  EC39  F007         	call	_LCD_Write
   867   000BCC  EF1C  F006         	goto	l1511
   868   000BD0                     l1501:
   869                           
   870                           ;main.c: 92:                         valid = i < (sizeof (msg1));
   871   000BD0  0E0A               	movlw	10
   872   000BD2  6451               	cpfsgt	main@i^0,c
   873   000BD4  EFEE  F005         	goto	u1251
   874   000BD8  EFF1  F005         	goto	u1250
   875   000BDC                     u1251:
   876   000BDC  0E01               	movlw	1
   877   000BDE  EFF2  F005         	goto	u1260
   878   000BE2                     u1250:
   879   000BE2  0E00               	movlw	0
   880   000BE4                     u1260:
   881   000BE4  6E4F               	movwf	main@valid^0,c
   882                           
   883                           ;main.c: 93:                         break;
   884   000BE6  EF35  F006         	goto	l1513
   885   000BEA                     l1503:
   886                           
   887                           ;main.c: 95:                         valid = i < (sizeof (msg2));
   888   000BEA  0E0B               	movlw	11
   889   000BEC  6451               	cpfsgt	main@i^0,c
   890   000BEE  EFFB  F005         	goto	u1271
   891   000BF2  EFFE  F005         	goto	u1270
   892   000BF6                     u1271:
   893   000BF6  0E01               	movlw	1
   894   000BF8  EFFF  F005         	goto	u1280
   895   000BFC                     u1270:
   896   000BFC  0E00               	movlw	0
   897   000BFE                     u1280:
   898   000BFE  6E4F               	movwf	main@valid^0,c
   899                           
   900                           ;main.c: 96:                         break;
   901   000C00  EF35  F006         	goto	l1513
   902   000C04                     l1505:
   903                           
   904                           ;main.c: 98:                         valid = i < (sizeof (msg3));
   905   000C04  0E08               	movlw	8
   906   000C06  6451               	cpfsgt	main@i^0,c
   907   000C08  EF08  F006         	goto	u1291
   908   000C0C  EF0B  F006         	goto	u1290
   909   000C10                     u1291:
   910   000C10  0E01               	movlw	1
   911   000C12  EF0C  F006         	goto	u1300
   912   000C16                     u1290:
   913   000C16  0E00               	movlw	0
   914   000C18                     u1300:
   915   000C18  6E4F               	movwf	main@valid^0,c
   916                           
   917                           ;main.c: 99:                         break;
   918   000C1A  EF35  F006         	goto	l1513
   919   000C1E                     l1507:
   920                           
   921                           ;main.c: 101:                         valid = i < (sizeof (msg4));
   922   000C1E  0E04               	movlw	4
   923   000C20  6451               	cpfsgt	main@i^0,c
   924   000C22  EF15  F006         	goto	u1311
   925   000C26  EF18  F006         	goto	u1310
   926   000C2A                     u1311:
   927   000C2A  0E01               	movlw	1
   928   000C2C  EF19  F006         	goto	u1320
   929   000C30                     u1310:
   930   000C30  0E00               	movlw	0
   931   000C32                     u1320:
   932   000C32  6E4F               	movwf	main@valid^0,c
   933                           
   934                           ;main.c: 102:                         break;
   935   000C34  EF35  F006         	goto	l1513
   936   000C38                     l1511:
   937   000C38  5050               	movf	main@j^0,w,c
   938   000C3A  6E4D               	movwf	??_main^0,c
   939   000C3C  6A4E               	clrf	(??_main+1)^0,c
   940                           
   941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   942                           ; Switch size 1, requested type "simple"
   943                           ; Number of cases is 1, Range of values is 0 to 0
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte            4     3 (average)
   947                           ;	Chosen strategy is simple_byte
   948   000C3E  504E               	movf	(??_main+1)^0,w,c
   949   000C40  0A00               	xorlw	0	; case 0
   950   000C42  B4D8               	btfsc	status,2,c
   951   000C44  EF26  F006         	goto	l1549
   952   000C48  EF0F  F006         	goto	l1507
   953   000C4C                     l1549:
   954                           
   955                           ; Switch size 1, requested type "simple"
   956                           ; Number of cases is 3, Range of values is 0 to 2
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte           10     6 (average)
   960                           ;	Chosen strategy is simple_byte
   961   000C4C  504D               	movf	??_main^0,w,c
   962   000C4E  0A00               	xorlw	0	; case 0
   963   000C50  B4D8               	btfsc	status,2,c
   964   000C52  EFE8  F005         	goto	l1501
   965   000C56  0A01               	xorlw	1	; case 1
   966   000C58  B4D8               	btfsc	status,2,c
   967   000C5A  EFF5  F005         	goto	l1503
   968   000C5E  0A03               	xorlw	3	; case 2
   969   000C60  B4D8               	btfsc	status,2,c
   970   000C62  EF02  F006         	goto	l1505
   971   000C66  EF0F  F006         	goto	l1507
   972   000C6A                     l1513:
   973   000C6A  EC72  F007         	call	_LCD_Busy	;wreg free
   974   000C6E  0900               	iorlw	0
   975   000C70  A4D8               	btfss	status,2,c
   976   000C72  EF3D  F006         	goto	u1331
   977   000C76  EF3F  F006         	goto	u1330
   978   000C7A                     u1331:
   979   000C7A  EF35  F006         	goto	l1513
   980   000C7E                     u1330:
   981   000C7E  8689               	bsf	137,3,c	;volatile
   982   000C80  0E01               	movlw	1
   983   000C82  6E46               	movwf	LCD_Write@mode^0,c
   984   000C84  0E20               	movlw	32
   985   000C86  EC39  F007         	call	_LCD_Write
   986   000C8A                     
   987                           ;main.c: 105:                 i++;
   988   000C8A  2A51               	incf	main@i^0,f,c
   989   000C8C                     
   990                           ;main.c: 106:                 _delay((unsigned long)((50)*(1000000/4000.0)));
   991   000C8C  0E11               	movlw	17
   992   000C8E  6E4D               	movwf	??_main^0,c
   993   000C90  0E3A               	movlw	58
   994   000C92                     u1397:
   995   000C92  2EE8               	decfsz	wreg,f,c
   996   000C94  D7FE               	bra	u1397
   997   000C96  2E4D               	decfsz	??_main^0,f,c
   998   000C98  D7FC               	bra	u1397
   999   000C9A  D000               	nop2	
  1000   000C9C                     
  1001                           ;main.c: 107:             } while (valid);
  1002   000C9C  504F               	movf	main@valid^0,w,c
  1003   000C9E  A4D8               	btfss	status,2,c
  1004   000CA0  EF54  F006         	goto	u1341
  1005   000CA4  EF56  F006         	goto	u1340
  1006   000CA8                     u1341:
  1007   000CA8  EF1C  F006         	goto	l1511
  1008   000CAC                     u1340:
  1009   000CAC                     
  1010                           ;main.c: 108:         }
  1011   000CAC  2A50               	incf	main@j^0,f,c
  1012   000CAE  0E03               	movlw	3
  1013   000CB0  6450               	cpfsgt	main@j^0,c
  1014   000CB2  EF5D  F006         	goto	u1351
  1015   000CB6  EF5F  F006         	goto	u1350
  1016   000CBA                     u1351:
  1017   000CBA  EF97  F004         	goto	l1419
  1018   000CBE                     u1350:
  1019   000CBE  EF95  F004         	goto	l1413
  1020   000CC2  EF00  F000         	goto	start
  1021   000CC6                     __end_of_main:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _LCD_Text *****************
  1025 ;; Defined at:
  1026 ;;		line 731 in file "./LCD_16x2.h"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  pt              2    2[COMRAM] PTR void 
  1029 ;;		 -> msg3(9), STR_1(11), 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  text            2    4[COMRAM] PTR unsigned char 
  1032 ;;		 -> msg3(9), STR_1(11), 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         2       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        4 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 1
  1049 ;; This function calls:
  1050 ;;		_LCD_Busy
  1051 ;;		_LCD_Write
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text1
  1058   000DF2                     __ptext1:
  1059                           	callstack 0
  1060   000DF2                     _LCD_Text:
  1061                           	callstack 29
  1062   000DF2                     
  1063                           ;./LCD_16x2.h: 732:     unsigned char *text = pt;
  1064   000DF2  C048  F04A         	movff	LCD_Text@pt,LCD_Text@text
  1065   000DF6  C049  F04B         	movff	LCD_Text@pt+1,LCD_Text@text+1
  1066                           
  1067                           ;./LCD_16x2.h: 733:     while (*text) {
  1068   000DFA  EF20  F007         	goto	l1315
  1069   000DFE                     l1309:
  1070   000DFE  EC72  F007         	call	_LCD_Busy	;wreg free
  1071   000E02  0900               	iorlw	0
  1072   000E04  A4D8               	btfss	status,2,c
  1073   000E06  EF07  F007         	goto	u851
  1074   000E0A  EF09  F007         	goto	u850
  1075   000E0E                     u851:
  1076   000E0E  EFFF  F006         	goto	l1309
  1077   000E12                     u850:
  1078   000E12  8689               	bsf	137,3,c	;volatile
  1079   000E14  0E01               	movlw	1
  1080   000E16  6E46               	movwf	LCD_Write@mode^0,c
  1081   000E18  C04A  FFF6         	movff	LCD_Text@text,tblptrl
  1082   000E1C  C04B  FFF7         	movff	LCD_Text@text+1,tblptrh
  1083   000E20  6AF8               	clrf	tblptru,c
  1084   000E22  0E07               	movlw	(high __ramtop+-1)
  1085   000E24  64F7               	cpfsgt	tblptrh,c
  1086   000E26  D003               	bra	u867
  1087   000E28  0008               	tblrd		*
  1088   000E2A  50F5               	movf	tablat,w,c
  1089   000E2C  D005               	bra	u860
  1090   000E2E                     u867:
  1091   000E2E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1092   000E32  CFF7 FFEA          	movff	tblptrh,fsr0h
  1093   000E36  50EF               	movf	indf0,w,c
  1094   000E38                     u860:
  1095   000E38  EC39  F007         	call	_LCD_Write
  1096   000E3C                     
  1097                           ;./LCD_16x2.h: 735:         text++;
  1098   000E3C  4A4A               	infsnz	LCD_Text@text^0,f,c
  1099   000E3E  2A4B               	incf	(LCD_Text@text+1)^0,f,c
  1100   000E40                     l1315:
  1101                           
  1102                           ;./LCD_16x2.h: 733:     while (*text) {
  1103   000E40  C04A  FFF6         	movff	LCD_Text@text,tblptrl
  1104   000E44  C04B  FFF7         	movff	LCD_Text@text+1,tblptrh
  1105   000E48  6AF8               	clrf	tblptru,c
  1106   000E4A  0E07               	movlw	(high __ramtop+-1)
  1107   000E4C  64F7               	cpfsgt	tblptrh,c
  1108   000E4E  D003               	bra	u877
  1109   000E50  0008               	tblrd		*
  1110   000E52  50F5               	movf	tablat,w,c
  1111   000E54  D005               	bra	u870
  1112   000E56                     u877:
  1113   000E56  CFF6 FFE9          	movff	tblptrl,fsr0l
  1114   000E5A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1115   000E5E  50EF               	movf	indf0,w,c
  1116   000E60                     u870:
  1117   000E60  0900               	iorlw	0
  1118   000E62  A4D8               	btfss	status,2,c
  1119   000E64  EF36  F007         	goto	u881
  1120   000E68  EF38  F007         	goto	u880
  1121   000E6C                     u881:
  1122   000E6C  EFFF  F006         	goto	l1309
  1123   000E70                     u880:
  1124   000E70  0012               	return		;funcret
  1125   000E72                     __end_of_LCD_Text:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _LCD_Init *****************
  1129 ;; Defined at:
  1130 ;;		line 658 in file "./LCD_16x2.h"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1146 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1147 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1148 ;;Total ram usage:        1 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 1
  1151 ;; This function calls:
  1152 ;;		_LCD_Busy
  1153 ;;		_LCD_Write
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text2
  1160   000CC6                     __ptext2:
  1161                           	callstack 0
  1162   000CC6                     _LCD_Init:
  1163                           	callstack 29
  1164   000CC6                     
  1165                           ;./LCD_16x2.h: 660:     TRISAbits.TRISA1 = 0;
  1166   000CC6  9292               	bcf	146,1,c	;volatile
  1167                           
  1168                           ;./LCD_16x2.h: 661:     LATAbits.LATA1 = 0;
  1169   000CC8  9289               	bcf	137,1,c	;volatile
  1170                           
  1171                           ;./LCD_16x2.h: 663:     TRISAbits.TRISA3 = 0;
  1172   000CCA  9692               	bcf	146,3,c	;volatile
  1173                           
  1174                           ;./LCD_16x2.h: 664:     LATAbits.LATA3 = 0;
  1175   000CCC  9689               	bcf	137,3,c	;volatile
  1176                           
  1177                           ;./LCD_16x2.h: 665:     TRISAbits.TRISA2 = 0;
  1178   000CCE  9492               	bcf	146,2,c	;volatile
  1179                           
  1180                           ;./LCD_16x2.h: 666:     LATAbits.LATA2 = 0;
  1181   000CD0  9489               	bcf	137,2,c	;volatile
  1182   000CD2                     
  1183                           ;./LCD_16x2.h: 668:     TRISA &= 0x0F;
  1184   000CD2  0E0F               	movlw	15
  1185   000CD4  1692               	andwf	146,f,c	;volatile
  1186   000CD6                     
  1187                           ;./LCD_16x2.h: 670:     LCD_busy_cnt = 1;
  1188   000CD6  0E01               	movlw	1
  1189   000CD8  6E55               	movwf	_LCD_busy_cnt^0,c
  1190   000CDA                     
  1191                           ;./LCD_16x2.h: 672:     _delay((unsigned long)((15)*(1000000/4000.0)));
  1192   000CDA  0E05               	movlw	5
  1193   000CDC  6E48               	movwf	??_LCD_Init^0,c
  1194   000CDE  0EDE               	movlw	222
  1195   000CE0                     u1407:
  1196   000CE0  2EE8               	decfsz	wreg,f,c
  1197   000CE2  D7FE               	bra	u1407
  1198   000CE4  2E48               	decfsz	??_LCD_Init^0,f,c
  1199   000CE6  D7FC               	bra	u1407
  1200   000CE8                     
  1201                           ;./LCD_16x2.h: 674:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1202   000CE8  9689               	bcf	137,3,c	;volatile
  1203   000CEA  0E00               	movlw	0
  1204   000CEC  6E46               	movwf	LCD_Write@mode^0,c
  1205   000CEE  0E30               	movlw	48
  1206   000CF0  EC39  F007         	call	_LCD_Write
  1207   000CF4                     
  1208                           ;./LCD_16x2.h: 675:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1209   000CF4  0EFA               	movlw	250
  1210   000CF6                     u1417:
  1211   000CF6  D000               	nop2	
  1212   000CF8  2EE8               	decfsz	wreg,f,c
  1213   000CFA  D7FD               	bra	u1417
  1214   000CFC                     
  1215                           ;./LCD_16x2.h: 676:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1216   000CFC  9689               	bcf	137,3,c	;volatile
  1217   000CFE  0E00               	movlw	0
  1218   000D00  6E46               	movwf	LCD_Write@mode^0,c
  1219   000D02  0E30               	movlw	48
  1220   000D04  EC39  F007         	call	_LCD_Write
  1221   000D08                     
  1222                           ;./LCD_16x2.h: 677:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1223   000D08  0EFA               	movlw	250
  1224   000D0A                     u1427:
  1225   000D0A  D000               	nop2	
  1226   000D0C  2EE8               	decfsz	wreg,f,c
  1227   000D0E  D7FD               	bra	u1427
  1228   000D10                     
  1229                           ;./LCD_16x2.h: 678:     LATAbits.LATA3 = 0; LCD_Write(0x30,0);
  1230   000D10  9689               	bcf	137,3,c	;volatile
  1231   000D12  0E00               	movlw	0
  1232   000D14  6E46               	movwf	LCD_Write@mode^0,c
  1233   000D16  0E30               	movlw	48
  1234   000D18  EC39  F007         	call	_LCD_Write
  1235   000D1C                     
  1236                           ;./LCD_16x2.h: 679:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1237   000D1C  0EFA               	movlw	250
  1238   000D1E                     u1437:
  1239   000D1E  D000               	nop2	
  1240   000D20  2EE8               	decfsz	wreg,f,c
  1241   000D22  D7FD               	bra	u1437
  1242   000D24                     
  1243                           ;./LCD_16x2.h: 688:     LATAbits.LATA3 = 0; LCD_Write(0x20,0);
  1244   000D24  9689               	bcf	137,3,c	;volatile
  1245   000D26  0E00               	movlw	0
  1246   000D28  6E46               	movwf	LCD_Write@mode^0,c
  1247   000D2A  0E20               	movlw	32
  1248   000D2C  EC39  F007         	call	_LCD_Write
  1249   000D30                     l1281:
  1250                           
  1251                           ;./LCD_16x2.h: 689:     while (LCD_Busy()) {
  1252   000D30  EC72  F007         	call	_LCD_Busy	;wreg free
  1253   000D34  0900               	iorlw	0
  1254   000D36  A4D8               	btfss	status,2,c
  1255   000D38  EFA0  F006         	goto	u791
  1256   000D3C  EFA2  F006         	goto	u790
  1257   000D40                     u791:
  1258   000D40  EF98  F006         	goto	l1281
  1259   000D44                     u790:
  1260   000D44                     l1283:
  1261   000D44  EC72  F007         	call	_LCD_Busy	;wreg free
  1262   000D48  0900               	iorlw	0
  1263   000D4A  A4D8               	btfss	status,2,c
  1264   000D4C  EFAA  F006         	goto	u801
  1265   000D50  EFAC  F006         	goto	u800
  1266   000D54                     u801:
  1267   000D54  EFA2  F006         	goto	l1283
  1268   000D58                     u800:
  1269   000D58  9689               	bcf	137,3,c	;volatile
  1270   000D5A  0E01               	movlw	1
  1271   000D5C  6E46               	movwf	LCD_Write@mode^0,c
  1272   000D5E  0E28               	movlw	40
  1273   000D60  EC39  F007         	call	_LCD_Write
  1274   000D64                     
  1275                           ;./LCD_16x2.h: 695:     _displaycontrol = 0x04 | 0x00 | 0x00;
  1276   000D64  0E04               	movlw	4
  1277   000D66  6E53               	movwf	__displaycontrol^0,c
  1278   000D68                     l1289:
  1279   000D68  EC72  F007         	call	_LCD_Busy	;wreg free
  1280   000D6C  0900               	iorlw	0
  1281   000D6E  A4D8               	btfss	status,2,c
  1282   000D70  EFBC  F006         	goto	u811
  1283   000D74  EFBE  F006         	goto	u810
  1284   000D78                     u811:
  1285   000D78  EFB4  F006         	goto	l1289
  1286   000D7C                     u810:
  1287   000D7C  9689               	bcf	137,3,c	;volatile
  1288   000D7E  0E01               	movlw	1
  1289   000D80  6E46               	movwf	LCD_Write@mode^0,c
  1290   000D82  5053               	movf	__displaycontrol^0,w,c
  1291   000D84  0908               	iorlw	8
  1292   000D86  EC39  F007         	call	_LCD_Write
  1293   000D8A                     
  1294                           ;./LCD_16x2.h: 698:     _displaymode = 0x02 | 0x00;
  1295   000D8A  0E02               	movlw	2
  1296   000D8C  6E52               	movwf	__displaymode^0,c
  1297   000D8E                     l1295:
  1298   000D8E  EC72  F007         	call	_LCD_Busy	;wreg free
  1299   000D92  0900               	iorlw	0
  1300   000D94  A4D8               	btfss	status,2,c
  1301   000D96  EFCF  F006         	goto	u821
  1302   000D9A  EFD1  F006         	goto	u820
  1303   000D9E                     u821:
  1304   000D9E  EFC7  F006         	goto	l1295
  1305   000DA2                     u820:
  1306   000DA2  9689               	bcf	137,3,c	;volatile
  1307   000DA4  0E01               	movlw	1
  1308   000DA6  6E46               	movwf	LCD_Write@mode^0,c
  1309   000DA8  5052               	movf	__displaymode^0,w,c
  1310   000DAA  0904               	iorlw	4
  1311   000DAC  EC39  F007         	call	_LCD_Write
  1312   000DB0                     l1299:
  1313   000DB0  EC72  F007         	call	_LCD_Busy	;wreg free
  1314   000DB4  0900               	iorlw	0
  1315   000DB6  A4D8               	btfss	status,2,c
  1316   000DB8  EFE0  F006         	goto	u831
  1317   000DBC  EFE2  F006         	goto	u830
  1318   000DC0                     u831:
  1319   000DC0  EFD8  F006         	goto	l1299
  1320   000DC4                     u830:
  1321   000DC4  9689               	bcf	137,3,c	;volatile
  1322   000DC6  0E01               	movlw	1
  1323   000DC8  6E46               	movwf	LCD_Write@mode^0,c
  1324   000DCA  0E01               	movlw	1
  1325   000DCC  EC39  F007         	call	_LCD_Write
  1326   000DD0                     l1303:
  1327   000DD0  EC72  F007         	call	_LCD_Busy	;wreg free
  1328   000DD4  0900               	iorlw	0
  1329   000DD6  A4D8               	btfss	status,2,c
  1330   000DD8  EFF0  F006         	goto	u841
  1331   000DDC  EFF2  F006         	goto	u840
  1332   000DE0                     u841:
  1333   000DE0  EFE8  F006         	goto	l1303
  1334   000DE4                     u840:
  1335   000DE4  9689               	bcf	137,3,c	;volatile
  1336   000DE6  0E01               	movlw	1
  1337   000DE8  6E46               	movwf	LCD_Write@mode^0,c
  1338   000DEA  0E02               	movlw	2
  1339   000DEC  EC39  F007         	call	_LCD_Write
  1340   000DF0  0012               	return		;funcret
  1341   000DF2                     __end_of_LCD_Init:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _LCD_CustomChar *****************
  1345 ;; Defined at:
  1346 ;;		line 741 in file "./LCD_16x2.h"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  pt              2    2[COMRAM] PTR void 
  1349 ;;		 -> C3(7), C2(7), C1(7), 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  i               1    6[COMRAM] unsigned char 
  1352 ;;  c               2    4[COMRAM] PTR unsigned char 
  1353 ;;		 -> C3(7), C2(7), C1(7), 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         2       0       0       0       0       0       0       0       0
  1364 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1366 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        5 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 1
  1370 ;; This function calls:
  1371 ;;		_LCD_Busy
  1372 ;;		_LCD_Write
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text3
  1379   000F32                     __ptext3:
  1380                           	callstack 0
  1381   000F32                     _LCD_CustomChar:
  1382                           	callstack 29
  1383   000F32                     
  1384                           ;./LCD_16x2.h: 742:     unsigned char *c = pt;
  1385   000F32  C048  F04A         	movff	LCD_CustomChar@pt,LCD_CustomChar@c
  1386   000F36  C049  F04B         	movff	LCD_CustomChar@pt+1,LCD_CustomChar@c+1
  1387   000F3A                     
  1388                           ;./LCD_16x2.h: 743:     for (char i = 0; i < 8; i++) {
  1389   000F3A  0E00               	movlw	0
  1390   000F3C  6E4C               	movwf	LCD_CustomChar@i^0,c
  1391   000F3E                     l1325:
  1392   000F3E  EC72  F007         	call	_LCD_Busy	;wreg free
  1393   000F42  0900               	iorlw	0
  1394   000F44  A4D8               	btfss	status,2,c
  1395   000F46  EFA7  F007         	goto	u891
  1396   000F4A  EFA9  F007         	goto	u890
  1397   000F4E                     u891:
  1398   000F4E  EF9F  F007         	goto	l1325
  1399   000F52                     u890:
  1400   000F52  8689               	bsf	137,3,c	;volatile
  1401   000F54  0E01               	movlw	1
  1402   000F56  6E46               	movwf	LCD_Write@mode^0,c
  1403   000F58  C04A  FFD9         	movff	LCD_CustomChar@c,fsr2l
  1404   000F5C  C04B  FFDA         	movff	LCD_CustomChar@c+1,fsr2h
  1405   000F60  50DF               	movf	indf2,w,c
  1406   000F62  EC39  F007         	call	_LCD_Write
  1407   000F66                     
  1408                           ;./LCD_16x2.h: 745:         c++;
  1409   000F66  4A4A               	infsnz	LCD_CustomChar@c^0,f,c
  1410   000F68  2A4B               	incf	(LCD_CustomChar@c+1)^0,f,c
  1411   000F6A                     
  1412                           ;./LCD_16x2.h: 746:     }
  1413   000F6A  2A4C               	incf	LCD_CustomChar@i^0,f,c
  1414   000F6C  0E07               	movlw	7
  1415   000F6E  644C               	cpfsgt	LCD_CustomChar@i^0,c
  1416   000F70  EFBC  F007         	goto	u901
  1417   000F74  EFBE  F007         	goto	u900
  1418   000F78                     u901:
  1419   000F78  EF9F  F007         	goto	l1325
  1420   000F7C                     u900:
  1421   000F7C  0012               	return		;funcret
  1422   000F7E                     __end_of_LCD_CustomChar:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _LCD_Write *****************
  1426 ;; Defined at:
  1427 ;;		line 706 in file "./LCD_16x2.h"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  value           1    wreg     unsigned char 
  1430 ;;  mode            1    0[COMRAM] unsigned char 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  value           1    1[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         1       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_LCD_Init
  1452 ;;		_LCD_Text
  1453 ;;		_LCD_CustomChar
  1454 ;;		_main
  1455 ;;		_LCD_print_number
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text4
  1460   000E72                     __ptext4:
  1461                           	callstack 0
  1462   000E72                     _LCD_Write:
  1463                           	callstack 30
  1464                           
  1465                           ;incstack = 0
  1466                           ;LCD_Write@value stored from wreg
  1467   000E72  6E47               	movwf	LCD_Write@value^0,c
  1468   000E74                     
  1469                           ;./LCD_16x2.h: 707:     LCD_data.all = value;
  1470   000E74  C047  F054         	movff	LCD_Write@value,_LCD_data
  1471   000E78                     
  1472                           ;./LCD_16x2.h: 709:     LATAbits.LATA1 = 0;
  1473   000E78  9289               	bcf	137,1,c	;volatile
  1474   000E7A                     
  1475                           ;./LCD_16x2.h: 711:     LATAbits.LATA7 = LCD_data.bit7;
  1476   000E7A  AE54               	btfss	_LCD_data^0,7,c
  1477   000E7C  D002               	bra	u705
  1478   000E7E  8E89               	bsf	137,7,c	;volatile
  1479   000E80  D001               	bra	u707
  1480   000E82                     u705:
  1481   000E82  9E89               	bcf	137,7,c	;volatile
  1482   000E84                     u707:
  1483   000E84                     
  1484                           ;./LCD_16x2.h: 712:     LATAbits.LATA6 = LCD_data.bit6;
  1485   000E84  AC54               	btfss	_LCD_data^0,6,c
  1486   000E86  D002               	bra	u715
  1487   000E88  8C89               	bsf	137,6,c	;volatile
  1488   000E8A  D001               	bra	u717
  1489   000E8C                     u715:
  1490   000E8C  9C89               	bcf	137,6,c	;volatile
  1491   000E8E                     u717:
  1492   000E8E                     
  1493                           ;./LCD_16x2.h: 713:     LATAbits.LATA5 = LCD_data.bit5;
  1494   000E8E  AA54               	btfss	_LCD_data^0,5,c
  1495   000E90  D002               	bra	u725
  1496   000E92  8A89               	bsf	137,5,c	;volatile
  1497   000E94  D001               	bra	u727
  1498   000E96                     u725:
  1499   000E96  9A89               	bcf	137,5,c	;volatile
  1500   000E98                     u727:
  1501   000E98                     
  1502                           ;./LCD_16x2.h: 714:     LATAbits.LATA4 = LCD_data.bit4;
  1503   000E98  A854               	btfss	_LCD_data^0,4,c
  1504   000E9A  D002               	bra	u735
  1505   000E9C  8889               	bsf	137,4,c	;volatile
  1506   000E9E  D001               	bra	u737
  1507   000EA0                     u735:
  1508   000EA0  9889               	bcf	137,4,c	;volatile
  1509   000EA2                     u737:
  1510   000EA2                     
  1511                           ;./LCD_16x2.h: 716:     LATAbits.LATA2 = 1; _delay((unsigned long)((1)*(1000000/4000000.
      +                          0))); LATAbits.LATA2 = 0;;
  1512   000EA2  8489               	bsf	137,2,c	;volatile
  1513   000EA4  9489               	bcf	137,2,c	;volatile
  1514   000EA6                     
  1515                           ;./LCD_16x2.h: 717:     if (mode) {
  1516   000EA6  5046               	movf	LCD_Write@mode^0,w,c
  1517   000EA8  B4D8               	btfsc	status,2,c
  1518   000EAA  EF59  F007         	goto	u741
  1519   000EAE  EF5B  F007         	goto	u740
  1520   000EB2                     u741:
  1521   000EB2  EF71  F007         	goto	l47
  1522   000EB6                     u740:
  1523   000EB6                     
  1524                           ;./LCD_16x2.h: 719:         LATAbits.LATA7 = LCD_data.bit3;
  1525   000EB6  A654               	btfss	_LCD_data^0,3,c
  1526   000EB8  D002               	bra	u755
  1527   000EBA  8E89               	bsf	137,7,c	;volatile
  1528   000EBC  D001               	bra	u757
  1529   000EBE                     u755:
  1530   000EBE  9E89               	bcf	137,7,c	;volatile
  1531   000EC0                     u757:
  1532                           
  1533                           ;./LCD_16x2.h: 720:         LATAbits.LATA6 = LCD_data.bit2;
  1534   000EC0  A454               	btfss	_LCD_data^0,2,c
  1535   000EC2  D002               	bra	u765
  1536   000EC4  8C89               	bsf	137,6,c	;volatile
  1537   000EC6  D001               	bra	u767
  1538   000EC8                     u765:
  1539   000EC8  9C89               	bcf	137,6,c	;volatile
  1540   000ECA                     u767:
  1541                           
  1542                           ;./LCD_16x2.h: 721:         LATAbits.LATA5 = LCD_data.bit1;
  1543   000ECA  A254               	btfss	_LCD_data^0,1,c
  1544   000ECC  D002               	bra	u775
  1545   000ECE  8A89               	bsf	137,5,c	;volatile
  1546   000ED0  D001               	bra	u777
  1547   000ED2                     u775:
  1548   000ED2  9A89               	bcf	137,5,c	;volatile
  1549   000ED4                     u777:
  1550                           
  1551                           ;./LCD_16x2.h: 722:         LATAbits.LATA4 = LCD_data.bit0;
  1552   000ED4  A054               	btfss	_LCD_data^0,0,c
  1553   000ED6  D002               	bra	u785
  1554   000ED8  8889               	bsf	137,4,c	;volatile
  1555   000EDA  D001               	bra	u787
  1556   000EDC                     u785:
  1557   000EDC  9889               	bcf	137,4,c	;volatile
  1558   000EDE                     u787:
  1559                           
  1560                           ;./LCD_16x2.h: 723:         LATAbits.LATA2 = 1; _delay((unsigned long)((1)*(1000000/4000
      +                          000.0))); LATAbits.LATA2 = 0;;
  1561   000EDE  8489               	bsf	137,2,c	;volatile
  1562   000EE0  9489               	bcf	137,2,c	;volatile
  1563   000EE2                     l47:
  1564   000EE2  0012               	return		;funcret
  1565   000EE4                     __end_of_LCD_Write:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _LCD_Busy *****************
  1569 ;; Defined at:
  1570 ;;		line 774 in file "./LCD_16x2.h"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      unsigned char 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1587 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_LCD_Init
  1594 ;;		_LCD_Text
  1595 ;;		_LCD_CustomChar
  1596 ;;		_main
  1597 ;;		_LCD_print_number
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text5
  1602   000EE4                     __ptext5:
  1603                           	callstack 0
  1604   000EE4                     _LCD_Busy:
  1605                           	callstack 29
  1606   000EE4                     
  1607                           ;./LCD_16x2.h: 776:     if (LCD_busy_cnt >= 100) {
  1608   000EE4  0E63               	movlw	99
  1609   000EE6  6455               	cpfsgt	_LCD_busy_cnt^0,c
  1610   000EE8  EF78  F007         	goto	u101
  1611   000EEC  EF7A  F007         	goto	u100
  1612   000EF0                     u101:
  1613   000EF0  EF7F  F007         	goto	l87
  1614   000EF4                     u100:
  1615   000EF4                     l893:
  1616                           
  1617                           ;./LCD_16x2.h: 777:         LCD_busy_cnt = 1;
  1618   000EF4  0E01               	movlw	1
  1619   000EF6  6E55               	movwf	_LCD_busy_cnt^0,c
  1620   000EF8                     
  1621                           ;./LCD_16x2.h: 778:         return 0;
  1622   000EF8  0E00               	movlw	0
  1623   000EFA  EF98  F007         	goto	l88
  1624   000EFE                     l87:
  1625                           
  1626                           ;./LCD_16x2.h: 781:     LATAbits.LATA1 = 1;
  1627   000EFE  8289               	bsf	137,1,c	;volatile
  1628                           
  1629                           ;./LCD_16x2.h: 782:     LATAbits.LATA3 = 0;
  1630   000F00  9689               	bcf	137,3,c	;volatile
  1631   000F02                     
  1632                           ;./LCD_16x2.h: 783:     TRISA |= 0xF0;
  1633   000F02  0EF0               	movlw	240
  1634   000F04  1292               	iorwf	146,f,c	;volatile
  1635   000F06                     
  1636                           ;./LCD_16x2.h: 784:     LATAbits.LATA2 = 1;;
  1637   000F06  8489               	bsf	137,2,c	;volatile
  1638   000F08                     
  1639                           ;./LCD_16x2.h: 786:     LCD_data.bit7 = PORTAbits.RA7;
  1640   000F08  AE80               	btfss	128,7,c	;volatile
  1641   000F0A  D002               	bra	u115
  1642   000F0C  8E54               	bsf	_LCD_data^0,7,c
  1643   000F0E  D001               	bra	u117
  1644   000F10                     u115:
  1645   000F10  9E54               	bcf	_LCD_data^0,7,c
  1646   000F12                     u117:
  1647   000F12                     
  1648                           ;./LCD_16x2.h: 787:     LATAbits.LATA2 = 0;;
  1649   000F12  9489               	bcf	137,2,c	;volatile
  1650   000F14                     
  1651                           ;./LCD_16x2.h: 788:     LATAbits.LATA2 = 1;;
  1652   000F14  8489               	bsf	137,2,c	;volatile
  1653   000F16                     
  1654                           ;./LCD_16x2.h: 790:     LATAbits.LATA2 = 0;;
  1655   000F16  9489               	bcf	137,2,c	;volatile
  1656                           
  1657                           ;./LCD_16x2.h: 792:     TRISA &= 0x0F;
  1658   000F18  0E0F               	movlw	15
  1659   000F1A  1692               	andwf	146,f,c	;volatile
  1660   000F1C                     
  1661                           ;./LCD_16x2.h: 793:     LATAbits.LATA1 = 0;
  1662   000F1C  9289               	bcf	137,1,c	;volatile
  1663   000F1E                     
  1664                           ;./LCD_16x2.h: 796:     if (LCD_data.bit7 == 1) {
  1665   000F1E  AE54               	btfss	_LCD_data^0,7,c
  1666   000F20  EF94  F007         	goto	u121
  1667   000F24  EF96  F007         	goto	u120
  1668   000F28                     u121:
  1669   000F28  EF7A  F007         	goto	l893
  1670   000F2C                     u120:
  1671   000F2C                     
  1672                           ;./LCD_16x2.h: 797:         LCD_busy_cnt++;
  1673   000F2C  2A55               	incf	_LCD_busy_cnt^0,f,c
  1674   000F2E                     
  1675                           ;./LCD_16x2.h: 798:         return 1;
  1676   000F2E  0E01               	movlw	1
  1677   000F30                     l88:
  1678   000F30  0012               	return		;funcret
  1679   000F32                     __end_of_LCD_Busy:
  1680                           	callstack 0
  1681                           
  1682                           	psect	rparam
  1683   000000                     
  1684                           	psect	idloc
  1685                           
  1686                           ;Config register IDLOC0 @ 0x200000
  1687                           ;	unspecified, using default values
  1688   200000                     	org	2097152
  1689   200000  FF                 	db	255
  1690                           
  1691                           ;Config register IDLOC1 @ 0x200001
  1692                           ;	unspecified, using default values
  1693   200001                     	org	2097153
  1694   200001  FF                 	db	255
  1695                           
  1696                           ;Config register IDLOC2 @ 0x200002
  1697                           ;	unspecified, using default values
  1698   200002                     	org	2097154
  1699   200002  FF                 	db	255
  1700                           
  1701                           ;Config register IDLOC3 @ 0x200003
  1702                           ;	unspecified, using default values
  1703   200003                     	org	2097155
  1704   200003  FF                 	db	255
  1705                           
  1706                           ;Config register IDLOC4 @ 0x200004
  1707                           ;	unspecified, using default values
  1708   200004                     	org	2097156
  1709   200004  FF                 	db	255
  1710                           
  1711                           ;Config register IDLOC5 @ 0x200005
  1712                           ;	unspecified, using default values
  1713   200005                     	org	2097157
  1714   200005  FF                 	db	255
  1715                           
  1716                           ;Config register IDLOC6 @ 0x200006
  1717                           ;	unspecified, using default values
  1718   200006                     	org	2097158
  1719   200006  FF                 	db	255
  1720                           
  1721                           ;Config register IDLOC7 @ 0x200007
  1722                           ;	unspecified, using default values
  1723   200007                     	org	2097159
  1724   200007  FF                 	db	255
  1725                           
  1726                           	psect	config
  1727                           
  1728                           ;Config register CONFIG1L @ 0x300000
  1729                           ;	unspecified, using default values
  1730                           ;	PLL Selection
  1731                           ;	PLLSEL = 0x0, unprogrammed default
  1732                           ;	PLL Enable Configuration bit
  1733                           ;	CFGPLLEN = 0x0, unprogrammed default
  1734                           ;	CPU System Clock Postscaler
  1735                           ;	CPUDIV = 0x0, unprogrammed default
  1736                           ;	Low Speed USB mode with 48 MHz system clock
  1737                           ;	LS48MHZ = 0x0, unprogrammed default
  1738   300000                     	org	3145728
  1739   300000  00                 	db	0
  1740                           
  1741                           ;Config register CONFIG1H @ 0x300001
  1742                           ;	unspecified, using default values
  1743                           ;	Oscillator Selection
  1744                           ;	FOSC = 0x5, unprogrammed default
  1745                           ;	Primary Oscillator Shutdown
  1746                           ;	PCLKEN = 0x1, unprogrammed default
  1747                           ;	Fail-Safe Clock Monitor
  1748                           ;	FCMEN = 0x0, unprogrammed default
  1749                           ;	Internal/External Oscillator Switchover
  1750                           ;	IESO = 0x0, unprogrammed default
  1751   300001                     	org	3145729
  1752   300001  25                 	db	37
  1753                           
  1754                           ;Config register CONFIG2L @ 0x300002
  1755                           ;	unspecified, using default values
  1756                           ;	Power-up Timer Enable
  1757                           ;	nPWRTEN = 0x1, unprogrammed default
  1758                           ;	Brown-out Reset Enable
  1759                           ;	BOREN = 0x3, unprogrammed default
  1760                           ;	Brown-out Reset Voltage
  1761                           ;	BORV = 0x3, unprogrammed default
  1762                           ;	Low-Power Brown-out Reset
  1763                           ;	nLPBOR = 0x1, unprogrammed default
  1764   300002                     	org	3145730
  1765   300002  5F                 	db	95
  1766                           
  1767                           ;Config register CONFIG2H @ 0x300003
  1768                           ;	unspecified, using default values
  1769                           ;	Watchdog Timer Enable bits
  1770                           ;	WDTEN = 0x3, unprogrammed default
  1771                           ;	Watchdog Timer Postscaler
  1772                           ;	WDTPS = 0xF, unprogrammed default
  1773   300003                     	org	3145731
  1774   300003  3F                 	db	63
  1775                           
  1776                           ; Padding undefined space
  1777   300004                     	org	3145732
  1778   300004  FF                 	db	255
  1779                           
  1780                           ;Config register CONFIG3H @ 0x300005
  1781                           ;	unspecified, using default values
  1782                           ;	CCP2 MUX bit
  1783                           ;	CCP2MX = 0x1, unprogrammed default
  1784                           ;	PORTB A/D Enable bit
  1785                           ;	PBADEN = 0x1, unprogrammed default
  1786                           ;	Timer3 Clock Input MUX bit
  1787                           ;	T3CMX = 0x1, unprogrammed default
  1788                           ;	SDO Output MUX bit
  1789                           ;	SDOMX = 0x1, unprogrammed default
  1790                           ;	Master Clear Reset Pin Enable
  1791                           ;	MCLRE = 0x1, unprogrammed default
  1792   300005                     	org	3145733
  1793   300005  D3                 	db	211
  1794                           
  1795                           ;Config register CONFIG4L @ 0x300006
  1796                           ;	unspecified, using default values
  1797                           ;	Stack Full/Underflow Reset
  1798                           ;	STVREN = 0x1, unprogrammed default
  1799                           ;	Single-Supply ICSP Enable bit
  1800                           ;	LVP = 0x1, unprogrammed default
  1801                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1802                           ;	ICPRT = 0x0, unprogrammed default
  1803                           ;	Extended Instruction Set Enable bit
  1804                           ;	XINST = 0x0, unprogrammed default
  1805                           ;	Background Debugger Enable bit
  1806                           ;	DEBUG = 0x1, unprogrammed default
  1807   300006                     	org	3145734
  1808   300006  85                 	db	133
  1809                           
  1810                           ; Padding undefined space
  1811   300007                     	org	3145735
  1812   300007  FF                 	db	255
  1813                           
  1814                           ;Config register CONFIG5L @ 0x300008
  1815                           ;	unspecified, using default values
  1816                           ;	Block 0 Code Protect
  1817                           ;	CP0 = 0x1, unprogrammed default
  1818                           ;	Block 1 Code Protect
  1819                           ;	CP1 = 0x1, unprogrammed default
  1820                           ;	Block 2 Code Protect
  1821                           ;	CP2 = 0x1, unprogrammed default
  1822                           ;	Block 3 Code Protect
  1823                           ;	CP3 = 0x1, unprogrammed default
  1824   300008                     	org	3145736
  1825   300008  0F                 	db	15
  1826                           
  1827                           ;Config register CONFIG5H @ 0x300009
  1828                           ;	unspecified, using default values
  1829                           ;	Boot Block Code Protect
  1830                           ;	CPB = 0x1, unprogrammed default
  1831                           ;	Data EEPROM Code Protect
  1832                           ;	CPD = 0x1, unprogrammed default
  1833   300009                     	org	3145737
  1834   300009  C0                 	db	192
  1835                           
  1836                           ;Config register CONFIG6L @ 0x30000A
  1837                           ;	unspecified, using default values
  1838                           ;	Block 0 Write Protect
  1839                           ;	WRT0 = 0x1, unprogrammed default
  1840                           ;	Block 1 Write Protect
  1841                           ;	WRT1 = 0x1, unprogrammed default
  1842                           ;	Block 2 Write Protect
  1843                           ;	WRT2 = 0x1, unprogrammed default
  1844                           ;	Block 3 Write Protect
  1845                           ;	WRT3 = 0x1, unprogrammed default
  1846   30000A                     	org	3145738
  1847   30000A  0F                 	db	15
  1848                           
  1849                           ;Config register CONFIG6H @ 0x30000B
  1850                           ;	unspecified, using default values
  1851                           ;	Configuration Registers Write Protect
  1852                           ;	WRTC = 0x1, unprogrammed default
  1853                           ;	Boot Block Write Protect
  1854                           ;	WRTB = 0x1, unprogrammed default
  1855                           ;	Data EEPROM Write Protect
  1856                           ;	WRTD = 0x1, unprogrammed default
  1857   30000B                     	org	3145739
  1858   30000B  E0                 	db	224
  1859                           
  1860                           ;Config register CONFIG7L @ 0x30000C
  1861                           ;	unspecified, using default values
  1862                           ;	Block 0 Table Read Protect
  1863                           ;	EBTR0 = 0x1, unprogrammed default
  1864                           ;	Block 1 Table Read Protect
  1865                           ;	EBTR1 = 0x1, unprogrammed default
  1866                           ;	Block 2 Table Read Protect
  1867                           ;	EBTR2 = 0x1, unprogrammed default
  1868                           ;	Block 3 Table Read Protect
  1869                           ;	EBTR3 = 0x1, unprogrammed default
  1870   30000C                     	org	3145740
  1871   30000C  0F                 	db	15
  1872                           
  1873                           ;Config register CONFIG7H @ 0x30000D
  1874                           ;	unspecified, using default values
  1875                           ;	Boot Block Table Read Protect
  1876                           ;	EBTRB = 0x1, unprogrammed default
  1877   30000D                     	org	3145741
  1878   30000D  40                 	db	64
  1879                           tosu	equ	0xFFF
  1880                           tosh	equ	0xFFE
  1881                           tosl	equ	0xFFD
  1882                           stkptr	equ	0xFFC
  1883                           pclatu	equ	0xFFB
  1884                           pclath	equ	0xFFA
  1885                           pcl	equ	0xFF9
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           indf0	equ	0xFEF
  1893                           postinc0	equ	0xFEE
  1894                           postdec0	equ	0xFED
  1895                           preinc0	equ	0xFEC
  1896                           plusw0	equ	0xFEB
  1897                           fsr0h	equ	0xFEA
  1898                           fsr0l	equ	0xFE9
  1899                           wreg	equ	0xFE8
  1900                           indf1	equ	0xFE7
  1901                           postinc1	equ	0xFE6
  1902                           postdec1	equ	0xFE5
  1903                           preinc1	equ	0xFE4
  1904                           plusw1	equ	0xFE3
  1905                           fsr1h	equ	0xFE2
  1906                           fsr1l	equ	0xFE1
  1907                           bsr	equ	0xFE0
  1908                           indf2	equ	0xFDF
  1909                           postinc2	equ	0xFDE
  1910                           postdec2	equ	0xFDD
  1911                           preinc2	equ	0xFDC
  1912                           plusw2	equ	0xFDB
  1913                           fsr2h	equ	0xFDA
  1914                           fsr2l	equ	0xFD9
  1915                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        69
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_CustomChar@pt	PTR void  size(2) Largest target is 7
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), 

    LCD_CustomChar@c	PTR unsigned char  size(2) Largest target is 7
		 -> C3(COMRAM[7]), C2(COMRAM[7]), C1(COMRAM[7]), 

    LCD_Text@pt	PTR void  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 

    LCD_Text@text	PTR unsigned char  size(2) Largest target is 11
		 -> msg3(COMRAM[9]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_LCD_CustomChar
    _LCD_Text->_LCD_Write
    _LCD_Init->_LCD_Write
    _LCD_CustomChar->_LCD_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   11158
                                              7 COMRAM     5     5      0
                           _LCD_Busy
                     _LCD_CustomChar
                           _LCD_Init
                           _LCD_Text
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Text                                             4     2      2    2772
                                              2 COMRAM     4     2      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    2552
                                              2 COMRAM     1     1      0
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_CustomChar                                       5     3      2    2872
                                              2 COMRAM     5     3      2
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            2     1      1    2552
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Busy
   _LCD_CustomChar
     _LCD_Busy
     _LCD_Write
   _LCD_Init
     _LCD_Busy
     _LCD_Write
   _LCD_Text
     _LCD_Busy
     _LCD_Write
   _LCD_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          6D      0       0      20        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      55       1       89.5%
BITBIGSFRlll        2D      0       0      23        0.0%
BITBIGSFRllh         8      0       0      22        0.0%
BITBIGSFRlh          8      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      24        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Dec 03 02:49:44 2023

         _LCD_CustomChar 0F32                       _C1 003F                       _C2 0038  
                     _C3 0031                       l30 0D58                       l33 0D7C  
                     l42 0DE4                       l43 0DF0                       l36 0DA2  
                     l54 0E12                       l47 0EE2                       l63 0F52  
                     l39 0DC4                       l64 0F7C                       l56 0E70  
                     l87 0EFE                       l88 0F30                      l120 0852  
                    l123 087E                      l132 08F8                      l141 0942  
                    l117 0826                      l150 09C8                      l126 08AA  
                    l135 091C                      l144 0964                      l161 0A4A  
                    l129 08D6                      l147 09A0                      l156 0A04  
                    l173 0B5C                      l165 0A90                      l176 0B96  
                    l169 0AD6                      l179 0BBE                      l189 0C7E  
                    l901 0F06                      l911 0F16                      l903 0F08  
                    l921 0F2E                      l913 0F16                      l905 0F08  
                    l915 0F1C                      l907 0F12                      l917 0F1E  
                    l909 0F14                      l919 0F2C                      l891 0EE4  
                    l893 0EF4                      l895 0EF8                      l899 0F02  
                    u100 0EF4                      u101 0EF0                      u120 0F2C  
                    u121 0F28                      u115 0F10                      u117 0F12  
                    u800 0D58                      u705 0E82                      u801 0D54  
                    u810 0D7C                      u715 0E8C                      u707 0E84  
                    u811 0D78                      u740 0EB6                      u900 0F7C  
                    u820 0DA2                      u741 0EB2                      u725 0E96  
                    u717 0E8E                      u901 0F78                      u821 0D9E  
                    u830 0DC4                      u735 0EA0                      u727 0E98  
                    u831 0DC0                      u840 0DE4                      u737 0EA2  
                    u841 0DE0                      u850 0E12                      u755 0EBE  
                    u851 0E0E                      u860 0E38                      u765 0EC8  
                    u757 0EC0                      u790 0D44                      u870 0E60  
                    u775 0ED2                      u767 0ECA                      u791 0D40  
                    u880 0E70                      u785 0EDC                      u777 0ED4  
                    u881 0E6C                      u890 0F52                      u787 0EDE  
                    u891 0F4E                      u867 0E2E                      u980 0826  
                    u877 0E56                      u981 0822                      u990 0852  
                    u991 084E                      wreg 0FE8                     l1301 0DC6  
                   l1231 0E78                     l1303 0DD0                     l1311 0E14  
                   l1241 0EA2                     l1233 0E7A                     l1305 0DE6  
                   l1313 0E3C                     l1401 08E2                     l1243 0EA4  
                   l1235 0E84                     l1331 0F6A                     l1251 0CC6  
                   l1315 0E40                     l1307 0DF2                     l1411 091E  
                   l1403 08E4                     l1245 0EA4                     l1237 0E8E  
                   l1229 0E74                     l1333 0F6C                     l1325 0F3E  
                   l1317 0F32                     l1261 0CEA                     l1253 0CD2  
                   l1309 0DFE                     l1501 0BD0                     l1421 0944  
                   l1413 092A                     l1405 08FA                     l1247 0EA6  
                   l1239 0E98                     l1327 0F54                     l1319 0F3A  
                   l1271 0D10                     l1263 0CF4                     l1255 0CD6  
                   l1503 0BEA                     l1511 0C38                     l1431 098A  
                   l1423 094E                     l1407 0906                     l1249 0EB6  
                   l1329 0F66                     l1281 0D30                     l1273 0D12  
                   l1265 0CFC                     l1257 0CDA                     l1521 0C9C  
                   l1505 0C04                     l1513 0C6A                     l1441 09B4  
                   l1433 098C                     l1425 0950                     l1409 0908  
                   l1291 0D7E                     l1283 0D44                     l1275 0D1C  
                   l1267 0CFE                     l1259 0CE8                     l1523 0CAC  
                   l1515 0C80                     l1507 0C1E                     l1451 0A20  
                   l1443 09CA                     l1435 09A2                     l1427 0966  
                   l1419 092E                     l1371 080E                     l1293 0D8A  
                   l1285 0D5A                     l1277 0D24                     l1269 0D08  
                   l1525 0CAE                     l1517 0C8A                     l1461 0A92  
                   l1453 0A36                     l1445 09DA                     l1437 09AE  
                   l1429 0972                     l1381 0854                     l1373 0812  
                   l1295 0D8E                     l1287 0D64                     l1279 0D26  
                   l1519 0C8C                     l1463 0AAC                     l1455 0A4C  
                   l1447 09F0                     l1471 0AF2                     l1439 09B2  
                   l1391 0896                     l1383 085E                     l1375 0828  
                   l1297 0DA4                     l1289 0D68                     l1481 0B48  
                   l1465 0AC2                     l1457 0A66                     l1473 0B24  
                   l1449 0A06                     l1393 08AC                     l1385 086A  
                   l1377 0832                     l1299 0DB0                     l1491 0B98  
                   l1483 0B5E                     l1475 0B26                     l1547 0B06  
                   l1467 0AD8                     l1459 0A7C                     l1395 08B6  
                   l1387 0880                     l1379 083E                     l1549 0C4C  
                   l1493 0BA4                     l1485 0B6A                     l1477 0B36  
                   l1397 08C2                     l1389 088A                     l1495 0BA8  
                   l1487 0B80                     l1479 0B46                     l1399 08D8  
                   l1497 0BAA                     l1489 0B82                     l1499 0BC0  
                   STR_1 0801                     u1000 087E                     u1001 087A  
                   u1010 08AA                     u1011 08A6                     u1100 09EE  
                   u1020 08D6                     u1021 08D2                     u1110 0A04  
                   u1030 08F8                     u1111 0A00                     u1031 08F4  
                   u1200 0AD6                     u1120 0A32                     u1040 091C  
                   u1201 0AD2                     u1121 0A2C                     u1041 0918  
                   u1210 0B46                     u1130 0A34                     u1050 0942  
                   u1211 0B42                     u1051 093E                     u1300 0C18  
                   u1220 0B5C                     u1140 0A4A                     u1060 0964  
                   u1221 0B58                     u1141 0A46                     u1061 0960  
                   u1310 0C30                     u1230 0B96                     u1150 0A78  
                   u1070 09A0                     u1311 0C2A                     u1231 0B92  
                   u1151 0A72                     u1071 099C                     u1320 0C32  
                   u1240 0BBE                     u1160 0A7A                     u1080 09C8  
                   u1241 0BBA                     u1081 09C4                     u1330 0C7E  
                   u1250 0BE2                     u1170 0A90                     u1090 09EC  
                   u1331 0C7A                     u1251 0BDC                     u1171 0A8C  
                   u1091 09E6                     u1340 0CAC                     u1260 0BE4  
                   u1180 0ABE                     u1341 0CA8                     u1181 0AB8  
                   u1350 0CBE                     u1270 0BFC                     u1190 0AC0  
                   u1407 0CE0                     u1351 0CBA                     u1271 0BF6  
                   u1280 0BFE                     u1417 0CF6                     u1290 0C16  
                   u1427 0D0A                     u1291 0C10                     u1437 0D1E  
                   u1367 097C                     u1377 0B2C                     u1387 0B74  
                   u1397 0C92                     _cont 0027                     _main 080E  
                   _msg1 000D                     _msg2 0001                     _msg3 0028  
                   _msg4 001E                     _msg5 0018                     fsr0h 0FEA  
                   indf0 0FEF                     fsr2h 0FDA                     fsr0l 0FE9  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 0000   __end_of_LCD_CustomChar 0F7E             ___param_bank 0000  
       __end_of_LCD_Busy 0F32         __end_of_LCD_Init 0DF2         __end_of_LCD_Text 0E72  
                  ?_main 0046                    _TRISA 0F92          LCD_CustomChar@c 004A  
        LCD_CustomChar@i 004C                    main@i 0051                    main@j 0050  
                  tablat 0FF5                    status 0FD8          ?_LCD_CustomChar 0048  
        __initialization 0FC4             __end_of_main 0CC6                   ??_main 004D  
          __activetblptr 0002        __end_of_LCD_Write 0EE4             LCD_Text@text 004A  
           __displaymode 0052         LCD_CustomChar@pt 0048                   isa$std 0001  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 0FEA                ?_LCD_Busy 0046                ?_LCD_Init 0046  
              ?_LCD_Text 0048            ___rparam_used 0001           __pcstackCOMRAM 0046  
             ??_LCD_Busy 0046               ??_LCD_Init 0048               ??_LCD_Text 004A  
             __pnvCOMRAM 0055         ??_LCD_CustomChar 004A                  __Hparam 0000  
                __Lparam 0000            LCD_Write@mode 0046             __psmallconst 0800  
                __pcinit 0FC4                  __ramtop 0800                  __ptext0 080E  
                __ptext1 0DF2                  __ptext2 0CC6                  __ptext3 0F32  
                __ptext4 0E72                  __ptext5 0EE4          __displaycontrol 0053  
              _LCD_Write 0E72     end_of_initialization 0FEA            __Lmediumconst 0000  
                postdec1 0FE5                  postinc0 0FEE                _PORTAbits 0F80  
              _TRISAbits 0F92               ?_LCD_Write 0046               LCD_Text@pt 0048  
          __pidataCOMRAM 0F7E      start_initialization 0FC4             _LCD_busy_cnt 0055  
            __pbssCOMRAM 0052              ??_LCD_Write 0047                _displaybf 0023  
            __smallconst 0800                 _LCD_Busy 0EE4                 _LCD_Init 0CC6  
               _LCD_Text 0DF2                 _LATAbits 0F89                 _LCD_data 0054  
              main@valid 004F                copy_data0 0FD8                 __Hrparam 0000  
               __Lrparam 0000           LCD_Write@value 0047                 isa$xinst 0000  
